<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmlns:uml="http://www.omg.org/spec/UML/20110701"
         xmlns:xmi="http://www.omg.org/spec/XMI/20110701"
         xmlns:StandardProfileL3="http://www.omg.org/spec/UML/20110701/StandardProfileL3">
   <xmi:Documentation>
      <xmi:exporter>MagicDraw Clean XMI Exporter</xmi:exporter>
      <xmi:exporterVersion>17.0.5</xmi:exporterVersion>
   </xmi:Documentation>
   <xmi:Documentation>
      <xmi:exporter>MagicDraw Clean XMI Exporter</xmi:exporter>
      <xmi:exporterVersion>17.0.5</xmi:exporterVersion>
   </xmi:Documentation>
   <uml:Model xmi:type="uml:Model" xmi:id="Datal" name="Data">
      <packagedElement xmi:type="uml:Package"
                       xmi:id="NIEM_UML_Profile"
                       name="NIEM_UML_Profile">
         <ownedComment xmi:type="uml:Comment"
                       xmi:id="NIEM_UML_Profile-ownedComment"
                       body="NIEM-UML leverages three profiles. The NIEM PIM Profile is used for NIEM PIMs. The&#xA;          NIEM PSM Profile is used for NIEM PSMs and may also be used to mark up a NIEM PIM for&#xA;          direct provisioning of MPD artifacts. Both of these profiles import the NIEM Common&#xA;          Profile, which contains the core stereotypes used to represent NIEM structures in UML.&#xA;          Finally, the Model Package Description Profile is used for creating models of MPDs, which&#xA;          may be used in association with either NIEM PIMs or NIEM PSMs. For convenience, an overall&#xA;          NIEM UML Profile is also included, which imports the NIEM PIM, NIEM PSM and Model Package&#xA;          Description Profiles. Applying the single NIEM UML Profile is therefore equivalent to&#xA;          individually applying all three of the imported profiles.">
            <annotatedElement xmi:idref="NIEM_UML_Profile"/>
         </ownedComment>
         <packagedElement xmi:type="uml:Profile"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile"
                          name="NIEM_Common_Profile"
                          URI="http://www.omg.org/spec/NIEM-UML/20130801/NIEM_Common_Profile">
            <metamodelReference xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packageImport"/>
            <ownedComment xmi:type="uml:Comment"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ownedComment"
                          body="The NIEM Common Profile comprises stereotypes that are used in both the NIEM PIM&#xA;            Profile and the NIEM PSM Profile. In addition, the UML metamodel subset covered by the&#xA;            NIEM Common Profile also includes the metaclasses PrimitiveType, Enumeration,&#xA;            EnumerationLiteral, Property and Generalization, even though they are not specifically&#xA;            extended by any stereotypes in the profile.">
               <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile"/>
            </ownedComment>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packageImport">
               <importedPackage href="http://www.omg.org/spec/UML/20110701/UML.xmi#_0"/>
            </packageImport>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation"
                             name="Documentation">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A Documentation Comment is the data definition of the Element that&#xA;              owns it. Â For an Element owning only one Comment, that Comment will be inferred to be&#xA;              a Documentation Comment. &lt;/p&gt; &lt;p&gt; A Documentation Comment&#xA;              owned by an Element representing a NIEM type or property is implemented as a&#xA;              documentation element of the annotation for the corresponding type definition or&#xA;              property declaration. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              ng type definition or property declaration. &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Documentation"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-Max_One___Documentation___per_Elementt"
                          name="Max One &lt;&lt;Documentation&gt;&gt; per Element">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Documentation"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-Max_One___Documentation___per_Elementt-ownedComment"
                                body="The owner of a Documentation Comment must have no other Documentation Comments.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-Max_One___Documentation___per_Elementt"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-Max_One___Documentation___per_Elementt-specification">
                     <body>self.base_Comment.annotatedElement-&gt;notEmpty() and
                self.base_Comment.annotatedElement-&gt;forAll(e|e=self.base_Comment.owner) and
                (self.base_Comment.owner.ownedComment-&gt;select(c|c.stereotypedBy('Documentation'))-&gt;size()=1)
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-NDR__Rule_7-14_-specification">
                     <body>self.base_Comment.profiledBy('NIEM_PSM_Profile') implies ( (
                self.base_Comment.owner.stereotypedBy('AssociationType') implies
                self.base_Comment.body.startsWith('A relationship ') ) and (
                self.base_Comment.owner.stereotypedBy('AugmentationType') implies
                self.base_Comment.body.startsWith('Supplements ') ) and (
                self.base_Comment.owner.oclAsType(NamedElement).name.match('.*Indicator.*') implies
                self.base_Comment.body.startsWith('True if ') ) and (
                self.base_Comment.owner.oclIsKindOf(DataType) implies
                self.base_Comment.body.startsWith('A data type for ') ) ) ) if(
                (self.oclIsKindOf(ndr::ndrComplexTypeDefinition)and self.abstract) or
                (self.stereotypedBy('niem::ndr::ndrElementDeclaration')and self.abstract)
                )then(self.componentDefinition.startsWith('A data concept for a ') )else(
                if(self.stereotypedBy('niem::ndr::ndrRoleType'))
                then(self.componentDefinition.startsWith('Acts as ') )else( )else(
                if(self.stereotypedBy('niem::ndr::ndrSimpleTypeDefinition'))
                then(self.componentDefinition.startsWith('A data type for ') )else(
                self.componentDefinition.startsWith('A ') or self.componentDefinition.startsWith('An
                ') )endif )endif )endif )endif )endif )endif</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-base_Comment"
                               name="base_Comment"
                               visibility="public"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-16">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Comment"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType"
                             name="MetadataType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A MetadataType is a NIEMType Class that represents a NIEMÂ metadata&#xA;              type. A NIEMÂ metadata type describes data about data, that is, information that is not&#xA;              descriptive of objects and their relationships, but is descriptive of the data itself.&#xA;              Metadata is specified as an instance of a metadata type and may include information&#xA;              such as the security of a piece of data or the source of the data. The applicability&#xA;              of such metadata may be modeled using MetadataApplication dependencies to one or more&#xA;              classes representing the applicable types. &lt;/p&gt; &lt;p&gt;&#xA;              MetadataType is implemented in XML Schema as a complex type definition with complex&#xA;              content. Section 3.4 of &lt;a&#xA;              href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; addresses complex type definitions in XML Schema; Section&#xA;              7.4.4 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; addresses metadata types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; addresses metadata types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-44_"
                          name="NDR [Rule 7-44]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-44_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-44] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, a metadata type and only a metadata type SHALL be derived&#xA;                directly from structures:MetadataType. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; A metadata type establishes a specific,&#xA;                named aggregation of data about data. Any type derived from structures:MetadataType&#xA;                is a metadata type. Metadata types should not be derived from other metadata types.&#xA;                Such metadata types should be used as is and additional metadata types defined for&#xA;                additional content. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                additional metadata types defined for additional content. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-44_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-44_-specification">
                     <body>self.base_Class.general-&gt;select(g|g.stereotypedBy('MetadataType'))-&gt;isEmpty()</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and ( documentation.body.startsWith('A
                data type for metadata about ') or documentation.body.startsWith('A data type for
                information that further qualifies ') ) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_9-29_"
                          name="NDR [Rule 9-29]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_9-29_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-29] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any metadata type SHALL have a name that uses the representation&#xA;                term qualifier Metadata. Types other than metadata types SHALL NOT use the&#xA;                representation term qualifier Metadata. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Using the qualifier Metadata&#xA;                immediately identifies a type as representing metadata. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ies a type as representing metadata.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_9-29_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_9-29_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.name.match('.*MetadataType')) --For PIM Profile, the naming
                constraint is enforced by PIM/PSM transformations. </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-43_"
                          name="NDR [Rule 7-43]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-43_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-43] (REF, SUB, EXT)&lt;/b&gt; Within the schema, a&#xA;                metadata type SHALL contain elements appropriate for a specific class of data about&#xA;                data. &lt;/body&gt; &lt;/html&gt; ata. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-43_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-NDR__Rule_7-43_-specification">
                     <body>Containing Elements appropriate for a specific class of data about data is a
                Non-computational constraint. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType"
                             name="ObjectType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; ObjectType is a NIEMType Class that represents a NIEM object type. A&#xA;              NIEM object type represents some kind of object: a thing with its own lifespan that&#xA;              has some existence. The object may or may not be a physical object. It may be a&#xA;              conceptual object. &lt;/p&gt; &lt;p&gt; ObjectType is implemented in&#xA;              XML Schema as a complex type definition. Section 3.4 of &lt;a&#xA;              href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; addresses complex type definitions in XML Schema; Section&#xA;              7.4.1 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; addresses object types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; R&#xA;              v1.3&lt;/a&gt; addresses object types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-39___REF,_EXT_"
                          name="NDR [Rule 7-39] (REF, EXT)">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-39___REF,_EXT_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; Within the schema, an object type SHALL be a complex type&#xA;                definition that either constitutes a NIEM-conformant component or for which there&#xA;                exists a NIEM-conformant component of one of the following forms: &lt;/p&gt;&#xA;                &lt;ol&gt; &lt;li&gt; Has simple content, is based on a simple type,&#xA;                and contains the attribute group structures:SimpleObjectAttributeGroup, and has&#xA;                application information appinfo:Base of structures:Object. &lt;/li&gt;&#xA;                &lt;li&gt; Has complex content, and is based on complex type&#xA;                structures:ComplexObjectType, and has application information appinfo:Base of&#xA;                structures:Object. &lt;/li&gt; &lt;li&gt; Is a complex type that is&#xA;                derived from an object type, which is defined according to this rule.&#xA;                &lt;/li&gt; &lt;/ol&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;li&gt; Is a complex type that is derived from an object type, which is&#xA;                defined according to this rule. &lt;/li&gt; &lt;/ol&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/ol&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-39___REF,_EXT_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-39___REF,_EXT_-specification"/>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and ( documentation.body.startsWith('A
                data type for a ') or documentation.body.startsWith('A data type for an ') ) )
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ObjectType-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-4">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-4-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-base_Class"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-4-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-4-ownedEnd"
                         name="extension_ComplexType"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-4">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-4-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-5">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-5-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-base_Package"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-5-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-5-ownedEnd"
                         name="extension_NIEMNamespace"
                         visibility="public"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-Namespace"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-5">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-5-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataApplication"
                             name="MetadataApplication">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataApplication-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The MetadataApplication stereotype is a specialization of&#xA;              Application that is always between a MetadataType Class and another Class. It&#xA;              represents a constraint on a NIEM metadata type that limits the application of the&#xA;              NIEM metadata type to specific types. If a MetadataType Class is the client of a&#xA;              MetadataApplication Usage, then any Property with the MetadataType Class as its type&#xA;              must be for a Class that is a (direct or indirect) subclass of the supplier Class of&#xA;              the MetadataApplication. A MetadataType Class may be the client of multiple&#xA;              MetadataApplication Usages, in which case a Property for it may be in a Class that is&#xA;              a subclass of a supplier Class of any of the MetadataApplications. If a MetadataType&#xA;              is not a client of any MetadataApplication, then it applies to any type.&#xA;              &lt;/p&gt; &lt;p&gt; A MetadataApplication Usage is implemented in XML&#xA;              schema as a NIEM AppliesTo element in the annotation element of the complex type&#xA;              definition represented by the client of the Usage, referencing the complex type&#xA;              represented by the supplier class of the Usage. &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; d by the client of the Usage, referencing&#xA;              the complex type represented by the supplier class of the Usage. &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataApplication"/>
               </ownedComment>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-MetadataApplication-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction"
                             name="Restriction">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A Restriction Realization represents a relationship between two type&#xA;              definitions: the first is derived by restriction from the second. The two types must&#xA;              either both be NIEMType Classes or both be DataTypes. If the two types are Classes,&#xA;              then the attributes of the client class must be a subset of the attributes of the&#xA;              supplier class and omitted attributes must have a multiplicity lower bound of zero. if&#xA;              the two classes are DataTypes, then the client type is considered to have a value&#xA;              space that is a subset of that of the supplier, as may be further specified using a&#xA;              ValueRestriction stereotype on the client. &lt;/p&gt; &lt;p&gt; This&#xA;              relationship is implemented in XML Schema through the base attribute on the&#xA;              xsd:restriction element of the first type definition, the actual value of which&#xA;              resolves to the second type definition. If a type is a ValueRestriction the&#xA;              generalization owned by that type is implicitly an XSDRestriction. Sections 3.4 and&#xA;              3.14 of &lt;a&#xA;              href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; address the use of restriction in XML Schema; Sections&#xA;              6.5.2 and 6.5.3 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; address the use of restriction in NIEM-conformant XML&#xA;              Schema. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              ion/naming-and-design-rules/1.3/&#34;&gt;NIEM NDR v1.3&lt;/a&gt; address the&#xA;              use of restriction in NIEM-conformant XML Schema. &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; &gt; &lt;/body&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeComplexContent"
                          name="XSDRestrictionComplexTypeComplexContent">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeComplexContent-ownedComment"
                                body="If the general Classifier is a NIEMType that is not the client of a&#xA;                NIEMSimpleContent Realization, the specific Classifier must be a NIEMType that is&#xA;                not the client of a NIEMSimpleContent Realization.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeComplexContent"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeComplexContent-specification">
                     <body>self.base_Generalization.general.stereotypedBy('NIEMType') and
                self.base_Generalization.general.clientDependency-&gt;select(d|d.stereotypedBy('NIEMSimpleContent'))-&gt;isEmpty()
                implies
                self.base_Generalization.specificl.clientDependency-&gt;select(d|d.stereotypedBy('NIEMSimpleContent'))-&gt;isEmpty()</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-53_"
                          name="NDR [Rule 6-53]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-53_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-53] (REF) &lt;/b&gt;Within the&#xA;                schema, the element xsd:simpleContent MUST have as an immediate child the element&#xA;                xsd:extension. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This rule ensures that the definition&#xA;                of a CSC will use the XML Schema extension facility. This allows for the above cases&#xA;                while disallowing much more complicated syntactic options available in XML Schema.&#xA;                &lt;/p&gt; &lt;p&gt; Note that the applicability of the above rule&#xA;                allows for use of xsd:restriction within xsd:simpleContent in subset schemas,&#xA;                extension schemas, and exchange schemas. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; impleContent in subset schemas, extension schemas, and&#xA;                exchange schemas. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-53_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-53_-specification">
                     <body>self.base_Generalization.specific.owner.getStereotypeApplication('Namespace').purposeURI&lt;&gt;'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema'</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionSimpleType"
                          name="XSDRestrictionSimpleType">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionSimpleType-ownedComment"
                                body="If the general Classifier is a DataType, the specific Classifier must be a&#xA;                DataType.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionSimpleType"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionSimpleType-specification">
                     <body>self.base_Generalization.general.oclIsKindOf(DataType) implies
                self.base_Generalization.specific.oclIsKindOf(DataType) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-55_"
                          name="NDR [Rule 6-55]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-55_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-55] (REF)&lt;/b&gt; Within the&#xA;                schema, the element xsd:complexContent MUST have as an immediate child the element&#xA;                xsd:extension. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; NIEM does not support, as conformant,&#xA;                the use of complex type restriction. NIEM defines a language, in which specific&#xA;                content is allowed. It does not specify messages that forbid content. Such&#xA;                restrictions may be performed in nonconformant schemas or within constraint schemas&#xA;                or other artifacts of constraint. &lt;/p&gt; &lt;p&gt; Note that XML&#xA;                Schema requires use of the attribute base on xsd:extension. &lt;/p&gt;&#xA;                &lt;p&gt; Note also that the applicability allows for the use of restriction&#xA;                in subset schemas, extension schemas, exchange schemas, and constraint schemas.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; riction in subset&#xA;                schemas, extension schemas, exchange schemas, and constraint schemas.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-55_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-55_-specification">
                     <body>self.base_Generalization.specific.owner.getStereotypeApplication('Namespace').purposeURI&lt;&gt;'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema'</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-57_"
                          name="NDR [Rule 6-57]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-57_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-57] (EXT) &lt;/b&gt;Within the&#xA;                schema, given an element xsd:complexContent with a child xsd:restriction owning an&#xA;                attribute base, the attribute base MUST have a value that resolves to the name of a&#xA;                complex type that is a NIEM-conformant component. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rationale] &lt;/b&gt;This ensures that a&#xA;                CCC defined through restriction has well-defined semantics. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; triction has well-defined semantics.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-57_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-NDR__Rule_6-57_-specification">
                     <body>self.base_Generalization.general.stereotypedBy('NIEMType')</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeSimpleContent"
                          name="XSDRestrictionComplexTypeSimpleContent">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeSimpleContent-ownedComment"
                                body="If the general Classifier is a NIEMType that is the client of a&#xA;                NIEMSimpleContent Realization, the specific Classifier must be NIEMType that is the&#xA;                client of a NIEMSimpleContent Realization.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeSimpleContent"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-XSDRestrictionComplexTypeSimpleContent-specification">
                     <body>self.base_Generalization.general.stereotypedBy('NIEMType') and
                self.base_Generalization.general.clientDependency-&gt;select(d|d.stereotypedBy('XSDSimpleContent'))-&gt;notEmpty()
                implies self.base_Generalization.specific.stereotypedBy('NIEMType') and
                self.base_Generalization.specific.clientDependency-&gt;select(d|d.stereotypedBy('XSDSimpleContent'))-&gt;notEmpty()
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-base_Realization"
                               name="base_Realization"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-21">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Realization"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References"
                             name="References">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The References Stereotype applies to a Realization between&#xA;              Properties, Classes or Packages. It allows for Properties in one Class to be defined&#xA;              by reference to Properties in another class. A References Realization between two&#xA;              classes is defined to be equivalent to having References Realizations between matching&#xA;              Properties of the Classes where matching is determined by identical NIEMÂ names. A&#xA;              References Realization between two packages is defined to be equivalent to having&#xA;              References Realizations between matching Classes contained in the Packages where&#xA;              matching is determined by having identical NIEMÂ names. Matching is based on the&#xA;              NIEMName of the elements, either as derived implicitly or as set explicitly using the&#xA;              ReferenceName stereotype. &lt;/p&gt; &lt;p&gt; If a Property is the&#xA;              client of a References Realization, then it represents a NIEM property defined by&#xA;              reference to the NIEM property declaration represented by the supplier of the&#xA;              Realization. It is implemented in XSD schema as an attribute use or element particle&#xA;              that references the attribute or element declaration that implements the supplier of&#xA;              the Realization. Note that the supplier Property may be in a different Namespace than&#xA;              the client property, in which case the attribute or element declaration represented by&#xA;              the supplier will be in a different target namespace than the use represented by the&#xA;              client. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ute or element&#xA;              declaration represented by the supplier will be in a different target namespace than&#xA;              the use represented by the client. &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-References"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-References_must_be_between_like_metaclasses"
                          name="References must be between like metaclasses">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-References_must_be_between_like_metaclasses-ownedComment"
                                body="References may only be between packages, classifiers or properties and the&#xA;                metatype of the client must be the same as the metatype of the supplier.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-References-References_must_be_between_like_metaclasses"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-References_must_be_between_like_metaclasses-specification"/>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-MDR__Rule_3-02_"
                          name="MDR [Rule 3-02]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-References"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-MDR__Rule_3-02_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-2]&lt;/b&gt; NIEM subsets may omit elements with&#xA;                zero cardinality and adjust the cardinality of elements in reference schemas from&#xA;                which they are derived, as long as the subset property is maintained.&#xA;                &lt;/body&gt; &lt;/html&gt; intained. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-References-MDR__Rule_3-02_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-MDR__Rule_3-02_-specification">
                     <body>( self.base_Realization.client-&gt;size()=1) and (
                self.base_Realization.supplier-&gt;size()=1) and
                self.base_Realization.client-&gt;forAll(client|client.oclIsKindOf(Classifier))
                and
                self.base_Realization.supplier-&gt;forAll(supplier|supplier.oclIsKindOf(Classifier)
                and not(supplier.stereotypedBy('PropertyHolder')) ) ) implies ( (
                self.base_Realization.client.oclAsType(Classifier).attribute
                -&gt;forAll(clientAttribute|
                self.base_Realization.supplier.oclAsType(Classifier).attribute
                -&gt;forAll(supplierAttribute| (clientAttribute.name=supplierAttribute.name)
                implies ( (clientAttribute.lower&gt;=supplierAttribute.lower) and (
                (supplierAttribute.upper=-1) or
                (clientAttribute.upper&lt;=supplierAttribute.upper) ) and (
                (clientAttribute.upper=-1) or (clientAttribute.lower&lt;=clientAttribute.upper)
                ) ) ) ) ) and( self.base_Realization.supplier.oclAsType(Classifier).attribute
                -&gt;select(a|a.lower&gt;0) -&gt;forAll(supplierAttribute|
                self.base_Realization.client.oclAsType(Classifier).attribute-&gt;exists(clientAttribute|clientAttribute.name=supplierName)
                ) ) )</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-References-base_Realization"
                               name="base_Realization"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-31">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Realization"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction"
                             name="ValueRestriction">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The ValueRestriction stereotype applies to a DataType (Enumeration&#xA;              or Primitive type) that is a specialization of a general DataType. It defines&#xA;              restrictions on which values of the general DataType that are allowed as values of the&#xA;              specialized DataType. A ValueRestriction DataType is implemented in XML Schema as a&#xA;              simple type definition that is a restriction of the simple type that implements the&#xA;              general DataType. The attributes of the ValueRestriction are implemented as&#xA;              restriction facets. &lt;/p&gt; &lt;p&gt; ValueRestriction represents a&#xA;              NIEM type which is implemented in XML Schema as a simple type definition. Section 3.14&#xA;              of &lt;a href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML&#xA;              Schema Structures&lt;/a&gt; addresses simple type definitions in XML Schema;&#xA;              Sections 6.1.6.1, 7.2.1, 7.3, and 9.12.2 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; address simple type definitions in NIEM-conformant XML&#xA;              Schema. The variety of the simple type definition may be union, list, or atomic. As&#xA;              the ValueRestriction stereotype is a specialization of DataType, it may be applied to&#xA;              Enumeration. In this case, the ValueRestriction represents a NIEM code type, which is&#xA;              implemented in XML Schema as a simple type definition that contains multiple&#xA;              xsd:enumeration facets. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              code type, which is implemented in XML Schema as a simple type definition that&#xA;              contains multiple xsd:enumeration facets. &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; &gt; &lt;/body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and ( documentation.body.startsWith('A
                data type for a ') or documentation.body.startsWith('A data type for an ') ) )
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestriction_Generalization"
                          name="ValueRestriction Generalization">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestriction_Generalization-ownedComment"
                                body="A valuerestriction that is not an enumeration or list may only generalize the&#xA;                same metatype. A valuerestriction that is an enumeration may not generalize a list.&#xA;                A valuerestriction that is a list may not generalize an enumeration..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestriction_Generalization"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestriction_Generalization-specification"/>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestrictionGeneralization"
                          name="ValueRestrictionGeneralization">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestrictionGeneralization-ownedComment"
                                body="A ValueRestriction DataType must be the special classifier in a single&#xA;                Generalization whose general classifier is also a DataType.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestrictionGeneralization"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-ValueRestrictionGeneralization-specification">
                     <body>self.base_DataType.generalization.general-&gt;size()=1 </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-fractionDigits"
                               name="fractionDigits"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Integer"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-fractionDigits-ownedComment"
                                body="A restriction on the value space of a numeric data type that places an upper&#xA;                limit on the arithmetic precision of decimal values. The value space is restricted&#xA;                to those values that can be represented lexically in decimal notation using at most&#xA;                fractionDigits to the right of the decimal point. fractionDigits is implemented in&#xA;                XML Schema as the value of the value attribute on the xsd:fractionDigits element,&#xA;                the child of the xsd:restriction element which is the immediate child of the&#xA;                xsd:simpleType element..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-fractionDigits"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-fractionDigits-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-length"
                               name="length"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Integer"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-length-ownedComment"
                                body="A restriction on the value space of a data type to values with a specific&#xA;                length, where the units of length depends on the base type being restricted. For&#xA;                String and URI values, the units are characters. For Binary values, the units are&#xA;                octets. For lists, the length is the number of items in the list. length is&#xA;                implemented in XML Schema as the value of the value attribute on the xsd:length&#xA;                element, the child of the xsd:restriction element which is the immediate child of&#xA;                the xsd:simpleType element..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-length"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-length-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxExclusive"
                               name="maxExclusive"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxExclusive-ownedComment"
                                body="The exclusive upper bound of the value space for a data type with ordered&#xA;                values. The value of maxExclusive must be equal to some value in the value space of&#xA;                the base data type or to the maxExclusive restriction of the base type (if it has&#xA;                one). maxExclusive is implemented in XML Schema as the value of the value attribute&#xA;                on the xsd:maxExclusive element, the child of the xsd:restriction element which is&#xA;                the immediate child of the xsd:simpleType element..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxExclusive"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxExclusive-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxInclusive"
                               name="maxInclusive"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxInclusive-ownedComment"
                                body="The inclusive upper bound of the value space for a data type with ordered&#xA;                values. The value of maxInclusive must be equal to some value in the value space of&#xA;                the base data type. maxInclusive is implemented in XML Schema as the value of the&#xA;                value attribute on the xsd:maxInclusive element, the child of the xsd:restriction&#xA;                element which is the immediate child of the xsd:simpleType element..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxInclusive"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxInclusive-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxLength"
                               name="maxLength"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Integer"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxLength-ownedComment"
                                body="A restriction on the value space of a data type to values with a specific&#xA;                maximum length, where the units of length depends on the base type being restricted.&#xA;                For String and URI values, the units are characters. For Binary values, the units&#xA;                are octets. For lists, the length is the number of items in the list. maxLength is&#xA;                implemented in XML Schema as the value of the value attribute on the xsd:maxLength&#xA;                element, the child of the xsd:restriction element which is the immediate child of&#xA;                the xsd:simpleType element.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxLength"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-maxLength-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minExclusive"
                               name="minExclusive"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minExclusive-ownedComment"
                                body="The exclusive lower bound of the value space for a data type with ordered&#xA;                values. The value of minExclusive must be equal to some value in the value space of&#xA;                the base data type or to the minExclusive restriction of the base type (if it has&#xA;                one). minExclusive is implemented in XML Schema as the value of the value attribute&#xA;                on the xsd:minExclusive element, the child of the xsd:restriction element which is&#xA;                the immediate child of the xsd:simpleType element..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minExclusive"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minExclusive-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minInclusive"
                               name="minInclusive"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minInclusive-ownedComment"
                                body="The inclusive lower bound of the value space for a data type with ordered&#xA;                values. The value of minInclusive must be equal to some value in the value space of&#xA;                the base data type. minInclusive is implemented in XML Schema as the value of the&#xA;                value attribute on the xsd:minInclusive element, the child of the xsd:restriction&#xA;                element which is the immediate child of the xsd:simpleType element..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minInclusive"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minInclusive-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minLength"
                               name="minLength"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Integer"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minLength-ownedComment"
                                body="A restriction on the value space of a data type to values with a specific&#xA;                minimum length, where the units of length depends on the base type being restricted.&#xA;                For String and URI values, the units are characters. For Binary values, the units&#xA;                are octets. For lists, the length is the number of items in the list. minLength is&#xA;                implemented in XML Schema as the value of the value attribute on the xsd:minLength&#xA;                element, the child of the xsd:restriction element which is the immediate child of&#xA;                the xsd:simpleType element.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minLength"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-minLength-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-pattern"
                               name="pattern"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-pattern-ownedComment"
                                body="A constraint on the value space of a data type achieved by constraining the&#xA;                value space to those values represented by literals that match each member of a set&#xA;                of regular expressions. Each pattern must be a valid regular expression. pattern is&#xA;                implemented in XML Schema as the value of the value attribute on the xsd:pattern&#xA;                element, the child of the xsd:restriction element which is the immediate child of&#xA;                the xsd:simpleType element.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-pattern"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-pattern-lowerValue"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-pattern-upperValue"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-totalDigits"
                               name="totalDigits"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Integer"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-totalDigits-ownedComment"
                                body="Restricts the magnitude and arithmetic precision of values in the value space of&#xA;                a numeric data type. The value space is restricted to those values that can be&#xA;                represented lexically using at most totalDigits digits in decimal notation or at&#xA;                most totalDigits digits for the coefficient, in scientific notation. totalDigits is&#xA;                implemented in XML Schema as the value of the value attribute on the xsd:totalDigits&#xA;                element, the child of the xsd:restriction element which is the immediate child of&#xA;                the xsd:simpleType element.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-totalDigits"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-totalDigits-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-base_DataType"
                               name="base_DataType"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-23">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#DataType"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication"
                             name="AugmentationApplication">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The AugmentationApplication stereotype is a specialization of&#xA;              Application that is always between a Property whose type is an AugmentationType Class&#xA;              and a Class. It represents a constraint on a NEIMÂ augmentation property that limits&#xA;              the application of the property to specific types. When an augmentation property is&#xA;              the client of an AugmentationApplication Usage, this serves to constrain the NIEM&#xA;              types to which the augmentation property may apply. If the client augmentation&#xA;              Property is not in a PropertyHolder, then its Class must be a (direct or indirect)&#xA;              subclass of the supplier Class of the AugmentationApplication. If the augmentation&#xA;              Property is in a PropertyHolder, then any Property defined by reference to the&#xA;              augmentation Property must be for a Class that is a subclass of the supplier Class.&#xA;              &lt;/p&gt; &lt;p&gt; An AugmentationApplication Usage is implemented&#xA;              in a NIEMÂ XML schema as an AppliesTo element in the annotation element of the property&#xA;              declaration represented by the client of the Usage, referencing the complex type&#xA;              represented by the supplier class of the Usage. &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; d by the client of the Usage, referencing&#xA;              the complex type represented by the supplier class of the Usage. &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication-NDR__Rule_7-50_"
                          name="NDR [Rule 7-50]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication-NDR__Rule_7-50_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-50] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, an element definition for an augmentation element that does not contain&#xA;                any instances of the element structures:AppliesTo MAY be applied to any object or&#xA;                association type. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; These rules allow schema builders to&#xA;                establish applicability for augmentations. An augmentation may be applicable to&#xA;                specific types. Users who wish to apply an augmentation type to a given object type&#xA;                may do so by creating a new augmentation element, applicable to the object type.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; new augmentation&#xA;                element, applicable to the object type. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; /body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication-NDR__Rule_7-50_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication-NDR__Rule_7-50_-specification">
                     <body>Implemented as part of PIM/PSM transformations. This constraint is definitional,
                the absence of an &lt;&lt;AugmentationApplication&gt;&gt; on an
                augmentation element will result in applicability of the element to any
                Object/Association at runtime.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationApplication-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice"
                             name="Choice">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A Choice Class groups a set of attributes whose values are mutually&#xA;              exclusive. That is, in any instance of a Choice Class, at most one of its attributes&#xA;              may be non-empty. &lt;/p&gt; &lt;p&gt; Choice represents the use of a&#xA;              choice model group in XML Schema. Section 3.8 of &lt;a&#xA;              href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; addresses choice model groups in XML Schema. Sections&#xA;              6.1.8.1 and 6.1.8.2 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3 &lt;/a&gt;address choice model groups in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ddress choice model&#xA;              groups in NIEM-conformant XML Schema. &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Choice"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-ownedAttributes_have_multiplicity_0..1._"
                          name="ownedAttributes have multiplicity 0..1. ">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Choice"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-ownedAttributes_have_multiplicity_0..1._-ownedComment"
                                body="The ownedAttributes of a Choice class shall have multiplicity 0..1. ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Choice-ownedAttributes_have_multiplicity_0..1._"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-ownedAttributes_have_multiplicity_0..1._-specification">
                     <body>self.base_Class.ownedAttributes-&gt;forAll(a|(a.lower=0) and
              (a.upper=1))</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-NDR__Rule_6-18_"
                          name="NDR [Rule 6-18]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-NDR__Rule_6-18_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-18] (REF) &lt;/b&gt;The schema&#xA;                SHALL NOT contain the element xsd:choice. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The element xsd:choice provides an&#xA;                exclusive set of particles, one of which may appear in an instance. This can greatly&#xA;                complicate processing and may be difficult to comprehend, satisfy, and reuse. The&#xA;                element xsd:choice may be used in extension and exchange schemas, as it presents a&#xA;                simple way for a schema writer to represent a set of optional content. It may also&#xA;                be used in subset schemas and constraint schemas to represent syntactic&#xA;                alternatives. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; d&#xA;                constraint schemas to represent syntactic alternatives. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Choice-NDR__Rule_6-18_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-NDR__Rule_6-18_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.owner.getTargetDirectedRelationships()
                -&gt;select(r|r.stereotypedBy('ModelPackageDescriptionFile'))
                -&gt;forAll(mpdf|mpdf.getStereotypeApplication('ModelPackageDescriptionFile').natureURI&lt;&gt;'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-No_Generalizations_or_subtypes"
                          name="No Generalizations or subtypes">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Choice"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-No_Generalizations_or_subtypes-ownedComment"
                                body="A Choice Class shall not participate in any Generalizations, either as the&#xA;                general or the special Classifier.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Choice-No_Generalizations_or_subtypes"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-No_Generalizations_or_subtypes-specification">
                     <body>self.base_Class.generalization-&gt;isEmpty() and
                self.base_Class.getTargetDirectedRelationships()-&gt;select(d|d.oclIsKindOf(Generalization))-&gt;isEmpty()
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Choice-base_Class"
                               name="base_Class"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-18">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Class"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-12">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-12-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Union-base_DataType"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-12-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-12-ownedEnd"
                         name="extension_UnionType"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-Union"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-12">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-12-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union"
                             name="Union">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A Union is a DataType whose value space is the union of one or more&#xA;              other DataTypes, which are the member types of the Union. The member types are&#xA;              specified using UnionOf Usage dependencies. &lt;/p&gt; &lt;p&gt; A&#xA;              Union DataType is implemented in XML Schema as a union simple type definition. Each&#xA;              UnionOf dependency of which the Union is the client represents a relationship between&#xA;              two type definitions: the first is a union simple type definition whose member type&#xA;              definition is the second. This relationship is implemented in XML Schema through the&#xA;              memberTypes attribute on the xsd:union element of the union simple type definition,&#xA;              the actual value of which resolves to the second type definition. Section 3.14 of&#xA;              &lt;a href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; addresses union simple type definitions in XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; implemented in XML&#xA;              Schema through the memberTypes attribute on the xsd:union element of the union simple&#xA;              type definition, the actual value of which resolves to the second type definition.&#xA;              Section 3.14 of &lt;a&#xA;              href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; addresses union simple type definitions in XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Union"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_owned_attributes"
                          name="no owned attributes">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Union"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_owned_attributes-ownedComment"
                                body="A Union shall not have any ownedAttributes.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_owned_attributes"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_owned_attributes-specification">
                     <body>self.base_DataType.ownedAttribute-&gt;isEmpty() </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_generalizations"
                          name="no generalizations">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Union"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_generalizations-ownedComment"
                                body="A Union shall not have any generalizations.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_generalizations"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-no_generalizations-specification">
                     <body>self.base_DataType.generalization-&gt;isEmpty() </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Union-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and ( documentation.body.startsWith('A
                data type for a ') or documentation.body.startsWith('A data type for an ') ) )
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Union-base_DataType"
                               name="base_DataType"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-12">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#DataType"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace"
                             name="Namespace">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A Namespace Package represents a NIEM namespace identified by a&#xA;              target namespace URI. All UML model elements contained, directly or indirectly within&#xA;              the Package, that represents NIEM types and properties, are considered to be in this&#xA;              target namespace. &lt;/p&gt; &lt;p&gt; A Namespace Package is&#xA;              implemented in XML Schema as an XML schema document. &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; ML Schema as an XML schema document.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-37_"
                          name="NDR [Rule 6-37]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-37_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-37] (REF, SUB, EXT, CON) &lt;/b&gt;Within the&#xA;                schema, the document element xsd:schema MUST carry the attribute version.&#xA;                &lt;/body&gt; &lt;/html&gt; ion. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-37_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-37_-specification">
                     <body>not(self.version.oclIsUndefined()) -- Constraint also resolved by the
                requirement that tag "version" is required.</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-38_"
                          name="NDR [Rule 6-38]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-38_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-38] (REF, SUB, EXT, CON)&#xA;                &lt;/b&gt;Within the schema, the value of the required attribute version on&#xA;                the document element xsd:schema MUST NOT be an empty string. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; It is very useful to&#xA;                be able to tell one version of a schema from another. Apart from the use of&#xA;                namespaces for versioning, it is sometimes necessary to release multiple versions of&#xA;                schema documents. Such use might include: &lt;/p&gt; &lt;p&gt; ï¿½&#xA;                Subset schemas and constraint schemas &lt;/p&gt; &lt;p&gt; ï¿½ Error&#xA;                corrections or bug fixes &lt;/p&gt; &lt;p&gt; ï¿½ Documentation&#xA;                changes &lt;/p&gt; &lt;p&gt; ï¿½ Contact information updates&#xA;                &lt;/p&gt; &lt;p&gt; In such cases, a different value for the&#xA;                version attribute implies a different version of the schema. No specific meaning is&#xA;                assigned to specific version identifiers. &lt;/p&gt; &lt;p&gt; Note&#xA;                that some of the above uses for the version attribute are not employed in management&#xA;                of NIEM Core and domain schemas. An author of an application schema or exchange may&#xA;                use the version attribute for these purposes within their schemas.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; management of NIEM&#xA;                Core and domain schemas. An author of an application schema or exchange may use the&#xA;                version attribute for these purposes within their schemas. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-38_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-38_-specification">
                     <body>self.version&lt;&gt;''</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-37_"
                          name="NDR [Rule 7-37]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-37_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-37] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, a complex type definition SHALL be one of the following classes&#xA;                of types: &lt;/p&gt; &lt;p&gt; 1. An object type. &lt;/p&gt;&#xA;                &lt;p&gt; 2. A role type. &lt;/p&gt; &lt;p&gt; 3. An&#xA;                association type. &lt;/p&gt; &lt;p&gt; 4. A metadata type.&#xA;                &lt;/p&gt; &lt;p&gt; 5. An augmentation type. &lt;/p&gt;&#xA;                &lt;p&gt; 6. An adapter type. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This rule establishes the classes of&#xA;                NIEM complex types. It is a limited set, each class with distinct semantics.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; his rule establishes&#xA;                the classes of NIEM complex types. It is a limited set, each class with distinct&#xA;                semantics. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-37_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-37_-specification">
                     <body>self.base_Package.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedType -&gt;select(t|t.oclIsKindOf(Class) and
                not(t.stereotypedBy('PropertyHolder')))
                -&gt;forAll(type|type.stereotypedBy('NIEMType')) -- PIM Profile Classes default
                to &lt;&lt;ObjectType&gt;&gt; if not otherwise specified </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-6_"
                          name="NDR [Rule 9-6]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-6_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-6] (REF, SUB, EXT) &lt;/b&gt;Within the schema, any&#xA;                XML Schema component other than an attribute declaration SHALL have a name that&#xA;                begins with an upper-case letter ('A'-'Z'). &lt;/body&gt;&#xA;                &lt;/html&gt; 'A'-'Z'). &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-6_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-6_-specification">
                     <body>self.base_Package.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedType -&gt;select(t|not(t.stereotypedBy('PropertyHolder'))
                -&gt;forAll(schemaComponent|schemaComponent.name.firstToUpper()=schemaComponent.name)
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-35_"
                          name="NDR [Rule 6-35]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-35_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-35] (REF, SUB, EXT, CON)&#xA;                &lt;/b&gt;Within the schema, the document element xsd:schema MUST carry the&#xA;                attribute targetNamespace. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; espace. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-35_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-35_-specification">
                     <body>not(self.targetNamespace.oclIsUndefined()) and
                (self.targetNamespace&lt;&gt;'') -- also partially satisfied by multiplicity
                constraint on targetNamespace </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-24_"
                          name="NDR [Rule 9-24]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-24_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-24] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the name of any simple type definition SHALL use the&#xA;                representation term qualifier Simple. This qualifier SHALL appear after any other&#xA;                representation term qualifiers. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Specific uses of type definitions have&#xA;                similar syntax but very different effects on data definitions. Schemas that clearly&#xA;                identify complex and simple type definitions are easier to understand without tool&#xA;                support. This rule ensures that names of simple types end in SimpleType.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ule ensures that&#xA;                names of simple types end in SimpleType. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-24_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-24_-specification">
                     <body>self.profiledBy('NIEM_PSM_Profile') implies self.base_Package.ownedType
                -&gt;select(t|t.oclIsKindOf(DataType))
                -&gt;forAll(simpleType|simpleType.name.matches('.*SimpleType')) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedType-&gt;select(t|t.oclIsKindOf(Enumeration))
                -&gt;forAll(otherType|otherType.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and ( documentation.body.startsWith('A
                data type for a ') or documentation.body.startsWith('A data type for an ') ) ) )
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-25_"
                          name="NDR [Rule 9-25]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-25_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-25] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the name of any code type SHALL use the representation term&#xA;                qualifier Code. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Using the qualifier Code (e.g.&#xA;                CodeType, CodeSimpleType) immediately identifies a type as representing a fixed list&#xA;                of codes. These types may be handled in specific ways, as lists of codes are&#xA;                expected to have their own lifecycles, including versions and periodic updates.&#xA;                Codes may also have responsible authorities behind them who provide concrete&#xA;                semantic bindings for the code values. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; o provide concrete semantic bindings for the code values.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-25_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-25_-specification">
                     <body>self.base_Package.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedType -&gt;select(t|t.oclIsKindOf(Enumeration))
                -&gt;forAll(enumerationDerivedType|enumerationDerivedType.name.matches('.*Code.*'))</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-36_"
                          name="NDR [Rule 6-36]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-36_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-36] (REF, SUB, EXT, CON)&#xA;                &lt;/b&gt;Within the schema, the value of the required attribute&#xA;                targetNamespace on the document element xsd:schema MUST match the production&#xA;                &lt;absolute-URI&gt; as defined by&#xA;                &lt;b&gt;[RFC3986]&lt;/b&gt;. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Schemas without defined namespaces&#xA;                provide definitions that are ambiguous, in that they are not universally&#xA;                identifiable. Absolute URIs are the only universally meaningful URIs. URIs include&#xA;                both URLs and URNs. Finding the target namespace using standard XML Base technology&#xA;                is complicated and not specified by XML Schema. Relative URIs are not universally&#xA;                identifiable, as they are context-specific. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; are not universally identifiable, as they are&#xA;                context-specific. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-36_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_6-36_-specification">
                     <body>self.targetNamespace.isAbsoluteURI()</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-26_"
                          name="NDR [Rule 9-26]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-26_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-26] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any type definition which has a base type definition of a code&#xA;                type or which is transitively based on a code type SHALL have a name that uses the&#xA;                representation term qualifier Code. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This expands the use of the&#xA;                representation term qualifier Code to any type based on a code list.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; fier Code to any type&#xA;                based on a code list. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-26_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-26_-specification">
                     <body>self.base_Package.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedType -&gt;select(t|
                t.clientDependency-&gt;select(d|d.stereotypedBy('XSDSimpleContent')).supplier-&gt;exists(s|s.oclIsKindOf(Enumeration))
                or ( t.oclIsKindOf(Classifier) and
                t.oclAsType(Classifier).allParents().clientDependency-&gt;select(d|d.stereotypedBy('XSDSimpleContent')).supplier-&gt;exists(s|s.oclIsKindOf(Enumeration))
                ) )
                -&gt;forAll(enumerationDerivedType|enumerationDerivedType.name.matches('.*Code.*'))
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-07_"
                          name="NDR [Rule 7-07]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-07_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-7] (REF, EXT)&lt;/b&gt; Within the schema, any&#xA;                element xsd:attribute that is an immediate child of an element xsd:schema MUST be a&#xA;                documented component. &lt;/body&gt; &lt;/html&gt; omponent.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-07_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-07_-specification">
                     <body>self.base_Package.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedComment-&gt;exists(documentation|documentation.stereotypedBy('Documentation'))
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-3_"
                          name="NDR [Rule 9-3]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-3_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-3] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                name of any XML Schema component defined by the schema SHALL contain only the&#xA;                following characters: &lt;/p&gt; &lt;p&gt; ï¿½ Upper-case letters&#xA;                ('A'-'Z'). &lt;/p&gt; &lt;p&gt; ï¿½ Lower-case letters ('a'-'z').&#xA;                &lt;/p&gt; &lt;p&gt; ï¿½ Digits ('0'-'9'). &lt;/p&gt;&#xA;                &lt;p&gt; ï¿½ Hyphen ('-'). &lt;/p&gt; &lt;p&gt; Other&#xA;                characters, such as the underscore ('_') character and the period ('.') character&#xA;                SHALL NOT appear in component names in NIEM-conformant schemas. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; od ('.') character SHALL NOT appear in&#xA;                component names in NIEM-conformant schemas. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &gt; &lt;/body&gt; &lt;/html&gt;&#xA;                ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-3_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_9-3_-specification">
                     <body>self.base_Package.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedType -&gt;select(t|not(t.stereotypedBy('PropertyHolder'))
                -&gt;forAll(schemaComponent|schemaComponent.name.match('[\\w|\\-]*')) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-09_"
                          name="NDR [Rule 7-09]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-09_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-9] (REF, EXT) &lt;/b&gt;Within the schema, the&#xA;                document element xsd:schema MUST be a documented component. &lt;/body&gt;&#xA;                &lt;/html&gt; ent. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-09_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-NDR__Rule_7-09_-specification">
                     <body>self.base_Package.profiledBy('NIEM_PSM_Profile') implies
                self.base_Package.ownedComment-&gt;exists(documentation|documentation.stereotypedBy('Documentation'))
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-base_Package"
                               name="base_Package"
                               visibility="public"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-5">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Package"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-targetNamespace"
                               name="targetNamespace"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-targetNamespace-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; The target namespace URI for this NIEM namespace.&#xA;                &lt;/p&gt; &lt;p&gt; It is implemented in XML Schema as the value of&#xA;                the targetNamespace attribute on the xsd:schema document element. Per Rules 6-35 and&#xA;                6-36 of &lt;a&#xA;                href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;                NDR v1.3&lt;/a&gt;, the value of the targetNamespace attribute must be&#xA;                present and must be an absolute URI. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; and must be an absolute URI. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; /body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-targetNamespace"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-isConformant"
                               name="isConformant"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Boolean"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-isConformant-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; Indicates whether the namespace is NIEM-conformant.&#xA;                &lt;/p&gt; &lt;p&gt; If the namespace is NIEM-conformant, it is&#xA;                implemented in XML Schema as the content of the i:ConformantIndicator application&#xA;                information on the xsd:schema document element. Per Rule 7-1 of NIEM NDR v1.3, the&#xA;                content must be &#34;true&#34;. If the namespace is not NIEM-conformant, it is implemented&#xA;                in XML Schema as the content of the i:ConformantIndicator application information on&#xA;                the xsd:import element. Per Rule 7-61 of &lt;a&#xA;                href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;                NDR v1.3&lt;/a&gt;, the content must be &#34;false&#34;. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; NDR v1.3&lt;/a&gt;, the content&#xA;                must be &#34;false&#34;. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                dy&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-isConformant"/>
                  </ownedComment>
                  <defaultValue xmi:type="uml:LiteralBoolean"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-isConformant-defaultValue"
                                value="true"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-version"
                               name="version"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-version-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; The version of the NIEM namespace. &lt;/p&gt;&#xA;                &lt;p&gt; It is implemented in XML Schema as the value of the version&#xA;                attribute on the xsd:schema document element. Per Rules 6-37 and 6-38 of &lt;a&#xA;                href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;                NDR v1.3&lt;/a&gt;, the value of the version attribute must be present and&#xA;                must not be the empty string. Default is &#34;1&#34;. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ty string. Default is &#34;1&#34;.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-version"/>
                  </ownedComment>
                  <defaultValue xmi:type="uml:LiteralString"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Namespace-version-defaultValue"
                                value="&#34;1&#34;"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377277191888_427232_3373"
                               name="defaultPrefix"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377277437761_826224_3382"
                                body="The default prefix for the namespace, used to represent common NIEM prefixes. This prefix should beis used on all XML and/or XML Schema serializations using thatthe namespace, unless it conflicts with another XML and/or XML Schema serialization. If there is a conflict, the actual prefix used is the given default prefix with a number appended in order to make it unique.mapping should append a number to the default prefix to make it unique.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377277191888_427232_3373"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377277253262_951593_3375"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-15">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-15-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf-base_Usage"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-15-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-15-ownedEnd"
                         name="extension_UnionOf"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-15">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-15-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-16">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-16-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Documentation-base_Comment"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-16-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-16-ownedEnd"
                         name="extension_NIEMDocumentation"
                         visibility="public"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-Documentation"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-16">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-16-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"
                             name="NIEMType"
                             isAbstract="true">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-ownedComment"
                             body="&lt;html&gt;&#xA;  &lt;head&gt;&#xA;&#x9;&#x9;&lt;style&gt;&#xA;&#x9;&#x9;&#x9;p {padding:0px; margin:0px;}&#xA;&#x9;&#x9;&lt;/style&gt;&#xA;&#x9;&lt;/head&gt;&#xA;&#xA;  &lt;body&gt;&#xA;    &lt;p&gt;&#xA;      A NIEMType is an Class that represents one of the specific semantic       kinds       of       NIEM       complex       types       (i.e.,       types       that       may       have       attributive       structure).       NIEMType       is       abstract.&#xA;    &lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&#xA;      A NIEMType Class is implemented in XML Schema as a complex type       definition       with       complex       content.&#xA;&#xA;    &lt;/p&gt;&#xA;&#xA;  &lt;/body&gt;&#xA;&#xA;&lt;/html&gt;&#xA;&#xA;">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-33_"
                          name="NDR [Rule 9-33]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-33_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-33] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the name of an augmentation element SHALL use the representation&#xA;                term Augmentation. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Using the qualifier Augmentation&#xA;                immediately identifies an element as representing an augmentation.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; representing an&#xA;                augmentation. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-33_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-33_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedAttribute
                -&gt;forAll(a|a.type.stereotypedBy('AugmentationType') implies
                a.name.match('.*Augmentation.*')) --For PIM Profile, the naming constraint is
                enforced by PIM/PSM transformations. --An augmentation element corresponds to a UML
                &lt;Property&gt; whose type is an
                &lt;&lt;AugmentationType&gt;&gt;. </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-32_"
                          name="NDR [Rule 9-32]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-32_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-32] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, the name of an association element SHALL use&#xA;                the representation term qualifier Association. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Using the qualifier Association&#xA;                immediately identifies an element as representing an association. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ment as representing an association.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-32_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-32_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedAttribute
                -&gt;forAll(a|a.type.stereotypedBy('AssociationType') implies
                a.name.match('.*Association.*')) --For PIM Profile, the naming constraint is
                enforced by PIM/PSM transformations. --An association element corresponds to a UML
                &lt;Property&gt; whose type is an
                &lt;&lt;AssociationType&gt;&gt;. </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-49_"
                          name="NDR [Rule 7-49]">
                  <constrainedElement href="http://www.omg.org/spec/UML/20110701/UML.xmi#Property"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-49_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-49] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an element definition for an augmentation element MAY contain one or&#xA;                more instances of the element structures:AppliesTo as application information to&#xA;                specify types to which the augmentation element applies. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;/p&gt; &lt;p&gt; In UML, this represents a&#xA;                constraint on augmentations, i.e., those UML &lt;Property&gt;s whose type is&#xA;                an &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567y&#34;&gt;Augmentation&lt;/a&gt;&gt;&gt;.&#xA;                Â Â  &lt;/p&gt; &lt;p&gt; A &lt;Property&gt; which is a client&#xA;                of any &lt;&lt;AppliesTo&gt;&gt; must be owned by a&#xA;                &lt;Classifier&gt; which is conformant with one of the&#xA;                &lt;&lt;AppliesTo&gt;&gt; supplier &lt;Classifier&gt;s.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ch is conformant with&#xA;                one of the &lt;&lt;AppliesTo&gt;&gt; supplier&#xA;                &lt;Classifier&gt;s. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-49_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-49_-specification">
                     <body>self.base_Class.ownedAttribute -&gt;forAll(a|
                a.type.stereotypedBy('AugmentationType') implies a.clientDependency
                -&gt;union(a.clientDependency-&gt;select(d|d.stereotypedBy('References')).target.clientDependency)
                -&gt;select(d|d.stereotypedBy('AugmentationApplication')).target.oclAsType(Class)
                -&gt;exists(appliedTo|self.base_Class.isConsistentWith(appliedTo)) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-45_"
                          name="NDR [Rule 7-45]">
                  <constrainedElement href="http://www.omg.org/spec/UML/20110701/UML.xmi#Property"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-45_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-45] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, a metadata type MAY have application information appinfo:AppliesTo,&#xA;                indicating the NIEM-conformant object, association, or external adapter types to&#xA;                which the metadata applies. &lt;/p&gt; &lt;p&gt; &lt;/p&gt;&#xA;                &lt;p&gt; In UML, this represents a constraint on metadata elements, i.e.,&#xA;                those UML &lt;Property&gt;s whose type is a &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567z&#34;&gt;MetadataType&lt;/a&gt;&gt;&gt;.&#xA;                Â Â  &lt;/p&gt; &lt;p&gt; If the &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567z&#34;&gt;MetadataType&lt;/a&gt;&gt;&gt;&#xA;                has an &lt;&lt;AppliesTo&gt;&gt;, then the &lt;Property&gt;&#xA;                must be owned by a &lt;Classifier&gt; which is conformant with one of the&#xA;                &lt;Classifier&gt;s referenced by one of the&#xA;                &lt;&lt;AppliesTo&gt;&gt;. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; formant with one of the &lt;Classifier&gt;s referenced&#xA;                by one of the &lt;&lt;AppliesTo&gt;&gt;. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-45_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_7-45_-specification">
                     <body>self.base_Class.ownedAttribute -&gt;forAll(a|
                a.type.stereotypedBy('MetadataType') implies a.type.clientDependency
                -&gt;select(d|d.stereotypedBy('MetadataApplication')).target.oclAsType(Class)
                -&gt;exists(appliedTo|self.base_Class.isConsistentWith(appliedTo)) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-23_"
                          name="NDR [Rule 9-23]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-23_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-23] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, the name of any type definition MUST use the&#xA;                representation term Type. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Using the representation term Type&#xA;                immediately identifies XML types in a NIEM-conformant schema and prevents naming&#xA;                collisions with corresponding XML elements and attributes. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ponding XML elements and attributes.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-23_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-23_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.name.endsWith('Type')</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-34_"
                          name="NDR [Rule 9-34]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-MetadataType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-34_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-34] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the name of a metadata element SHALL use the representation term&#xA;                Metadata. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Using the qualifier Metadata&#xA;                immediately identifies an element as representing metadata. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ent as representing metadata.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-34_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-NDR__Rule_9-34_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedAttribute
                -&gt;forAll(a|a.type.stereotypedBy('MetadataType') implies
                a.name.match('.*Metadata.*')) --For PIM Profile, the naming constraint is enforced
                by PIM/PSM transformations. --A metadata element corresponds to a UML
                &lt;Property&gt; whose type is a
              &lt;&lt;Metadata&gt;&gt;.</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType-base_Class"
                               name="base_Class"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-4">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Class"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-18">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-18-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Choice-base_Class"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-18-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-18-ownedEnd"
                         name="extension_Choice"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-Choice"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-18">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-18-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf"
                             name="UnionOf">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf-ownedComment"
                             body="The UnionOf stereotype is applied to a Usage dependency, the client of which must&#xA;              be a Union DataType and the supplier of which must be a DataType that represents a&#xA;              legal union member type. A UnionOf dependency specifies that the supplier DataType is&#xA;              a member type of the client Union.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf-supplier_must_be_data_type"
                          name="supplier must be data type">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf"/>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf-supplier_must_be_data_type-specification">
                     <body>self.base_Usage.supplier.oclKindOf(DataType)</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf-client_must_be_union"
                          name="client must be union">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf"/>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf-client_must_be_union-specification">
                     <body>self.base_Usage.client.stereotypedBy('Union')</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-UnionOf-base_Usage"
                               name="base_Usage"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-15">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Usage"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-20">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-base_Usage"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-20-ownedEnd"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-20-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-20-ownedEnd"
                         name="extension_"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-Application"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-20">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-20-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-21">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Restriction-base_Realization"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-21-ownedEnd"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-21-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-21-ownedEnd"
                         name="extension_Restriction"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-Restriction"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-21">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-21-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType"
                             name="AugmentationType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-ownedComment"
                             body="&lt;html&gt;&#xA;  &lt;head&gt;&#xA;&#x9;&#x9;&lt;style&gt;&#xA;&#x9;&#x9;&#x9;p {padding:0px; margin:0px;}&#xA;&#x9;&#x9;&lt;/style&gt;&#xA;&#x9;&lt;/head&gt;&#xA;&#xA;  &lt;body&gt;&#xA;    &lt;p&gt;&#xA;      AugmentationType is a NIEMType Class that represents a NIEM&amp;#160;augmentation       type.       A       NIEM       augmentation       type       is       a       complex       type       that       provides       a       reusable       block       of       data       that       may       be       added       to       object       types       or       association       types.       An       augmentation       of       an       object       type       is       a       block       of       additional       data       that       is       an       instance       of       an       augmentation       type,       added       to       an       object       type       to       carry       additional       data       beyond       that       of       the       original       object       definition.       The       applicability       of       an       augmentation       may       be       restricted       using       an       AugmentationApplication       Dependency       or       an       Augments       Generalization.       &amp;#160;A       Class       that       is       the       specific       Classifier       of       an       Augments       Generalization       shall       be       inferred       to       be       an       AugmentationType.&#xA;    &lt;/p&gt;&#xA;&#xA;    &lt;p&gt;&#xA;      AugmentationType is implemented in XML Schema as a complex type       definition       with       complex       content.       Section       3.4       of       &lt;a href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML       Schema       Structures&lt;/a&gt;       addresses       complex       type       definitions       in       XML       Schema;       Section       7.4.5       of       &lt;a href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM       NDR       v1.3&lt;/a&gt;       addresses       augmentation       types       in       NIEM-conformant       XML       Schema.&#xA;&#xA;    &lt;/p&gt;&#xA;&#xA;  &lt;/body&gt;&#xA;&#xA;&lt;/html&gt;&#xA;&#xA;">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-48_"
                          name="NDR [Rule 7-48]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-48_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-48] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, an augmentation element definition:&#xA;                &lt;/p&gt; &lt;p&gt; 1. SHALL have a type that is an augmentation&#xA;                type. &lt;/p&gt; &lt;p&gt; 2. SHALL use the substitutionGroup&#xA;                attribute such that it is transitively substitutable for the element&#xA;                structures:Augmentation. &lt;/p&gt; &lt;p&gt; An element that is not&#xA;                an augmentation element SHALL NOT meet either of the above criteria.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; An&#xA;                augmentation is trivially identifiable as such. The use of the common&#xA;                structures:Augmentation element allows message builders to optionally delay&#xA;                specifying augmentations to be applied to a type until runtime. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; builders to optionally delay specifying&#xA;                augmentations to be applied to a type until runtime. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-48_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-48_-specification">
                     <body>The constraint is enforced by the transformation from PSM to XSD Schema
                artifact. A property whose type is an
                &lt;&lt;AugmentationType&gt;&gt; is an augmentation element. The
                property may directly or indirectly use the UML subsettedProperty mechanism to
                identify a substitutionGroup, which will be transitively substitutable for the
                element structures:Augmentation. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-47_"
                          name="NDR [Rule 7-47]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-47_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;NDR [Rule 7-47] (REF, EXT)&lt;/b&gt;&#xA;                Essentially states that the general of the&#xA;                &lt;&lt;Augmentation&gt;&gt;, if it exists, must be an&#xA;                &lt;&lt;Augmentation&gt;&gt;. &lt;/p&gt; &lt;p&gt;&#xA;                Due to schema and other NDR rules, this also requires &lt;/p&gt;&#xA;                &lt;ul&gt; &lt;li&gt; a maximum of one general for the given&#xA;                &lt;&lt;Augmentation&gt;&gt; &lt;/li&gt; &lt;li&gt;&#xA;                any subtypes of the given &lt;&lt;Augmentation&gt;&gt; must also be&#xA;                &lt;&lt;Augmentation&gt;&gt; &lt;/li&gt; &lt;/ul&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; mentation&gt;&gt; must also be&#xA;                &lt;&lt;Augmentation&gt;&gt; &lt;/li&gt; &lt;/ul&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ul&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-47_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-47_-specification">
                     <body>(self.base_Class.general()-&gt;size()&lt;=1) and
                self.base_Class.general()-&gt;forAll(g|g.stereotypedBy('AugmentationType')) and
                self.base_Class.getTargetDirectedRelationships()
                -&gt;forAll(r|r.oclIsKindOf(Gneralization) implies
                r.oclAsType(Generalization).specific.stereotypedBy('AugmentationType')) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and documentation.body.startsWith('A
                data type that supplements ') ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_9-28_"
                          name="NDR [Rule 9-28]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_9-28_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-28] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any augmentation type SHALL have a name that uses the&#xA;                representation term qualifier Augmentation. Types other than augmentation types&#xA;                SHALL NOT use the representation term qualifier Augmentation. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Using the qualifier&#xA;                Augmentation immediately identifies a type as representing an augmentation.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; a type as&#xA;                representing an augmentation. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; y&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_9-28_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-NDR__Rule_9-28_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.name.match('.*AugmentationType')) --For PIM Profile, the naming
                constraint is enforced by PIM/PSM transformations. </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AugmentationType-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-23">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-23-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction-base_DataType"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-23-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-23-ownedEnd"
                         name="extension_ValueRestriction"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-ValueRestriction"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-23">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-23-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-24">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-24-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-List-base_DataType"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-24-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-24-ownedEnd"
                         name="extension_ListType"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-List"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-24">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-24-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-25">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-25-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-PropertyHolder-base_Class"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-25-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-25-ownedEnd"
                         name="extension_"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-PropertyHolder"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-25">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-25-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType"
                             name="AssociationType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; AssociationType is a NIEMType class that represents a NIEM&#xA;              association type. A NIEM association type establishes a relationship between objects,&#xA;              along with the properties of that relationship. A NIEM association is an instance of&#xA;              an association type. Associations are used when a simple NIEM property is insufficient&#xA;              to model the relationship clearly and when properties of a UML Association or&#xA;              AssociationClass may not necessarily be sufficient to reflect the variability of a&#xA;              NIEM association. Consequently, the AssociationType Stereotype is applied to a UML&#xA;              Class. Since an AssociationClass is also a Class, the AssociationType Stereotype may&#xA;              be applied to a UML AssociationClass where appropriate. Â  &lt;/p&gt;&#xA;              &lt;p&gt; Note that a UML AssociationClass specializing another&#xA;              AssociationClass must have the same number of ends as the other AssociationClass and&#xA;              must have at least two ends.Â This UML constraint prevents the usage of&#xA;              AssociationClass to model abstract NIEM association types that are intended to be&#xA;              extended by subtypes with additional ends. Â AÂ UMLÂ AssociationClass can specialize an&#xA;              abstract UMLÂ Class. &lt;/p&gt; &lt;p&gt; AssociationType is&#xA;              implemented in XML Schema as a complex type definition with complex content. Section&#xA;              3.4 of &lt;a href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML&#xA;              Schema Structures&lt;/a&gt; addresses complex type definitions in XML Schema;&#xA;              Section 7.4.3 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; addresses association types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              ref=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; addresses association types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-42_"
                          name="NDR [Rule 7-42]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-42_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-42] (REF, SUB, EXT) &lt;/b&gt;&#xA;                &lt;/p&gt; &lt;p&gt; Given that an association type defines a&#xA;                relationship between a set of participants, within an association type definition,&#xA;                any element that represents a participant SHALL be a reference element.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                &lt;/p&gt; &lt;p&gt; Associations are intended to relate objects&#xA;                defined elsewhere. They are not intended to carry content of participant objects.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; In UML,&#xA;                any property owned by the &lt;&lt;AssociationType&gt;&gt; which&#xA;                represents a NIEM reference must not be an aggregation. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; the&#xA;                &lt;&lt;AssociationType&gt;&gt; which represents a NIEM reference&#xA;                must not be an aggregation. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-42_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-42_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedAttribute -&gt;forAll(a|a.name.endsWith('Reference')
                implies (a.aggregation=AggregationKind::none))</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and documentation.body.startsWith('A
                data type for a relationship ') ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-41_"
                          name="NDR [Rule 7-41]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-41_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;NDR [Rule 7-41] (REF, EXT)&lt;/b&gt;&#xA;                Essentially states that the general of the&#xA;                &lt;&lt;Association&gt;&gt;, if it exists, must be an&#xA;                &lt;&lt;Association&gt;&gt;. &lt;/p&gt; &lt;p&gt;&#xA;                Due to schema and other NDR rules, this also requires &lt;/p&gt;&#xA;                &lt;ul&gt; &lt;li&gt; a maximum of one general for the given&#xA;                &lt;&lt;Association&gt;&gt; &lt;/li&gt; &lt;li&gt;&#xA;                any subtypes of the given &lt;&lt;Association&gt;&gt; must also be&#xA;                &lt;&lt;Association&gt;&gt; &lt;/li&gt; &lt;/ul&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ssociation&gt;&gt; must also be&#xA;                &lt;&lt;Association&gt;&gt; &lt;/li&gt; &lt;/ul&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-41_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_7-41_-specification">
                     <body>(self.base_Class.generalization-&gt;size()&lt;=1) and
                self.base_Class.generalization.general-&gt;forAll(g|g.stereotypedBy('Association'))
                and self.base_Class.getTargetDirectedRelationships()
                -&gt;select(r|r.oclIsKindOf(Generalization)).oclAsType(Generalization).specific
                -&gt;forAll(s|s.stereotypedBy('Association'))</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_9-27_"
                          name="NDR [Rule 9-27]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_9-27_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-27] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any association type SHALL have a name that uses the&#xA;                representation term qualifier Association. Types other than association types SHALL&#xA;                NOT use the representation term qualifier Association. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Using the qualifier&#xA;                Association immediately identifies a type as representing an association.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; a type as&#xA;                representing an association. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; dy&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_9-27_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-NDR__Rule_9-27_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.name.match('.*AssociationType')) --For PIM Profile, the naming
                constraint is enforced by PIM/PSM transformations. </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AssociationType-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-PropertyHolder"
                             name="PropertyHolder">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-PropertyHolder-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; PropertyHolder is a Class holding global Properties that are not the&#xA;              subject of any specific NIEM type. A Property of a NIEM type may then be defined by&#xA;              reference to a Property of a PropertyHolder by using a References realization with the&#xA;              Property in the PropertyHolder as the supplier. Note that the multiplicity of&#xA;              Properties in a PropertyHolder is immaterial -- the multiplicities are established by&#xA;              Properties in the corresponding References client. The target namespace of Properties&#xA;              in a PropertyHolder is the target namespace of the Namespace Package that contains the&#xA;              PropertyHolder (which may be different than the target namespace of NIEM types that&#xA;              use the Properties in the PropertyHolder). &lt;/p&gt; &lt;p&gt;&#xA;              PropertyHolder does not represent any NIEM concept; it exists to permit the user to&#xA;              define a NIEM property that is not the subject of any NIEM type. There are significant&#xA;              differences between the UML representation and XML Schema implementation of a NIEM&#xA;              property. Sections 6.1.6.2 and 6.1.6.3 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt;, Rule 6-14 and Rule 6-15, require that an attribute or&#xA;              element declaration be a top-level declaration, but NIEM NDR v1.3 does not require a&#xA;              corresponding attribute use or element particle; however, Section 7.3.44 of [UML]&#xA;              requires that a Property be the ownedAttribute of a Classifier. Thus in the UML&#xA;              representation, the declaration and use of a Property are not distinct, and the&#xA;              declaration of a Property requires its use. In the XML Schema implementation, the&#xA;              declaration and use are distinct, and the declaration does not require a corresponding&#xA;              use. To resolve this difference, any Property within a PropertyHolder shall represent&#xA;              an attribute or element declaration without a corresponding attribute use or element&#xA;              particle. &lt;/p&gt; &lt;p&gt; PropertyHolders may be used to hold the&#xA;              properties of a substitution group. Â Where a PropertyHolder is used to define a&#xA;              substitution group an extension of that substitution group shall be a subclass of the&#xA;              substitution group PropertyHolder. &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; ies of a substitution group. Â Where a PropertyHolder is used to&#xA;              define a substitution group an extension of that substitution group shall be a&#xA;              subclass of the substitution group PropertyHolder. &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-PropertyHolder"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-PropertyHolder-base_Class"
                               name="base_Class"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-25">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Class"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List"
                             name="List">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A List is a DataType whose values consist of a finite length&#xA;              (possibly empty) sequence of values of another DataType, which is the item type of the&#xA;              List. A List DataType must have a single Property with multiplicity 0..* whose type is&#xA;              the item type. The name of this element is not material. Â  &lt;/p&gt;&#xA;              &lt;p&gt; A List DataType is implemented in XML schema as a list simple type&#xA;              definition. List represents a relationship between two simple type definitions: the&#xA;              first is a list simple type definition whose item type definition is the second. This&#xA;              relationship is implemented in XML Schema through the itemType attribute on the&#xA;              xsd:list element of the list simple type definition, the actual value of which&#xA;              resolves to the second type definition. Section 3.14 of &lt;a&#xA;              href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; addresses list simple type definitions in XML Schema;&#xA;              Section 7.3 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; addresses list simple type definitions in NIEM-conformant&#xA;              XML Schema. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              rules/1.3/&#34;&gt;NIEM NDR v1.3&lt;/a&gt; addresses list simple type&#xA;              definitions in NIEM-conformant XML Schema. &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; &gt; &lt;/body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-List"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-List-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and ( documentation.body.startsWith('A
                data type for a ') or documentation.body.startsWith('A data type for an ') ) )
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-no_generalizations"
                          name="no generalizations">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-List"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-no_generalizations-ownedComment"
                                body="A List shall not have any generalizations.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-List-no_generalizations"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-no_generalizations-specification">
                     <body>self.base_DataType.generalization-&gt;isEmpty()</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-_single_ownedAttribute_with_multiplicity_0..__typed____________DataType__"
                          name=" single ownedAttribute with multiplicity 0..* typed&#xA;              &lt;DataType&gt;&gt;">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-List"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-_single_ownedAttribute_with_multiplicity_0..__typed____________DataType__-ownedComment"
                                body="A List DataType shall have a single ownedAttribute with multiplicity 0..* whose&#xA;                type is also a DataType.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-List-_single_ownedAttribute_with_multiplicity_0..__typed____________DataType__"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-_single_ownedAttribute_with_multiplicity_0..__typed____________DataType__-specification">
                     <body>(self.base_DataType.ownedAttribute-&gt;size()=1) and
                self.base_DataType.ownedAttribute -&gt;forAll(a|(a.lower=0) and (a.upper=-1)) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-List-base_DataType"
                               name="base_DataType"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-24">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#DataType"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application"
                             name="Application"
                             isAbstract="true">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; An Application stereotype is applied to a Usage dependency between a&#xA;              client Property or Class and a supplier Class. It corresponds to the NIEM concept of&#xA;              &#34;AppliesTo&#34;, which constrains the applicability of the client as being to the NIEM&#xA;              type represented by the supplier class. The Application Stereotype is abstract, its&#xA;              two concrete stereotypes being AugmentationApplication and MetadataApplication,&#xA;              representing the use of &#34;AppliesTo&#34; in the context of augmentation and metadata,&#xA;              respectively. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ion&#xA;              Stereotype is abstract, its two concrete stereotypes being AugmentationApplication and&#xA;              MetadataApplication, representing the use of &#34;AppliesTo&#34; in the context of&#xA;              augmentation and metadata, respectively. &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-24_"
                          name="NDR [Rule 7-24]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-24_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-24] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, the element appinfo:AppliesTo MAY be used in any of the following ways:&#xA;                &lt;/p&gt; &lt;p&gt; 1. To indicate a base type to which an&#xA;                augmentation may be applied. &lt;/p&gt; &lt;p&gt; 2. To indicate a&#xA;                base type to which a metadata type may be applied. &lt;/p&gt;&#xA;                &lt;p&gt; The element appinfo:AppliesTo SHALL NOT be used for any other&#xA;                purpose. &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The appinfo:AppliesTo element is&#xA;                required to express constraints beyond those available within XML Schema. Use of&#xA;                this element allows advanced processing of instances and schemas for type safety.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt; In UML&#xA;                terms, the &lt;Usage&gt; client must be either an augmentation element&#xA;                (i.e., a &lt;Property&gt; whose type is an &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567y&#34;&gt;Augmentation&lt;/a&gt;&gt;&gt;)&#xA;                or a &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567z&#34;&gt;Metadata&lt;/a&gt;&gt;&gt;&#xA;                &lt;Classifier&gt;. Â Â The &lt;Usage&gt; supplier must be a&#xA;                &lt;Classifier&gt;. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt;&#xA;                0_2_7b3022e_1312665991957_183350_2567z&#34;&gt;Metadata&lt;/a&gt;&gt;&gt;&#xA;                &lt;Classifier&gt;. Â Â The &lt;Usage&gt; supplier must be a&#xA;                &lt;Classifier&gt;. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-24_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-24_-specification">
                     <body>self.base_Usage.supplier-&gt;forAll(s|s.oclIsKindOf(Classifier)) and
                self.base_Usage.client -&gt;forAll(client| client.stereotypedBy('MetadataType')
                or ( client.oclIsKindOf(Property) and
                client.oclAsType(Property).type.stereotypedBy('AugmentationType') ) )</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-25_"
                          name="NDR [Rule 7-25]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-25_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-25] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, the element appinfo:AppliesTo SHALL indicate a schema component by&#xA;                namespace and name. &lt;/p&gt; &lt;p&gt; &lt;/p&gt;&#xA;                &lt;p&gt; In UML, the &lt;&lt;AppliesTo&gt;&gt; must have a&#xA;                supplier which is a &lt;Class&gt; or &lt;Datatype&gt; whose&#xA;                nearestPackage is imported via &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_3_24a0131_1319232695341_898926_1534&#34;&gt;NDRSchema&lt;/a&gt;&gt;&gt;.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                31_1319232695341_898926_1534&#34;&gt;NDRSchema&lt;/a&gt;&gt;&gt;.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-25_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-25_-specification">
                     <body>self.base_Usage.supplier -&gt;forAll(supplier| (supplier.oclIsKindOf(Class)
                or supplier.oclIsKindOf(DataType)) and
                supplier.getNearestPackage().stereotypedBy('Namespace') )</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-27_"
                          name="NDR [Rule 7-27]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-27_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-27] (REF, EXT) &lt;/b&gt;Given&#xA;                that the element appinfo:AppliesTo refers to a type, the applicability described by&#xA;                the element SHALL be understood to be the indicated type or a type transitively&#xA;                derived from the indicated type. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; the indicated type. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-27_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-27_-specification">
                     <body>This constraint is decomposed into two specific cases. NDR [Rule 7-49] defines
                constraints related to applying Augmentation and NDR [Rule 7-45] defines constraints
                related to applying Metadata. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-26_"
                          name="NDR [Rule 7-26]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-26_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-26] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, an attribute appinfo:namespace owned by an element appinfo:AppliesTo&#xA;                SHALL indicate the namespace of the type to which appinfo:AppliesTo refers. The&#xA;                indicated namespace SHALL be defined by a NIEM-conformant schema. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;/p&gt; &lt;p&gt; In UML, the&#xA;                &lt;&lt;AppliesTo&gt;&gt; must have a supplier which is a&#xA;                &lt;Class&gt; or &lt;Datatype&gt; whose nearestPackage is imported&#xA;                via &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_3_24a0131_1319232695341_898926_1534&#34;&gt;NDRSchema&lt;/a&gt;&gt;&gt;.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                3_24a0131_1319232695341_898926_1534&#34;&gt;NDRSchema&lt;/a&gt;&gt;&gt;.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-26_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-26_-specification">
                     <body>This constraint, at the UML level, is identical to NDR [Rule 7-25]. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-46_"
                          name="NDR [Rule 7-46]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-46_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-46] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, a &lt;&lt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567z&#34;&gt;Metadata&lt;/a&gt;&gt;&gt;&#xA;                type that does not have application information appinfo:AppliesTo MAY be applied to&#xA;                any object type, association type, or external adapter type. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Metadata may be&#xA;                constrained to be applicable to only specific types, or it may be defined to be&#xA;                applicable to any type. The source of a piece of data and the security&#xA;                classification of a piece of data are examples of metadata that may be considered&#xA;                globally applicable. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                tadata that may be considered globally applicable. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-46_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-46_-specification">
                     <body>Definitional constraint. Application of
                &lt;&lt;AppliesTo&gt;&gt; is optional. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-28_"
                          name="NDR [Rule 7-28]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-28_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-28] (REF, EXT)&lt;/b&gt; Within the schema, an&#xA;                element appinfo:AppliesTo that does not carry an attribute appinfo:namespace SHALL&#xA;                refer to the target namespace of the schema in which it is used.&#xA;                &lt;/body&gt; &lt;/html&gt; is used. &lt;/body&gt;&#xA;                &lt;/html&gt; ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-28_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-28_-specification">
                     <body>This constraint is resolved by the combination of other constraints and the
                PSM-XSD transformations. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-29_"
                          name="NDR [Rule 7-29]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-29_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-29] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an element appinfo:AppliesTo SHALL carry an attribute appinfo:name. The&#xA;                value of this attribute SHALL indicate the local name of a schema component within&#xA;                the namespace specified by the element. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Together, this set of rules establishes&#xA;                the element appinfo:AppliesTo as a reference to a NIEM-conformant schema component&#xA;                to which a NIEM construct may be applied. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; t to which a NIEM construct may be applied. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-29_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-NDR__Rule_7-29_-specification">
                     <body>This constraint is resolved by other constraints in combination with the PSM -
                XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-Application-base_Usage"
                               name="base_Usage"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-20">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Usage"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType"
                             name="AdapterType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; An AdapterType is a NIEMType Class that represents a NIEM adapter&#xA;              type. A NIEM adapter type is a NIEM object type that adapts external components for&#xA;              use within NIEM. External components are not NIEM-conforming (e.g., data components&#xA;              from other standards, e.g. GML, ISO, etc.). An adapter type creates a new class of&#xA;              object that embodies a single concept composed of external components.&#xA;              &lt;/p&gt; &lt;p&gt; AdapterType is implemented in XML Schema as a&#xA;              complex type definition with complex content. Section 3.4 of &lt;a&#xA;              href=&#34;http://www.w3.org/TR/2004/REC-xmlschema-1-20041028/&#34;&gt;XML Schema&#xA;              Structures&lt;/a&gt; addresses complex type definitions in XML Schema; Section&#xA;              7.7 of &lt;a&#xA;              href=&#34;http://reference.niem.gov/niem/specification/naming-and-design-rules/1.3/&#34;&gt;NIEM&#xA;              NDR v1.3&lt;/a&gt; addresses adapter types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; NIEM NDR&#xA;              v1.3&lt;/a&gt; addresses adapter types in NIEM-conformant XML Schema.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType-NDR__Rule_7-14_-specification">
                     <body>self.base_Class.profiledBy('NIEM_PSM_Profile') implies
                self.base_Class.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and ( documentation.body.startsWith('A
                data type for a ') or documentation.body.startsWith('A data type for an ') ) )
              </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-AdapterType-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-NIEMType"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-31">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-References-base_Realization"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-31-ownedEnd"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-31-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-31-ownedEnd"
                         name="extension_Subsets"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_Common_Profile-References"
                         association="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-31">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_Common_Profile-packagedElement-31-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="_17_0_4_1_7b3022e_1378571155288_677635_3443"
                             name="LocalVocabulary">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="_17_0_4_1_7b3022e_1378571916746_589825_3547"
                             body="Local vocabulary defines a set of domain specific terms or abbreviations that then may be used in NIEM names and definitions.  The local vocabulary is defined as stereotype of enumeration where each enumeration literal is a vocabulary term. The enumeration literalâs UML name corresponds with the domain specific abbreviation, the âUML Specificationâ corresponds with the expansion of the abbreviation and the UML Documentation corresponds to the NIEM definition. The NIEM sourceURI may also be set by applying the âSourceâ stereotype to the enumeration literal.&#xA;&#xA;Clarification of mapping:&#xA;SourceText[0..*]  is represented as UML ownedComment.body&#xA;term[1..1]  is represented as UML name &#xA;literal[0..1]  is represented as UML  specification.name&#xA;definition[0..1] is represented as UML specification.oclAsType(UML::StringLiteral).value&#xA;sourceURIs[1..*]  is represented as the tag sourceURIs on the applied Stereotype &lt;&lt;Source&gt;&gt;&#xA;&#xA;">
                  <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1378571155288_677635_3443"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1378571217895_757035_3475"
                               name="base_Enumeration"
                               visibility="private"
                               association="_17_0_4_1_7b3022e_1378571217895_118307_3474">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Enumeration"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="_17_0_4_1_7b3022e_1378571174408_61724_3449"
                             name="LocalTerm">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="_17_0_4_1_7b3022e_1378572067437_804737_3548"
                             body="The Source stereotype allows an external definition or authority to be referenced by a NIEM element. The sourceURI tag may be used to reference the external definition.  When used with an enumeration literal in a &lt;&lt;LocalVocabulary&gt;&gt; the sourceURI will correspond with the NIEM sourceURI.&#xA;&#xA;">
                  <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1378571174408_61724_3449"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1378571333622_452098_3545"
                               name="sourceURIs"
                               visibility="private">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1378572088873_322667_3549"
                                body="The sourceURI tag may be used to reference the external definition.  When used with an enumeration literal in a &lt;&lt;LocalVocabulary&gt;&gt; the sourceURI will correspond with the NIEM sourceURI.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1378571333622_452098_3545"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_2_1_2aa0151_1379694990123_469838_2593"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="_17_0_2_1_2aa0151_1379694990123_939411_2594"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1378670486601_676430_3540"
                               name="base_EnumerationLiteral"
                               visibility="private"
                               association="_17_0_4_1_7b3022e_1378670486601_643670_3539">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#EnumerationLiteral"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_2_1_2aa0151_1379832609952_988103_2194"
                               name="literal"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_2_1_2aa0151_1379832622437_439040_2196"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_2_1_2aa0151_1379832656846_190580_2198"
                               name="definition"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_2_1_2aa0151_1379832667509_14397_2200"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="_17_0_4_1_7b3022e_1378571217895_118307_3474">
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1378571217895_757035_3475"/>
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1378571217896_294203_3476"/>
               <navigableOwnedEnd xmi:idref="_17_0_4_1_7b3022e_1378571217896_294203_3476"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="_17_0_4_1_7b3022e_1378571217896_294203_3476"
                         name="extension_LocalVocabulary"
                         visibility="private"
                         aggregation="composite"
                         type="_17_0_4_1_7b3022e_1378571155288_677635_3443"
                         association="_17_0_4_1_7b3022e_1378571217895_118307_3474">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1378571217896_980727_3477"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="_17_0_4_1_7b3022e_1378670486601_643670_3539">
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1378670486601_676430_3540"/>
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1378670486602_667291_3541"/>
               <navigableOwnedEnd xmi:idref="_17_0_4_1_7b3022e_1378670486602_667291_3541"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="_17_0_4_1_7b3022e_1378670486602_667291_3541"
                         name="extension_Source"
                         visibility="private"
                         aggregation="composite"
                         type="_17_0_4_1_7b3022e_1378571174408_61724_3449"
                         association="_17_0_4_1_7b3022e_1378670486601_643670_3539">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1378670486602_325061_3542"/>
               </ownedEnd>
            </packagedElement>
         </packagedElement>
         <packagedElement xmi:type="uml:Profile"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile"
                          name="Model_Package_Description_Profile"
                          URI="http://www.omg.org/spec/NIEM-UML/20130801/Model_Package_Description_Profile">
            <metamodelReference xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packageImport"/>
            <ownedComment xmi:type="uml:Comment"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ownedComment"
                          body="The Model Package Description Profile comprises stereotypes that are used to mode&#xA;            NIEM MPDs. The diagram shows all the stereotypes defined in this profile.">
               <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile"/>
            </ownedComment>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packageImport">
               <importedPackage href="http://www.omg.org/spec/UML/20110701/UML.xmi#_0"/>
            </packageImport>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1">
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-base_Component"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd"
                         name="extension_"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"
                         association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Class"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType"
                             name="POCType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A set&#xA;              of metadata used to contact the authoritative source for an MPD. &lt;/body&gt;&#xA;              &lt;/html&gt; &lt;/body&gt; &lt;/html&gt; l&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-POCType"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone"
                               name="POCTelephone"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                telephone number. &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone"/>
                  </ownedComment>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCTelephone-upperValue"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCName"
                               name="POCName"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCName-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                name for a person, position, or title. &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCName"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail"
                               name="POCEmail"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; An&#xA;                email address. &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail"/>
                  </ownedComment>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-POCType-POCEmail-upperValue"
                              value="*"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"
                             name="ModelPackageDescriptionFile">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The ModelPackageDescriptionFile stereotype applies to a Usage&#xA;              dependency that represents a relationship between an MPD or a file set and an artifact&#xA;              (generally a namespace) to be included in the MPD. Reference Sections 4.2.3 and 4.2.4&#xA;              of NIEM MPD Specification v1.0&#xA;              (http://reference.niem.gov/niem/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              l-package-description/1.0/). &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_"
                          name="NDR [Rule 6-15]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-15] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any attribute declaration owning the attribute name MUST appear&#xA;                as an immediate child of the document element xsd:schema. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; All schema components&#xA;                defined by NIEM-conformant schemas are named, accessible from outside the defining&#xA;                schema, and reusable across schemas. Local attribute definitions provide named&#xA;                attributes that are not reusable outside the context in which they are defined.&#xA;                Requiring named NIEM attributes to be top level ensures that they are globally&#xA;                reusable. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; to be top&#xA;                level ensures that they are globally reusable. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; /body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-15_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_"
                          name="MPD [Rule 3-01]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 3-1] &lt;/b&gt;Any XML instance&#xA;                that validates against a correct NIEM schema subset will always validate against the&#xA;                entire NIEM reference schema set from which that subset was created.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p align=&#34;LEFT&#34;&#xA;                style=&#34;margin-bottom:0in;margin-top:0.11in;&#34;&gt; &lt;font face=&#34;Times,&#xA;                serif&#34; color=&#34;#000000&#34; size=&#34;2&#34;&gt;This rule should be satisfied as a result of&#xA;                redefinition semantics and other constraints&lt;/font&gt;&lt;font&#xA;                face=&#34;Times&#34; color=&#34;#000000&#34; size=&#34;2&#34;&gt; associated with&#xA;                &lt;&lt;&lt;/font&gt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567Q&#34;&gt;References&lt;/a&gt;&lt;font&#xA;                face=&#34;Times&#34; color=&#34;#000000&#34;&#xA;                size=&#34;2&#34;&gt;&gt;&gt;&lt;/font&gt;&lt;font face=&#34;Times,&#xA;                serif&#34; color=&#34;#000000&#34; size=&#34;2&#34;&gt;. We require that all type definitions in the&#xA;                &lt;/font&gt;&lt;font face=&#34;Times&#34; color=&#34;#000000&#34;&#xA;                size=&#34;2&#34;&gt;subset &lt;/font&gt;&lt;font face=&#34;Times, serif&#34;&#xA;                color=&#34;#000000&#34; size=&#34;2&#34;&gt;schema are &lt;/font&gt;&lt;font&#xA;                face=&#34;Times&#34; color=&#34;#000000&#34;&#xA;                size=&#34;2&#34;&gt;&lt;&lt;&lt;/font&gt;&lt;a&#xA;                href=&#34;mdel://_17_0_2_7b3022e_1312665991957_183350_2567Q&#34;&gt;References&lt;/a&gt;&lt;font&#xA;                face=&#34;Times&#34; color=&#34;#000000&#34;&#xA;                size=&#34;2&#34;&gt;&gt;&gt;&lt;/font&gt;&lt;font face=&#34;Times,&#xA;                serif&#34; color=&#34;#000000&#34; size=&#34;2&#34;&gt; &lt;/font&gt;&lt;font&#xA;                face=&#34;Times&#34; color=&#34;#000000&#34; size=&#34;2&#34;&gt;to&lt;/font&gt;&lt;font&#xA;                face=&#34;Times, serif&#34; color=&#34;#000000&#34; size=&#34;2&#34;&gt;&#xA;                &lt;/font&gt;&lt;font face=&#34;Times&#34; color=&#34;#000000&#34;&#xA;                size=&#34;2&#34;&gt;corresponding type definitions in&#xA;                the&lt;/font&gt;&lt;font face=&#34;Times, serif&#34; color=&#34;#000000&#34;&#xA;                size=&#34;2&#34;&gt; reference schema and that all elements in type definitions are&#xA;                redefinitions. &lt;/font&gt; &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ize=&#34;2&#34;&gt; reference schema and that all elements in type&#xA;                definitions are redefinitions. &lt;/font&gt; &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-01_-specification">
                     <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema')
                ) implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
                -&gt;forEach(subsetElement|
                subsetElement.clientDependency-&gt;exists(d|d.stereotypedBy('References')) and
                subsetElement.clientDependency-&gt;select(d|d.stereotypedBy('References')).supplier
                -&gt;forEach(referenceElement| (subsetElement.name=referenceElement.name) and
                (subsetElement.metaClass()=referenceElement.metaClass()) and(
                subsetElement.oclIsKindOf(Namespace) implies
                subsetElement.oclAstype(Namespace).ownedMember -&gt;forEach(subsetMember|
                referenceElement.oclAstype(Namespace).ownedMember -&gt;exists(referenceMember|
                (subsetMember.name=referenceMember.name) and
                (subsetMember.metaClass()=referenceMember.metaClass()) ) ) ) ) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_"
                          name="NDR [Rule 6-45]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-45] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, when a namespace other than the XML namespace&#xA;                or the XML Schema namespace is used, its content MUST be valid with respect to the&#xA;                schema imported for that namespace. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; XML Schema does not address the&#xA;                schema-validity of content used for annotations or attributes on schema components.&#xA;                This rule ensures that content used in such a manner is schema-valid. This&#xA;                encourages interoperable data definitions and schema documents. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ages interoperable data definitions and&#xA;                schema documents. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-45_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_"
                          name="NDR [Rule 6-07]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-7] (REF, SUB, EXT)&lt;/b&gt; The&#xA;                schema SHALL NOT reference the type xsd:anyType. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; XML Schema has the&#xA;                concept of the &#34;ur-type,&#34; a type that is the root of all other types. This type is&#xA;                realized in schemas as xsd:anyType. &lt;/p&gt; &lt;p&gt;&#xA;                NIEM-conformant schemas must not use xsd:anyType, because this feature permits the&#xA;                introduction of arbitrary content (i.e., untyped and unconstrained data) into an XML&#xA;                instance. NIEM intends that the schemas describing that instance describe all&#xA;                constructs within the instance. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; describing that instance describe all constructs within the&#xA;                instance. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-07_-specification">
                     <body>This constraint is realized by not defining an xsd:anyType as part of the type
                system.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_"
                          name="NDR [Rule 7-59]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-59] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, any two elements of the form &lt;/p&gt;&#xA;                &lt;p style=&#34;margin-left:10.0px;&#34;&gt; &lt;i&gt;NCName&#xA;                &lt;/i&gt; &lt;/p&gt; &lt;p style=&#34;margin-left:0.0px;&#34;&gt;&#xA;                and &lt;/p&gt; &lt;p style=&#34;margin-left:10.0px;&#34;&gt;&#xA;                &lt;i&gt;NCNameReference&lt;/i&gt; &lt;/p&gt; &lt;p&#xA;                style=&#34;margin-left:0.0px;&#34;&gt; where the string value of NCName is the same in&#xA;                both forms, SHALL be defined to have identical semantics. NIEM recognizes no&#xA;                difference in meaning between a reference element and an element that is not a&#xA;                reference element. &lt;/p&gt; &lt;p style=&#34;margin-left:0.0px;&#34;&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; NIEM-conformant data instances may use&#xA;                concrete data elements and reference elements as needed, to represent the meaning of&#xA;                the fundamental data. There is no difference in meaning between reference and&#xA;                concrete data representations. The two different methods are available for ease of&#xA;                representation. No difference in meaning should be implied by the use of one method&#xA;                or the other. &lt;/p&gt; &lt;p style=&#34;margin-left:0.0px;&#34;&gt;&#xA;                Assertions that indicate &#34;included&#34; data is intrinsic, while referenced data is&#xA;                extrinsic, are not valid and are not applicable to NIEM-conformant data instances&#xA;                and data definitions. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                quot; data is intrinsic, while referenced data is extrinsic, are not valid and are&#xA;                not applicable to NIEM-conformant data instances and data definitions.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-59_-specification">
                     <body>Definitional.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_"
                          name="NDR [Rule 6-25]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-25] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, if the element xsd:sequence carries the&#xA;                attribute maxOccurs, it MUST set the value of the attribute to 1. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; XML Schema allows&#xA;                each particle to specify cardinality (how many times the particle may appear in an&#xA;                instance). NIEM restricts the cardinality of xsd:sequence particles to exactly one,&#xA;                to ensure that content model definitions are defined in as straightforward a manner&#xA;                as possible. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; efined&#xA;                in as straightforward a manner as possible. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-25_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_"
                          name="NDR [Rule 6-12]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-12] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                schema SHALL NOT contain the element xsd:anyAttribute. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; The xsd:anyAttribute&#xA;                element provides a wildcard, where arbitrary attributes may appear. The element&#xA;                xsd:anyAttribute may appear within constraint schemas or within other schemas that&#xA;                are not NIEM-conformant, but it is prohibited in NIEM-conformant schemas.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; t is prohibited in&#xA;                NIEM-conformant schemas. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-12_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_"
                          name="NDR [Rule 7-15]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-15] (REF, EXT) &lt;/b&gt;The&#xA;                schema SHALL import the appinfo namespace. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; For uniformity, all NIEM-conformant&#xA;                schemas must import the appinfo namespace. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; the appinfo namespace. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-15_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_"
                          name="NDR [Rule 7-69]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-69] (SUB)&lt;/b&gt; The value of the&#xA;                targetNamespace attribute owned by the xsd:schema document element of the subset&#xA;                schema must be the same as the value of the targetNamespace attribute owned by the&#xA;                xsd:schema document element of the reference schema. &lt;/body&gt;&#xA;                &lt;/html&gt; erence schema. &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-69_-specification">
                     <body>Constraint resolved by resolution to MPD [Rule 3-4]</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_"
                          name="MPD [Rule 3-05.1]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-5.1]&lt;/b&gt; If a schema in a reference schema&#xA;                set has been omitted from a derived subset, then every xsd:import occurrence of that&#xA;                schema MUST be removed from all schemas within the subset. &lt;/body&gt;&#xA;                &lt;/html&gt; e subset. &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05.1_-specification">
                     <body>Constraint on xsd:import is realized by the PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_"
                          name="NDR [Rule 7-13]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-13] (REF, EXT)&lt;/b&gt; A data&#xA;                definition SHALL NOT contain explicit representational or data typing information&#xA;                such as number characters, type of characters, etc., unless the very nature of the&#xA;                component can be described only by such information. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A component&#xA;                definition is intended to describe semantic meaning only, not representation or&#xA;                structure. How a component with simple content is represented is indicated through&#xA;                the representation term and further refined through constraints. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; tion term and further refined through&#xA;                constraints. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-13_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_"
                          name="NDR [Rule 9-21]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-21] (REF, SUB, EXT) &lt;/b&gt;Within the schema,&#xA;                the name of an element declaration that is of complex content and that does not&#xA;                correspond to a concept listed in NDR Table 9-2: Representation Terms MUST NOT use a&#xA;                representation term. &lt;/body&gt; &lt;/html&gt; entation term.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-21_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_"
                          name="NDR [Rule 6-05]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-5] (REF, SUB, EXT)&lt;/b&gt; The&#xA;                schema SHALL NOT contain the element xsd:include. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Element xsd:include&#xA;                brings schemas defined in separate files into the current namespace. It breaks a&#xA;                namespace up into arbitrary partial schemas, which needlessly complicates the schema&#xA;                structure, making it harder to reuse and process, and also increases the likelihood&#xA;                of conflicting definitions. &lt;/p&gt; &lt;p&gt; Inclusion of&#xA;                schemas that do not have namespaces also complicates schema understanding. This&#xA;                inclusion makes it difficult to find the realization of a specific schema artifact&#xA;                and create aliases for schema components that should be reused. Inclusion of schemas&#xA;                also violates [Principle 8], as it uses multiple schemas to construct a namespace.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; mas also violates&#xA;                [Principle 8], as it uses multiple schemas to construct a namespace.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-05_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_"
                          name="MPD [Rule 3-03]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-3]&lt;/b&gt; NIEM subset schemas may omit all&#xA;                xsd:annotation elements that are in the NIEM reference schema from which it is&#xA;                derived. &lt;/body&gt; &lt;/html&gt; ved. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-03_-specification">
                     <body>Constraint satisfied by other documentedComponent rules which exclude subset
                schemas.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_"
                          name="NDR [Rule 7-34]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-34] (REF, EXT)&lt;/b&gt; Within the schema, an&#xA;                element appinfo:ReferenceTarget that does not carry an attribute appinfo:namespace&#xA;                SHALL refer to the target namespace of the schema in which it is used.&#xA;                &lt;/body&gt; &lt;/html&gt; is used. &lt;/body&gt;&#xA;                &lt;/html&gt; ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-34_-specification">
                     <body>Constraint resolved by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_"
                          name="NDR [Rule 6-16]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-16] (REF, EXT) &lt;/b&gt;The&#xA;                schema SHALL NOT contain any of the elements xsd:unique, xsd:key, xsd:keyref,&#xA;                xsd:selector, or xsd:field. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; XML Schema provides NIEM with the&#xA;                ability to apply uniqueness constraints to schema-validated content. These&#xA;                mechanisms, however, establish relationships in a way that is very difficult to&#xA;                understand, extend, and keep consisent through schema reuse. These elements may be&#xA;                used in subset schemas and constraint schemas. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; be used in subset schemas and constraint&#xA;                schemas. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-16_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_"
                          name="NDR [Rule 6-24]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-24] (REF, SUB, EXT)&lt;/b&gt; Within the schema, if&#xA;                the element xsd:sequence carries the attribute minOccurs, it MUST set the value for&#xA;                the attribute to 1. &lt;/body&gt; &lt;/html&gt; ute to 1.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-24_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_"
                          name="NDR [Rule 7-70]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-70] (SUB) &lt;/b&gt;The schema&#xA;                must be constructed such that any instance that is XML Schema valid against the&#xA;                schema must also be XML Schema valid against the base schema. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A subset schema is a&#xA;                briefer, abridged form of its base schema. The subset schema is intended to stand in&#xA;                the place of the base schema for the purpose of XML Schema validation in many&#xA;                situations. As such, it is imperative that the subset schema sustain the constraints&#xA;                expressed by the base schema. The NDR does not specify what mechanisms a subset&#xA;                schema must use to support the constraints of the base schema. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; t schema must use to support the&#xA;                constraints of the base schema. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-70_-specification">
                     <body>Constraint resolved by resolution to MPD [Rule 3-1]</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_"
                          name="NDR [Rule 7-30]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-30] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, the element appinfo:ReferenceTarget SHALL identify the XML Schema type&#xA;                definition of an element information item to which an instance of a reference&#xA;                element may validly refer. The element appinfo:ReferenceTarget SHALL NOT be used for&#xA;                any other purpose. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This describes the meaning of a&#xA;                reference target. The term type definition is as used in&#xA;                &lt;b&gt;[XMLSchemaStructures]&lt;/b&gt;, in the PSVI&#xA;                (post-schema-validation infoset) definition for an element information item. The&#xA;                element appinfo:ReferenceTarget is required to express the type of referenced&#xA;                content. XML Schema does not provide this level of type safety. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; erenced content. XML Schema does not&#xA;                provide this level of type safety. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-30_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_"
                          name="NDR [Rule 6-17]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-17] (REF, SUB, EXT)&lt;/b&gt; The&#xA;                schema SHALL NOT contain the element xsd:all. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The element xsd:all provides a set of&#xA;                particles (e.g., elements) that may be included in an instance, in no particular&#xA;                order. This can greatly complicate processing and may be difficult to comprehend and&#xA;                satisfy. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; difficult to&#xA;                comprehend and satisfy. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-17_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_"
                          name="NDR [Rule 6-41]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-41] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the element xsd:import MUST carry the attribute schemaLocation.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; An&#xA;                import that does not specify a schema location gives no clue to processing&#xA;                applications as to where to find an implementation of the namespace. Even though&#xA;                such a provided schema location may be overridden, it is important that an initial&#xA;                default be provided for processing. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; initial default be provided for processing. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-41_-specification">
                     <body>Constraint realized by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_"
                          name="NDR [Rule 6-01]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-1] (REF, SUB, EXT) &lt;/b&gt;Within the schema, an&#xA;                element xsd:complexType SHALL NOT own the attribute mixed with the value true.&#xA;                &lt;/body&gt; &lt;/html&gt; rue. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-01_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_"
                          name="MPD [Rule 3-04]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-4] &lt;/b&gt;Each schema in a schema subset derived&#xA;                from a schema reference set bears the same (target) namespace as the schema in the&#xA;                reference set on which it is based. &lt;/body&gt; &lt;/html&gt; is&#xA;                based. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-04_-specification">
                     <body>self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema'
                implies self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
                -&gt;exists(element| element.clientDependency
                -&gt;select(d|d.stereotypedBy('References')).supplier.getNearestPackage()
                -&gt;select(r|r.stereotypedBy('Namespace')).getStereotypeApplication('Namespace').targetNamespace=
                element.owner.getStereotypeApplication('Namespace').targetNamespace ) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_"
                          name="NDR [Rule 7-05]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-5] (REF, EXT)&lt;/b&gt; Within the schema, any&#xA;                element xsd:simpleType MUST be a documented component. &lt;/body&gt;&#xA;                &lt;/html&gt; ent. &lt;/body&gt; &lt;/html&gt; l&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-05_-specification">
                     <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
                or (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
                ) ) implies
                self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
                -&gt;select(c|c.oclIsKindOf(DataType)).oclAsType(DataType)
                -&gt;forAll(simpleType |
                simpleType.ownedComment-&gt;exists(documentation|documentation.stereotypedBy('Documentation')))</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_"
                          name="NDR [Rule 6-42]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-42] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the value of the required attribute schemaLocation carried by the&#xA;                element xsd:import MUST match either the production &lt;absolute-URI&gt; or&#xA;                the definition of &#34;relative-path reference,&#34; as defined by&#xA;                &lt;b&gt;[RFC3986]&lt;/b&gt;. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The default value may be specified&#xA;                either as absolute or relative URIs. Since URNs are not resolvable, they are&#xA;                inappropriate for use in schemaLocation. The requirement for conformance to&#xA;                &#34;relative-path reference&#34; is required to avoid the more obscure syntax of&#xA;                &#34;network-path reference&#34; and the system-specific &#34;absolute-path reference.&#34;&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ot; and the&#xA;                system-specific &#34;absolute-path reference.&#34; &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-42_-specification">
                     <body>This constraint is superceded by MPD [Rule 6-4]. Implementation of MPD [Rule
                6-4] resolves this constraint. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_"
                          name="NDR [Rule 7-04]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-4] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, any element xsd:complexType MUST be a documented component.&#xA;                &lt;/p&gt; &lt;p&gt; Note that MPD [Rule 3-3] relaxes this&#xA;                requirement for subset schemas. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; nt for subset schemas. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-04_-specification">
                     <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
                or (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
                ) ) implies
                self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
                -&gt;select(c|c.oclIsKindOf(Class) and
                not(c.stereotypedBy('PropertyHolder'))).oclAsType(Class) -&gt;forAll(complexType
                |
                complexType.ownedComment-&gt;exists(documentation|documentation.stereotypedBy('Documentation'))) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_"
                          name="NDR [Rule 9-4]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-4] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                hyphen character ('-') MAY appear in component names only when used as a separator&#xA;                between parts of a single word, phrase, or value, which would otherwise be&#xA;                incomprehensible without the use of a separator. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Names of standards&#xA;                and specifications, in particular, tend to consist of series of discrete numbers.&#xA;                Such names require some explicit separator to keep the values from running together.&#xA;                The separator used within NIEM is the hyphen. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; her. The separator used within NIEM is&#xA;                the hyphen. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-4_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_"
                          name="NDR [Rule 6-59]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-59] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, the attribute ref owned by any element&#xA;                xsd:attributeGroup MUST have a value of a qualified name (possibly using the default&#xA;                namespace) that SHALL resolve to the namespace for the NIEM structures namespace and&#xA;                the local name SimpleObjectAttributeGroup. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;[Rationale] &lt;/b&gt;The only attribute group used within&#xA;                NIEM-conformant schemas is structures:SimpleObjectAttributeGroup. Therefore, within&#xA;                a NIEM-conformant schema, only this attribute group can be referenced.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; mant schema, only&#xA;                this attribute group can be referenced. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-59_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_"
                          name="NDR [Rule 5-1]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 5-1] (REF, SUB, EXT, CON)&lt;/b&gt;&#xA;                The schema MUST conform to XML as specified by&lt;b&gt;&#xA;                [XML]&lt;/b&gt;. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; XML is a well-known, commonly used W3C&#xA;                Recommendation. It is supported by a large number of commercial and open-source&#xA;                software tools. It is a simple, well-defined, semi-structured data format that is&#xA;                flexible enough to allow for easy extension. XML works with many other powerful&#xA;                associated technologies such as XML Schema, XSLT, and XPath. Artifacts of NIEM&#xA;                conform to the most recent recommendation for XML. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; f NIEM conform to the most recent&#xA;                recommendation for XML. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-1_-specification">
                     <body>This constraint is realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_"
                          name="MPD [Rule 3-08]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-8] &lt;/b&gt;A constraint schema bears a target&#xA;                namespace that has been previously assigned by a reference schema, extension schema,&#xA;                or exchange schema, or is a schema that is intended to support a constraint schema&#xA;                that has such a target namespace. &lt;/body&gt; &lt;/html&gt; get&#xA;                namespace. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-08_-specification">
                     <body>Constraint schemas are not modeled with the NIEM Profile. This constraint is not
                applied.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_"
                          name="NDR [Rule 6-39]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-39] (REF, SUB, EXT)&lt;/b&gt; Within the schema,&#xA;                the element xsd:import MUST carry the attribute namespace. &lt;/body&gt;&#xA;                &lt;/html&gt; ace. &lt;/body&gt; &lt;/html&gt; l&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-39_-specification">
                     <body>Constraint realized by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_"
                          name="NDR [Rule 6-02]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-2] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, an element declaration that is of complex content SHALL NOT own&#xA;                the attribute mixed with the value true. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Mixed content allows the mixing of data&#xA;                tags with text. Languages such as XHTML use this syntax for markup of text.&#xA;                NIEM-conformant schemas define XML that is for data exchange, not text markup. Mixed&#xA;                content creates complexity in processing, defining, and constraining content.&#xA;                &lt;/p&gt; &lt;p&gt; Well-defined markup languages exist outside&#xA;                NIEM and may be used with NIEM data. External schemas may include mixed content and&#xA;                may be used with NIEM. However, mixed content must not be defined by NIEM-conformant&#xA;                schemas in keeping with [Principle 9]. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; content must not be defined by NIEM-conformant schemas in&#xA;                keeping with [Principle 9]. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; /body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-02_-specification">
                     <body>This constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_"
                          name="NDR [Rule 7-54]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-54] (REF, EXT) &lt;/b&gt;The&#xA;                schema MUST import the NIEM structures namespace. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; For uniformity, all&#xA;                NIEM-conformant schemas must import the structures namespace. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; the structures namespace.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; y&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-54_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_"
                          name="NDR [Rule 9-9]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-9] (REF, SUB, EXT)&lt;/b&gt; A noun used as a term&#xA;                in the name of an XML Schema component MUST be in singular form unless the concept&#xA;                itself is plural. &lt;/body&gt; &lt;/html&gt; plural.&#xA;                &lt;/body&gt; &lt;/html&gt; tml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-9_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_"
                          name="NDR [Rule 6-51]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-51] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an element in the XML Schema namespace MUST NOT occur as a descendant of&#xA;                any element xsd:appinfo. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; NIEM-conformant schemas are designed to&#xA;                be very easily processed. Although uses of XML Schema elements as content of&#xA;                xsd:appinfo elements could be contrived, it is not current practice and could&#xA;                seriously complicate the authoring of schema validators and processors, such as&#xA;                XSLT, which may evaluate XML elements by their namespaces and names. Forbidding the&#xA;                use of XML Schema elements outside valid uses of schema will simplify such&#xA;                processing. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ents&#xA;                outside valid uses of schema will simplify such processing. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-51_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_"
                          name="NDR [Rule 9-13]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-13] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                object-class term of a NIEM component SHALL consist of a term identifying a category&#xA;                of concrete concepts or entities. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The object-class term indicates the&#xA;                object category that this data component describes or represents. This term provides&#xA;                valuable context and narrows the scope of the component to an actual class of things&#xA;                or concepts. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; t to an&#xA;                actual class of things or concepts. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-13_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_"
                          name="NDR [Rule 7-20]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-20] (REF, EXT) &lt;/b&gt;Within the schema, an&#xA;                element appinfo:Base that does not own an attribute appinfo:namespace SHALL refer to&#xA;                the target namespace of the schema in which it is used. &lt;/body&gt;&#xA;                &lt;/html&gt; is used. &lt;/body&gt; &lt;/html&gt;&#xA;                ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-20_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_"
                          name="NDR [Rule 6-04]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-4] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                schema SHALL NOT contain the element xsd:notation. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; XML Schema notations&#xA;                allow the attachment of system and public identifiers on fields of data. The&#xA;                notation mechanism does not play a part in validation of instances and is not&#xA;                supported by NIEM. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                tances and is not supported by NIEM. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-04_-specification">
                     <body>Constrained realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_"
                          name="NDR [Rule 9-18]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-18] (REF, EXT)&lt;/b&gt; If any&#xA;                word in the representation term is redundant with any word in the property term, one&#xA;                occurrence SHOULD be deleted. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This rule, carried over from 11179, is&#xA;                designed to prevent repeating terms unnecessarily within component names. For&#xA;                example, this rule allows designers to avoid naming an element&#xA;                &#34;PersonFirstNameName.&#34; &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; an element &#34;PersonFirstNameName.&#34; &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-18_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_"
                          name="NDR [Rule 9-14]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-14] (REF, SUB, EXT)&lt;/b&gt; A&#xA;                property term SHALL describe or represent a characteristic or subpart of an entity&#xA;                or concept. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The property term describes the central&#xA;                meaning of the data component. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; of the data component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-14_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_"
                          name="NDR [Rule 6-21]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-21] (EXT)&lt;/b&gt; Within the schema, any&#xA;                immediate child of a model group xsd:choice element MUST be one of xsd:annotation or&#xA;                xsd:element. &lt;/body&gt; &lt;/html&gt; ent. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-21_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_"
                          name="NDR [Rule 9-11]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-11] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Articles, conjunctions, and prepositions SHALL NOT be used in NIEM component names&#xA;                except where they are required for clarity or by standard convention.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                Articles (e.g., a, an, the), conjunctions (e.g., and, or, but), and prepositions&#xA;                (e.g., at, by, for, from, in, of, to) are all disallowed in NIEM component names,&#xA;                unless they are required. For example, PowerOfAttorneyCode requires the preposition.&#xA;                These rules constrain slight variations in word forms and types to improve&#xA;                consistency and reduce potentially ambiguous or confusing component names.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; y and reduce&#xA;                potentially ambiguous or confusing component names. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-11_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_"
                          name="NDR [Rule 7-18]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-18] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, the element appinfo:Base SHALL indicate, by namespace and name, one of&#xA;                the following: &lt;/p&gt; &lt;p&gt; 1. A NIEM-conformant schema&#xA;                component. &lt;/p&gt; &lt;p&gt; 2. structures:Object.&#xA;                &lt;/p&gt; &lt;p&gt; 3. structures:Association. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; . &lt;/p&gt; &lt;p&gt;&#xA;                3. structures:Association. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-18_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_"
                          name="NDR [Rule 7-12]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-12] (REF, EXT)&lt;/b&gt; An&#xA;                object class SHALL NOT be redefined within the definitions of the components that&#xA;                represent properties or subparts of that entity or class. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Data definitions&#xA;                should be concise, precise, and unambiguous without embedding additional definitions&#xA;                of data elements that have already been defined once elsewhere (such as object&#xA;                classes). &lt;b&gt;[ISO 11179 Part 4] &lt;/b&gt;says that&#xA;                definitions should not be nested inside other definitions. Furthermore, a data&#xA;                dictionary is not a language dictionary. It is acceptable to reuse terms (object&#xA;                class, property term, and qualifier terms) from a component name within its&#xA;                corresponding definition to enhance clarity, as long as the requirements and&#xA;                recommendations of &lt;b&gt;[ISO 11179 Part 4]&lt;/b&gt; are not&#xA;                violated. This further enhances brevity and precision. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; [ISO 11179 Part 4]&lt;/b&gt; are&#xA;                not violated. This further enhances brevity and precision. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-12_-specification">
                     <body>Constraint realized by PSM-XSD transformation.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_"
                          name="NDR [Rule 6-20]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-20] (EXT)&lt;/b&gt; Within the schema, any&#xA;                immediate child of a model group xsd:sequence element MUST be one of xsd:annotation,&#xA;                xsd:element, xsd:choice, or xsd:any. &lt;/body&gt; &lt;/html&gt;&#xA;                xsd:any. &lt;/body&gt; &lt;/html&gt; ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-20_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_"
                          name="NDR [Rule 7-62]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-62] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an element xsd:import that imports a namespace defined by an external&#xA;                schema MUST be a documented component. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; A NIEM-conformant schema has well-known&#xA;                documentation points. Therefore, a schema that imports a NIEM-conformant namespace&#xA;                need not provide additional documentation. However, when an external schema is&#xA;                imported, appropriate documentation must be provided at the point of import because&#xA;                documentation associated with external schemas is undefined and variable. In this&#xA;                particular case, documentation of external schemas is required at their point of use&#xA;                in NIEM. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; n of&#xA;                external schemas is required at their point of use in NIEM. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-62_-specification">
                     <body>Constraint realized by PSM-MPD transformations, based on required documentation
                for modeled external schema.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_"
                          name="NDR [Rule 7-11]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-11] (REF, EXT)&lt;/b&gt; An object class SHALL have&#xA;                one and only one associated semantic meaning (i.e., a single word sense) as&#xA;                described in the definition of the component that represents that object class.&#xA;                &lt;/body&gt; &lt;/html&gt; ct class. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-11_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_"
                          name="NDR [Rule 6-06]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-6] (REF, SUB, EXT)&lt;/b&gt; The&#xA;                schema SHALL NOT contain the element xsd:redefine. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; The xsd:redefine&#xA;                element allows an XML Schema document to restrict and extend components from a&#xA;                namespace, in that very namespace. Such redefinition introduces duplication of&#xA;                definitions, allowing multiple definitions to exist for components from a single&#xA;                namespace. This violates [Principle 8] that a single reference schema defines a&#xA;                NIEM-conformant namespace. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; erence schema defines a NIEM-conformant namespace.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-06_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_"
                          name="NDR [Rule 7-16]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-16] (REF, EXT)&lt;/b&gt; A&#xA;                component that is deprecated SHALL be indicated as such by the component having&#xA;                application information appinfo:Deprecated, with an attribute value with a value of&#xA;                true. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Deprecation can allow version&#xA;                management to be more consistent; versions of schema may be incrementally improved&#xA;                without introducing validation problems and incompatibility. As XML Schema lacks a&#xA;                deprecation mechanism, NIEM defines such a mechanism. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; recation mechanism, NIEM defines such a&#xA;                mechanism. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-16_-specification">
                     <body>Deprecated indicator not currently in NIEM Profiles, no constraint specified.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_"
                          name="NDR [Rule 6-56]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-56] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, given an element xsd:complexContent with a child xsd:extension&#xA;                owning an attribute base, the attribute base MUST have a value that resolves to the&#xA;                name of one of the following: &lt;/p&gt; &lt;p&gt; 1. The type&#xA;                structures:ComplexObjectType. &lt;/p&gt; &lt;p&gt; 2. The type&#xA;                structures:MetadataType. &lt;/p&gt; &lt;p&gt; 3. The type&#xA;                structures:AugmentationType. &lt;/p&gt; &lt;p&gt; 4. A complex type&#xA;                that is a NIEM-conformant component. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;[Rationale]&lt;/b&gt; This rule ensures that a CCC has&#xA;                well-defined ancestry. In turn, this ensures that every CCC has well-defined&#xA;                semantics. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; CCC has&#xA;                well-defined ancestry. In turn, this ensures that every CCC has well-defined&#xA;                semantics. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-56_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_"
                          name="NDR [Rule 6-47]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-47] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, the content of the xsd:documentation element that constitutes the data&#xA;                definition of a component MUST be character information items as specified by&#xA;                &lt;b&gt;[XMLInfoSet]&lt;/b&gt;. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; According to the XML&#xA;                Schema specification, the content of xsd:documentation elements is intended for&#xA;                human consumption, whereas other structured XML content is intended for machine&#xA;                consumption. Therefore, the xsd:documentation element MUST NOT contain structured&#xA;                XML data. As such, any XML content appearing within a documentation element is in&#xA;                the context of human-targeted examples and should be escaped using &lt; and&#xA;                &gt;. This rule also prohibits comments within documentation elements.&#xA;                &lt;/p&gt; &lt;p&gt; See&#xA;                &lt;b&gt;[SchemaForXMLSchema]&lt;/b&gt;, the schema for XML Schema,&#xA;                as an example of documentation elements containing properly escaped XML elements.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; XML Schema, as an&#xA;                example of documentation elements containing properly escaped XML elements.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-47_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_"
                          name="NDR [Rule 5-3]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 5-3] (REF, SUB, EXT, CON)&#xA;                &lt;/b&gt;The schema MUST conform to the W3C XML Schema Recommendations: XML&#xA;                Schema Part 1: Structures and XML Schema Part 2: Datatypes, as specified by&#xA;                &lt;b&gt;[XMLSchemaStructures]&lt;/b&gt; and&#xA;                &lt;b&gt;[XMLSchemaDatatypes]&lt;/b&gt;. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; XML Schema has become&#xA;                the generally accepted schema language and is experiencing the most widespread&#xA;                adoption. Although other schema languages exist that offer their own advantages and&#xA;                disadvantages, the current approach is to base NIEM on XML Schema.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ages, the current&#xA;                approach is to base NIEM on XML Schema. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-3_-specification">
                     <body>This constraint is realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_"
                          name="NDR [Rule 6-31]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-31] (REF, SUB) &lt;/b&gt;Within the schema, if an&#xA;                element declaration carries the attribute final, it MUST set the value for the&#xA;                attribute to the empty string. &lt;/body&gt; &lt;/html&gt; y string.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-31_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_"
                          name="NDR [Rule 7-53]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-53] (REF, SUB, EXT)&lt;/b&gt; Any&#xA;                attribute declaration referenced by a component within the schema MUST be from one&#xA;                of the following: &lt;/p&gt; &lt;p&gt; 1. The schema being defined.&#xA;                &lt;/p&gt; &lt;p&gt; 2. A namespace imported as NIEM-conformant.&#xA;                &lt;/p&gt; &lt;p&gt; 3. The structures namespace. &lt;/p&gt;&#xA;                &lt;p&gt; 4. The XML namespace. &lt;/p&gt; &lt;p&gt; 5. An&#xA;                external namespace, in accordance with the rules for external schemas as specified&#xA;                by this specification. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; NIEM-conformant schemas are based on&#xA;                other NIEM-conformant schemas. All attributes and elements must be from&#xA;                NIEM-conformant schemas, the structures namespace, the XML namespace, or an external&#xA;                namespace. This applies to elements referenced for substitution groups as well. It&#xA;                does not apply to content of the schema (e.g., within annotations) or to the XML&#xA;                Schema declarations themselves. It applies only to attributes and elements&#xA;                referenced by the XML Schema components. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; otations) or to the XML Schema declarations themselves. It&#xA;                applies only to attributes and elements referenced by the XML Schema components.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-53_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_"
                          name="NDR [Rule 7-55]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-55] (REF, SUB, EXT,&#xA;                INS)&lt;/b&gt; The schema or instance MUST use content within the NIEM&#xA;                structures namespace as specified in the NDR document and ONLY as specified by the&#xA;                NDR document. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This rule further enforces uniformity&#xA;                and consistency by mandating use of the NIEM structures namespace as is, without&#xA;                modification. Users are not allowed to insert types, attributes, etc. that are not&#xA;                specified by this document (the NDR). &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; that are not specified by this document (the NDR).&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-55_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_"
                          name="NDR [Rule 7-01]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-1] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, the document element xsd:schema MUST have application information&#xA;                appinfo:ConformantIndicator, with text content &#34;true&#34;. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; The&#xA;                appinfo:ConformantIndicator element is how NIEM-conformant schemas indicate that&#xA;                they are, in fact, NIEM-conformant. Without such an indicator, conformance would&#xA;                have to be &#34;guessed&#34; by readers and processors. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &#34;guessed&#34; by readers and processors.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; y&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-01_-specification">
                     <body>self.base_ElementImport.profiledBy('NIEM_PSM_Profile') implies ( (
                (self.natureURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
                or
                (self.natureURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
                ) implies self.importedElement.getStereotypeApplication('Namespace').isConformant ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_"
                          name="NDR [Rule 9-20]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-20] (REF, SUB, EXT) &lt;/b&gt;Within the schema,&#xA;                the name of an element declaration that is of complex content, and that corresponds&#xA;                to a concept listed in NDR Table 9-2: Representation Terms, MUST use a&#xA;                representation term from that table. &lt;/body&gt; &lt;/html&gt; om&#xA;                that table. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-20_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_"
                          name="NDR [Rule 9-30]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-30] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the name of any attribute group definition schema component SHALL&#xA;                use the representation term AttributeGroup. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This clearly identifies attribute&#xA;                groups and partitions their names from the names of other types of schema&#xA;                components. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; of other&#xA;                types of schema components. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-30_-specification">
                     <body>The only Attribute Group allowed in NIEM is the
                structures:SimpleObjectAttributeGroup. The constraint is realized by PSM-XSD
                transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_"
                          name="NDR [Rule 9-17]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-17] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                order of qualifiers SHALL NOT be used to differentiate names. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Very large&#xA;                vocabularies may have many similar and closely related properties and concepts. The&#xA;                use of object, property, and representation terms alone is often not sufficient to&#xA;                construct meaningful names that can uniquely distinguish such components. Qualifier&#xA;                terms provide additional context to resolve these subtleties. However, swapping the&#xA;                order of qualifiers rarely (if ever) changes meaning; qualifier ordering is no&#xA;                substitute for meaningful terms. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; aning; qualifier ordering is no substitute for meaningful&#xA;                terms. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-17_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_"
                          name="NDR [Rule 7-31]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-31] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, a reference element MUST have at most one instance of the element&#xA;                appinfo:ReferenceTarget. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Content elements in XML Schema may have&#xA;                at most one type. This rule ensures that reference elements follow the same pattern.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ents follow the same&#xA;                pattern. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-31_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_"
                          name="NDR [Rule 9-16]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-16] (REF, SUB, EXT)&lt;/b&gt; The number of&#xA;                qualifier terms SHOULD be limited to the absolute minimum required to make the&#xA;                component name unique and understandable. &lt;/body&gt;&#xA;                &lt;/html&gt; tandable. &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-16_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_"
                          name="NDR [Rule 7-51]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-51] (REF, SUB, EXT) &lt;/b&gt;Any&#xA;                type definition referenced by a component within the schema MUST be from one of the&#xA;                following: &lt;/p&gt; &lt;p&gt; 1. The schema being defined.&#xA;                &lt;/p&gt; &lt;p&gt; 2. A namespace imported as NIEM-conformant.&#xA;                &lt;/p&gt; &lt;p&gt; 3. The XML Schema namespace. &lt;/p&gt;&#xA;                &lt;p&gt; 4. The structures namespace. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; NIEM-conformant schemas are based on&#xA;                other NIEM-conformant schemas and the supporting namespaces. This simplifies&#xA;                processing and understanding of data. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; emas and the supporting namespaces. This simplifies processing&#xA;                and understanding of data. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-51_-specification">
                     <body>Constraint resolved by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_"
                          name="NDR [Rule 6-19]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-19] (REF, SUB) &lt;/b&gt;Within the schema, any&#xA;                immediate child of a model group xsd:sequence element MUST be one of xsd:annotation&#xA;                or xsd:element &lt;/body&gt; &lt;/html&gt; d:element&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-19_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_"
                          name="NDR [Rule 9-12]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-12] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Except as specified elsewhere in this document, any element or attribute defined&#xA;                within the schema SHALL have a name that takes the form: &lt;/p&gt;&#xA;                &lt;p&gt; ï¿½ Object-class qualifier terms (0 or more). &lt;/p&gt;&#xA;                &lt;p&gt; ï¿½ An object class term (1). &lt;/p&gt; &lt;p&gt; ï¿½&#xA;                Property qualifier terms (0 or more). &lt;/p&gt; &lt;p&gt; ï¿½ A&#xA;                property term (1). &lt;/p&gt; &lt;p&gt; ï¿½ Representation qualifier&#xA;                terms (0 or more). &lt;/p&gt; &lt;p&gt; ï¿½ A representation term (1).&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                Consistent naming rules are helpful for users who wish to understand components with&#xA;                which they are unfamiliar, as well as for users to find components with known&#xA;                semantics. This rule establishes the basic structure for an element or attribute&#xA;                name, in line with the rules for names under &lt;b&gt;[ISO 11179 Part&#xA;                5]&lt;/b&gt;. Note that many elements with complex type should not have a&#xA;                representation term. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                e with the rules for names under &lt;b&gt;[ISO 11179 Part&#xA;                5]&lt;/b&gt;. Note that many elements with complex type should not have a&#xA;                representation term. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-12_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_"
                          name="NDR [Rule 6-13]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-13] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, any occurrence of the element xsd:complexType&#xA;                or xsd:simpleType MUST appear as an immediate child of the element xsd:schema.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                NIEM does not support anonymous types in NIEM-conformant schemas. All XML Schema&#xA;                &#34;top-level&#34; types (children of the document element) are required by XML Schema to&#xA;                be named. By requiring NIEM type definitions to be top level, they are forced to be&#xA;                named and are therefore globally reusable. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; d to be named and are therefore globally reusable.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-13_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_"
                          name="NDR [Rule 7-17]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-17] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, the element appinfo:Base MAY be used in one of the following ways:&#xA;                &lt;/p&gt; &lt;p&gt; 1. By a type definition, to indicate the base&#xA;                type, or structures:Object or structures:Association. &lt;/p&gt;&#xA;                &lt;p&gt; 2. By an element declaration, to indicate the base element.&#xA;                &lt;/p&gt; &lt;p&gt; The element appinfo:Base SHALL NOT be used for&#xA;                any other purpose. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The appinfo:Base element is required to&#xA;                clarify semantics of types as object or association types, when such derivation is&#xA;                not otherwise derivable from the component definitions. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; , when such derivation is not otherwise&#xA;                derivable from the component definitions. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-17_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_"
                          name="NDR [Rule 6-14]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-14] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any element declaration carrying the attribute name MUST appear&#xA;                as an immediate child of the document element xsd:schema. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; All schema components&#xA;                defined by NIEM-conformant schemas must be named, accessible from outside the&#xA;                defining schema, and reusable across schemas. Local element definitions provide&#xA;                named elements that are not reusable outside the context in which they are defined.&#xA;                Requiring named NIEM elements to be top level ensures that they are globally&#xA;                reusable. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; to be top&#xA;                level ensures that they are globally reusable. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; /body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-14_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_"
                          name="NDR [Rule 7-35]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-35] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an element appinfo:ReferenceTarget SHALL carry an attribute&#xA;                appinfo:name. The value of this attribute SHALL indicate the local name of a type&#xA;                definition schema component within the namespace specified by the element.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                Together, this set of rules establishes the element appinfo:ReferenceTarget as a&#xA;                reference to a NIEM-conformant type definition schema component that a reference&#xA;                element instance may reference. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; t that a reference element instance may reference.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-35_-specification">
                     <body>Constraint resolved by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_"
                          name="NDR [Rule 6-54]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-54] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, given an element xsd:simpleContent with a child xsd:extension&#xA;                owning an attribute base, if the attribute base has a value that resolves to the&#xA;                name of a simple type, then the element xsd:extension MUST have an immediate child&#xA;                element xsd:attributeGroup. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;[Rationale]&lt;/b&gt; This rule ensures that a CSC that is&#xA;                created as an immediate extension of a simple type adds the attributes required for&#xA;                specific NIEM linking mechanisms. The attribute group is required to be&#xA;                structures:SimpleObjectAttributeGroup by NDR [Rule 6-59]. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; structures:SimpleObjectAttributeGroup by&#xA;                NDR [Rule 6-59]. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-54_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_"
                          name="NDR [Rule 6-27]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-27] (REF, EXT)&lt;/b&gt; Within the schema, if a&#xA;                complex type definition carries the attribute block, it MUST set the value for the&#xA;                attribute to the empty string. &lt;/body&gt; &lt;/html&gt; y string.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-27_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_"
                          name="NDR [Rule 9-15]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-15] (REF, SUB, EXT) &lt;/b&gt;Multiple qualifier&#xA;                terms MAY be used within a component name as necessary to ensure clarity and&#xA;                uniqueness within its namespace and usage context. &lt;/body&gt;&#xA;                &lt;/html&gt; context. &lt;/body&gt; &lt;/html&gt;&#xA;                ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-15_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_"
                          name="NDR [Rule 7-52]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-52] (REF, SUB, EXT)&lt;/b&gt; Any&#xA;                element declaration referenced by a component within the schema MUST be from one of&#xA;                the following: &lt;/p&gt; &lt;p&gt; 1. The schema being defined.&#xA;                &lt;/p&gt; &lt;p&gt; 2. A namespace imported as NIEM-conformant.&#xA;                &lt;/p&gt; &lt;p&gt; 3. The structures namespace. &lt;/p&gt;&#xA;                &lt;p&gt; 4. An external namespace, in accordance with the rules for&#xA;                external schemas as specified by this specification. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; the rules for external schemas as&#xA;                specified by this specification. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; /body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-52_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_"
                          name="NDR [Rule 9-8]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-8] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                schema MUST consistently use approved acronyms, abbreviations, and word truncations&#xA;                within defined names. The approved shortened forms are defined in Table 9-1 of the&#xA;                NDR: Abbreviations Used in NIEM Core Names . &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Consistent, controlled, and documented&#xA;                abridged terms that are used frequently and/or tend to be lengthy can support&#xA;                readability, clarity, and reduction of name length. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; eadability, clarity, and reduction of&#xA;                name length. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-8_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_"
                          name="NDR [Rule 5-2]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 5-2] (REF, SUB, EXT, CON)&#xA;                &lt;/b&gt;The schema MUST conform to the specification for namespaces in&#xA;                XML, as defined by &lt;b&gt;[XMLNamespaces]&lt;/b&gt; and&#xA;                &lt;b&gt;[XMLNamespacesErrata]&lt;/b&gt;. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; NIEM is designed to&#xA;                facilitate cross-domain data exchanges and interoperability. The ultimate scope of&#xA;                NIEM is anticipated to be quite large. The primary purpose of namespaces is to avoid&#xA;                naming conflicts, which for NIEM could become quite common, since NIEM stakeholders&#xA;                and IEPD developers define and name many of their own data components independently.&#xA;                Therefore, in NIEM, XML namespaces are employed both to avoid name clashes and to&#xA;                provide a level of independence to participating domains. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; lashes and to provide a level of&#xA;                independence to participating domains. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-2_-specification">
                     <body>This constraint is realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_"
                          name="NDR [Rule 6-32]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-32] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, if the document element xsd:schema carries the attribute&#xA;                finalDefault, it MUST set the value for that attribute to the empty string.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                Restriction of derivation options reduces capacity for reuse and so is forbidden&#xA;                within reference and subset schemas. As well, the use of finalDefault complicates&#xA;                understanding of schemas, so it is only allowed in constraint schemas.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; o it is only allowed&#xA;                in constraint schemas. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-32_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_"
                          name="MPD [Rule 3-05]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 3-5]&lt;/b&gt; A schema contained&#xA;                in a reference schema set may be omitted from a derived subset, if and only if ALL&#xA;                of the following conditions are true within that schema: &lt;/p&gt;&#xA;                &lt;p&gt; ï¿½ No elements/attributes declared or types defined in the schema&#xA;                are required for business exchange purposes. AND &lt;/p&gt;&#xA;                &lt;p&gt; ï¿½ No elements/attributes declared or types defined in the schema&#xA;                are required to support other elements or types within the subset for exchange&#xA;                purposes; in other words, no references to elements or types in the schema exist in&#xA;                any other schema of the subset. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; s or types in the schema exist in any other schema of the&#xA;                subset. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-05_-specification">
                     <body>UML well-formedness rules and semantics realize the constraint for referential
                integrity. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_"
                          name="NDR [Rule 7-38]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-38] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, an element MUST NOT be introduced more than&#xA;                once into the direct content of a type definition. This applies to content acquired&#xA;                through extension of base types. This does not apply to a base element or derived&#xA;                element to one previously existing in the type definition. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; This rule ensures&#xA;                that sequences of elements are simple sequences. A type should not define, for&#xA;                example, a sequence of elements A, B, then A again. Definitions should define,&#xA;                instead, what elements may be included, and their cardinality. Specific orders&#xA;                should be expressed in instances, when necessary, by the use of the attribute&#xA;                structures:sequenceID. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ces, when necessary, by the use of the attribute&#xA;                structures:sequenceID. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-38_-specification">
                     <body>Constraint is resolved by PSM-XSD transformations. Constraint also addressed by
                UML Property order and naming constraints.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_"
                          name="NDR [Rule 6-03]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-3] (REF, SUB, EXT) &lt;/b&gt;The schema SHALL NOT&#xA;                contain a reference to the type definition xsd:NOTATION or to a type derived from&#xA;                that type. &lt;/body&gt; &lt;/html&gt; ype. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-03_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_"
                          name="NDR [Rule 7-06]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-6] (REF, EXT) &lt;/b&gt;Within the schema, any&#xA;                element xsd:element that is an immediate child of an element xsd:schema MUST be a&#xA;                documented component. &lt;/body&gt; &lt;/html&gt; omponent.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-06_-specification">
                     <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
                or (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
                ) ) implies
                self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
                -&gt;select(c|c.oclIsKindOf(Classifier)).oclAsType(Classifier).attribute
                -&gt;select(p|p.stereotypeApplication('XSDProperty').kind=XSDPropertyKindCode::element)
                -&gt;forAll(attribute |
                attribute.ownedComment-&gt;exists(documentation|documentation.stereotypedBy('Documentation'))) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_"
                          name="NDR [Rule 7-39]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-39] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an object type SHALL be a complex type definition that either&#xA;                constitutes a NIEM-conformant component or for which there exists a NIEM-conformant&#xA;                component of one of the following forms: &lt;/p&gt; &lt;p&gt; 1. Has&#xA;                simple content, is based on a simple type, and contains the attribute group&#xA;                structures:SimpleObjectAttributeGroup, and has application information appinfo:Base&#xA;                of structures:Object. &lt;/p&gt; &lt;p&gt; 2. Has complex content,&#xA;                and is based on complex type structures:ComplexObjectType, and has application&#xA;                information appinfo:Base of structures:Object. &lt;/p&gt; &lt;p&gt;&#xA;                3. Is a complex type that is derived from an object type, which is defined according&#xA;                to this rule. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Object types are at the core of NIEM.&#xA;                They are built in a uniform way, from a simple design pattern: they take one of the&#xA;                two &#34;root&#34; forms outlined above, or they are built from other object types,&#xA;                depending on whether they are of simple or complex content. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; quot; forms outlined above, or they are&#xA;                built from other object types, depending on whether they are of simple or complex&#xA;                content. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-39_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_"
                          name="NDR [Rule 7-23]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-23] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, if an element appinfo:Base indicates the structures namespace, then the&#xA;                value of the attribute appinfo:name owned by the element appinfo:Base SHALL have a&#xA;                value of one of the following: &lt;/p&gt; &lt;p&gt; 1.&#xA;                structures:Object. &lt;/p&gt; &lt;p&gt; 2. structures:Association.&#xA;                &lt;/p&gt; &lt;p&gt; 3. A schema component defined by the structures&#xA;                schema. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Together, this set of rules establishes&#xA;                the element appinfo:Base as a reference to either a NIEM-conformant schema component&#xA;                or to a special NIEM component, which acts as the base for the containing schema&#xA;                component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; or to a&#xA;                special NIEM component, which acts as the base for the containing schema component.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-23_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_"
                          name="NDR [Rule 6-48]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-48] (REF, SUB, EXT)&lt;/b&gt; XML&#xA;                comments SHALL not be used for persistent information about constructs within the&#xA;                schema. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Since XML comments are not associated&#xA;                with any specific XML Schema construct, there is no standard way to interpret&#xA;                comments. As such, comments should be reserved for internal use, and XML Schema&#xA;                annotations should be preferred for meaningful information about components. NIEM&#xA;                specifically defines how information should be encapsulated in NIEM-conformant&#xA;                schemas via xsd:annotation elements. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; d in NIEM-conformant schemas via xsd:annotation elements.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-48_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_"
                          name="NDR [Rule 6-40]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-40] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, the value of the required attribute namespace&#xA;                owned by the element xsd:import MUST match the production&#xA;                &lt;absolute-URI&gt; as defined by&#xA;                &lt;b&gt;[RFC3986]&lt;/b&gt;. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; An import that does not specify a&#xA;                namespace is enabling reference to non-namespaced components. NIEM requires that all&#xA;                components have a defined namespace. It is important that the namespace declared by&#xA;                a schema be universally defined and unambiguous. Use of the standard XML Base for&#xA;                processing is not specified by XML Schema; thus it is not supported here.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; t specified by XML&#xA;                Schema; thus it is not supported here. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-40_-specification">
                     <body>Since imports are derived (and not modeled), the namespace for an import is the
                same as the targetNamespace modeled for the referenced schema, and the
                implementation of NDR [Rule 6-36] resolves this constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_"
                          name="NDR [Rule 6-49]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-49] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, any immediate child of an xsd:appinfo element SHALL be an element&#xA;                information item or a comment information item. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Application information elements are&#xA;                intended for automatic processing; thus they should contain machine-oriented data,&#xA;                XML. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; contain&#xA;                machine-oriented data, XML. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; /body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-49_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_"
                          name="NDR [Rule 7-36]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-36] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, a simple type definition that uses xsd:list SHOULD NOT be defined&#xA;                if any member of the list requires a property or metadata that is different than&#xA;                other members of the list. All members of the list SHOULD have the same metadata,&#xA;                and should be related via the same properties. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The members of a list are not&#xA;                individually addressable by NIEM metadata techniques. The members are also not&#xA;                individually addressable by properties; a property has a value of all the members of&#xA;                the list. NIEM provides no method for individually addressing a member of a list. If&#xA;                an individual member of a list needs to be marked up in a manner different than&#xA;                other members of the list, the use of individual elements may be preferred to the&#xA;                definition of a list simple type. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; individual elements may be preferred to the definition of a&#xA;                list simple type. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                /body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-36_-specification">
                     <body>Definitional.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_"
                          name="NDR [Rule 5-5]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 5-5] (REF, SUB, EXT)&lt;/b&gt; A&#xA;                NIEM component name SHALL be formed by applying the informative guidelines and&#xA;                examples detailed in Annex A of &lt;b&gt;[ISO 11179 Part&#xA;                5]&lt;/b&gt;, with exceptions as specified in the NDR document, most notably&#xA;                those specified in Section 9, Naming Rules. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The guidelines and examples of&#xA;                &lt;b&gt;[ISO 11179 Part 5]&lt;/b&gt; provide a simple, consistent&#xA;                syntax for data names that captures context and thereby imparts a reasonable degree&#xA;                of semantic precision. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; imparts a reasonable degree of semantic precision.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-5_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_"
                          name="NDR [Rule 6-33]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-33] (REF, SUB, EXT, CON)&lt;/b&gt; Within the&#xA;                schema, any element xsd:element SHALL NOT carry the attribute default.&#xA;                &lt;/body&gt; &lt;/html&gt; ult. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-33_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_"
                          name="NDR [Rule 6-23]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-23] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                schema SHALL NOT contain the element xsd:group. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; NIEM does not allow groups of elements&#xA;                to be named other than as named complex types. A group in XML Schema creates a named&#xA;                entity that may be included in multiple types, and which consists of a sequence of&#xA;                or choice between element particles. The NIEM has not developed a semantic model for&#xA;                these components, and they are not integrated into NIEM's design. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; s, and they are not integrated into&#xA;                NIEM's design. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-23_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_"
                          name="NDR [Rule 5-4]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 5-4] (REF, EXT)&lt;/b&gt; Within a&#xA;                NIEM-conformant schema, the data definition provided for each documented component&#xA;                SHALL follow the requirements and recommendations for data definitions given by&#xA;                &lt;b&gt;[ISO 11179 Part 4]&lt;/b&gt;. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; To advance the goal&#xA;                of creating semantically rich NIEM-conformant schemas, it is necessary that data&#xA;                definitions be descriptive, meaningful, and precise. &lt;b&gt;[ISO 11179&#xA;                Part 4]&lt;/b&gt; provides standard structure and rules for defining data&#xA;                definitions. NIEM uses this standard for component definitions. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; tions. NIEM uses this standard for&#xA;                component definitions. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_5-4_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_"
                          name="NDR [Rule 7-19]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-19] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an attribute appinfo:namespace owned by an element appinfo:Base SHALL&#xA;                have a value of either of the following: &lt;/p&gt; &lt;p&gt; 1. A&#xA;                namespace which is the target namespace of a NIEM-conformant schema.&#xA;                &lt;/p&gt; &lt;p&gt; 2. The structures namespace. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;p&gt; 2. The structures&#xA;                namespace. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-19_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_"
                          name="NDR [Rule 6-30]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-30] (REF, SUB) &lt;/b&gt;Within the schema, if a&#xA;                complex type definition carries the attribute final, it MUST set the value for the&#xA;                attribute to the empty string. &lt;/body&gt; &lt;/html&gt; y string.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-30_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_"
                          name="NDR [Rule 7-61]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-61] (REF, EXT)&lt;/b&gt; Within&#xA;                the schema, an element xsd:import that imports a namespace defined by an external&#xA;                schema MUST have the application information appinfo:ConformantIndicator, with a&#xA;                value of false. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Knowledge of the conformance of an&#xA;                imported schema allows processors to understand the semantics of referenced&#xA;                components, without additional processing. Namespaces imported into NIEM-conformant&#xA;                schemas are assumed to be conformant unless otherwise indicated. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; are assumed to be conformant unless&#xA;                otherwise indicated. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-61_-specification">
                     <body>Constraint realized by PSM-MPD transformations, based on isConformant tag for
                referenced (external) schema.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_"
                          name="NDR [Rule 7-21]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-21] (REF, EXT)&lt;/b&gt; Within the schema, an&#xA;                element appinfo:Base SHALL own an attribute appinfo:name. &lt;/body&gt;&#xA;                &lt;/html&gt; ame. &lt;/body&gt; &lt;/html&gt; l&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-21_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_"
                          name="NDR [Rule 6-09]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-9] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, an element declaration with the attribute name and without the&#xA;                attribute type MUST carry the attribute abstract with the value true.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                Untyped element declarations act as wildcards that may carry arbitrary data. By&#xA;                declaring such types abstract, NIEM allows the creation of type independent&#xA;                semantics without allowing arbitrary content to appear in XML instances.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; bitrary content to&#xA;                appear in XML instances. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-09_-specification">
                     <body>Constraint is realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_"
                          name="NDR [Rule 7-08]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-8] (REF, EXT)&lt;/b&gt; Within the schema, any&#xA;                element xsd:enumeration MUST be a documented component. &lt;/body&gt;&#xA;                &lt;/html&gt; ent. &lt;/body&gt; &lt;/html&gt; l&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-08_-specification">
                     <body>( self.base_ElementImport.profiledBy('NIEM_PSM_Profile') and ( (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
                or (
                self.purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#extension-schema')
                ) ) implies
                self.base_ElementImport.importedElement.oclAsType(Package).packagedElement
                -&gt;select(c|c.oclIsKindOf(Enumeration)).oclAsType(Enumeration).ownedLiteral
                -&gt;forAll(literal |
                literal.ownedComment-&gt;exists(documentation|documentation.stereotypedBy('Documentation'))) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_"
                          name="NDR [Rule 7-60]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-60] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, if both elements NCName and NCNameReference exist, then the&#xA;                appinfo:ReferenceTarget of any NCNameReference element MUST be the type of the&#xA;                element NCName. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; By [Rule 7-59], any such pair of&#xA;                elements, NCName and NCNameReference, will have identical semantics. This rule&#xA;                ensures that an NCNameReference element is documented to refer to the appropriate&#xA;                type (the type of the corresponding NCName element) and no other. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; of the corresponding NCName element) and&#xA;                no other. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-60_-specification">
                     <body>A Reference is modeled as a non-aggregate Property. A given property (from a
                referenced PropertyHolder) may be redefined to be an aggregate (i.e., containment)
                Property. The naming and type constraints are realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_"
                          name="NDR [Rule 9-10]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-10] (REF, SUB, EXT) &lt;/b&gt;A verb used as a term&#xA;                in the name of an XML Schema component MUST be used in the present tense unless the&#xA;                concept itself is past tense. &lt;/body&gt; &lt;/html&gt; st tense.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-10_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_"
                          name="NDR [Rule 6-58]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-58] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any occurrence of the element xsd:attributeGroup MUST own an&#xA;                attribute ref. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;[Rationale]&lt;/b&gt; The only attribute group used in&#xA;                NIEM-conformant schemas is structures:SimpleObjectAttributeGroup, as established by&#xA;                rules [Rule 6-59] and [Rule 7-39]. Therefore, NIEM-conformant schemas do not define&#xA;                additional attribute groups. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; not define additional attribute groups. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; y&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-58_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_"
                          name="NDR [Rule 7-57]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-57] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, a reference element and only a reference&#xA;                element SHALL be defined to be of type structures:ReferenceType. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; Reference elements&#xA;                must be of the reference type, and elements of the reference type must be reference&#xA;                elements. This rule ensures that users always create reference elements using&#xA;                structures:ReferenceType and cannot use structures:ReferenceType for any other&#xA;                purpose. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; se&#xA;                structures:ReferenceType for any other purpose. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-57_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_"
                          name="NDR [Rule 7-10]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-10] (REF, EXT)&lt;/b&gt; Words or synonyms for the&#xA;                words within a data element definition SHALL NOT be reused as terms in the&#xA;                corresponding component name if those words dilute the semantics and understanding&#xA;                of, or impart ambiguity to, the entity or concept that the component represents.&#xA;                &lt;/body&gt; &lt;/html&gt; nt represents. &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-10_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_"
                          name="NDR [Rule 6-44]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-44] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, when a namespace other than the XML namespace&#xA;                or the XML Schema namespace is used, it MUST be imported into the schema using the&#xA;                xsd:import element. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This rule ensures that used namespaces&#xA;                have recognizable defining sources and that they will cooperate with existing tools.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; will cooperate with&#xA;                existing tools. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                /body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-44_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_"
                          name="NDR [Rule 6-22]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-22] (EXT) &lt;/b&gt;The use of&#xA;                xsd:choice SHALL define syntax, structure, grouping, and cardinality of instances,&#xA;                but SHALL NOT define semantics. The semantics of a property within an xsd:choice&#xA;                SHALL be identical to the semantics of the property within an xsd:sequence.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                XML Schema provides the capability for model groups to be recursively defined. This&#xA;                means that a sequence may contain a sequence, and a choice may contain a choice.&#xA;                These rules are designed to keep content models simple, comprehensive, and reusable:&#xA;                The content of an element should boil down to a simple list of elements, defined in&#xA;                as straightforward a manner as is possible to meet requirements. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; as straightforward a manner as is&#xA;                possible to meet requirements. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-22_-specification">
                     <body>Definitional.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_"
                          name="NDR [Rule 6-29]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-29] (REF, SUB) &lt;/b&gt;Within the schema, if a&#xA;                simple type definition carries the attribute final, it MUST set the value for the&#xA;                attribute to the empty string. &lt;/body&gt; &lt;/html&gt; y string.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-29_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_"
                          name="NDR [Rule 6-50]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-50] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, any element that is an immediate child of an xsd:appinfo element SHALL&#xA;                be in a namespace. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Use of default namespace is allowed,&#xA;                but content has to have a real namespace, and namespaces must be declared. The XML&#xA;                namespaces specification includes the concept of content not in a namespace.&#xA;                Non-namespaced data runs counter to the principle of distinctly identifiable data&#xA;                definitions. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; f&#xA;                distinctly identifiable data definitions. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-50_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_"
                          name="NDR [Rule 7-03]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-3] (REF, SUB, EXT, CON)&#xA;                &lt;/b&gt;Two XML Schema documents SHALL have the same value for attribute&#xA;                targetNamespace carried by the element xsd:schema, and different values for&#xA;                attribute version carried by the element xsd:schema if and only if they are&#xA;                different views of the same set of components. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; These rules embody the basic philosophy&#xA;                behind NIEM's use of namespaced components: A component is uniquely identified by&#xA;                its class (e.g. element, attribute, type), its namespace (a URI), and its local name&#xA;                (an unqualified string). Any two matching component identifiers refer to the same&#xA;                component, even if the versions of the schemas containing each are different.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ent, even if the&#xA;                versions of the schemas containing each are different. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-03_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_"
                          name="NDR [Rule 9-2]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-2] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                name of any XML Schema component defined by the schema SHALL be composed of words&#xA;                from the English language, using the prevalent U.S. spelling, as provided by&#xA;                &lt;b&gt;[OED]&lt;/b&gt;. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The English language has many spelling&#xA;                variations for the same word. For example, American English ï¿½programï¿½ has a&#xA;                corresponding British spelling ï¿½programme.ï¿½ This variation has the potential to&#xA;                cause interoperability problems when XML components are exchanged because of the&#xA;                different names used by the same elements. Providing users with a dictionary&#xA;                standard for spelling will mitigate this potential interoperability issue.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; or spelling will&#xA;                mitigate this potential interoperability issue. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-2_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_"
                          name="NDR [Rule 7-22]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-22] (REF, EXT)&lt;/b&gt; Within the schema, if an&#xA;                element appinfo:Base indicates a NIEM-conformant namespace, then the value of the&#xA;                attribute appinfo:name owned by the element appinfo:Base SHALL indicate a schema&#xA;                component in the indicated namespace. &lt;/body&gt; &lt;/html&gt;&#xA;                ted namespace. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-22_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_"
                          name="NDR [Rule 6-34]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-34] (REF, SUB, EXT, CON)&#xA;                &lt;/b&gt;Within the schema, any element xsd:attribute SHALL NOT carry the&#xA;                attribute default. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The use of default values means that&#xA;                the act of validating a schema will insert a value into an XML instance where none&#xA;                existed prior to schema validation. Schema validation is for rejection of invalid&#xA;                instances, not for modifying instance content, as specified in [Principle 4].&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; nce content, as&#xA;                specified in [Principle 4]. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-34_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_"
                          name="NDR [Rule 7-33]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-33] (REF, EXT) &lt;/b&gt;Within the schema, an&#xA;                attribute appinfo:namespace carried by an element appinfo:ReferenceTarget SHALL&#xA;                indicate the namespace of the referenced schema component. The indicated namespace&#xA;                SHALL be defined by a reference or extension schema. &lt;/body&gt;&#xA;                &lt;/html&gt; ension schema. &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-33_-specification">
                     <body>Constraint resolved by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_"
                          name="NDR [Rule 6-43]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-43] (REF, SUB, EXT) &lt;/b&gt;Within the schema,&#xA;                the value of the required attribute schemaLocation carried by the element xsd:import&#xA;                MUST be resolvable to a XML schema document file that is valid according to&#xA;                &lt;b&gt;[XMLSchemaStructures]&lt;/b&gt; and&#xA;                &lt;b&gt;[XMLSchemaDatatypes]&lt;/b&gt;. &lt;/body&gt;&#xA;                &lt;/html&gt; atatypes]&lt;/b&gt;. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-43_-specification">
                     <body>Constraint realized by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_"
                          name="MPD [Rule 3-07]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-7]&lt;/b&gt; An IEPD exchange schema MUST NOT&#xA;                declare any XML element that is not intended for use as an IEP root element.&#xA;                &lt;/body&gt; &lt;/html&gt; ent. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-MPD__Rule_3-07_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_"
                          name="NDR [Rule 6-26]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-26] (REF, EXT)&lt;/b&gt; Within the schema, if an&#xA;                element declaration carries the attribute block, it MUST set the value for the&#xA;                attribute to the empty string. &lt;/body&gt; &lt;/html&gt; y string.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-26_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_"
                          name="NDR [Rule 6-46]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-46] (REF, EXT) &lt;/b&gt;Within&#xA;                the schema, an element SHALL have at most one instance of an element xsd:annotation&#xA;                as an immediate child. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; XML Schema allows annotations to be&#xA;                added to components in a fairly loose manner: there may be multiple annotations,&#xA;                each of which may have multiple documentation or appinfo elements. This flexibility&#xA;                in the syntax provides no additional expressivity but does complicate processing, so&#xA;                it is forbidden in NIEM. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; complicate processing, so it is forbidden in NIEM.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-46_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_"
                          name="NDR [Rule 7-58]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-58] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, a complex type SHALL NOT be defined such that an instance of that&#xA;                type owns the attribute structures:ref. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The use of references is limited to&#xA;                reference elements. This constrains the semantics and syntax of references within&#xA;                NIEM instances. Only structures:ReferenceType may use structures:ref, which is the&#xA;                only means for referencing within NIEM-conformant instances. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; for referencing within NIEM-conformant&#xA;                instances. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-58_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_"
                          name="NDR [Rule 7-56]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-56] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, a complex type definition SHALL include the attribute&#xA;                structures:sequenceID if the order of an occurrence of the type, within its parent,&#xA;                relative to its siblings, is meaningful and pertinent and if the schema does not&#xA;                specify the desired sequential order. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; This rule indicates that, if order is&#xA;                meaningful and the schema will not always represent the desired order, then data&#xA;                modelers need to include sequenceID to allow the proper order to be represented in&#xA;                instances. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; to allow&#xA;                the proper order to be represented in instances. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-56_-specification">
                     <body>(Constraint not enforced by this model).</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_"
                          name="NDR [Rule 7-32]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-32] (REF, EXT) &lt;/b&gt;Within the schema, the&#xA;                element appinfo:ReferenceTarget SHALL indicate a type definition schema component,&#xA;                by namespace and name. &lt;/body&gt; &lt;/html&gt; and name.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-32_-specification">
                     <body>Constraint resolved by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_"
                          name="NDR [Rule 9-7]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-7] (REF, SUB, EXT)&lt;/b&gt; The&#xA;                name of any XML Schema component defined by the schema SHALL use the camel case&#xA;                formatting convention. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The foregoing rules establish&#xA;                lowerCamelCase for all NIEM components that are XML attributes and UpperCamelCase&#xA;                for all NIEM components that are types, elements, or groups. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; that are types, elements, or groups.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_9-7_-specification">
                     <body>Non-computable constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_"
                          name="NDR [Rule 6-28]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-28] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, if the document element xsd:schema carries the attribute&#xA;                blockDefault, it MUST set the value for the attribute to the empty string.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                Restriction of substitution options reduces capacity for reuse; thus, it is&#xA;                forbidden within NIEM-conformant schemas In particular, setting the block value at&#xA;                the schema level complicates understanding of component definitions.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; tes understanding of&#xA;                component definitions. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-28_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_"
                          name="NDR [Rule 6-52]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-52] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, the element xsd:complexType MUST have as an&#xA;                immediate child either the element xsd:complexContent or the element&#xA;                xsd:simpleContent. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; XML Schema provides shorthand to&#xA;                defining complex content of a complex type, which is to define the complex type with&#xA;                immediate children that specify elements, or other groups, and attributes. In the&#xA;                desire to normalize schema representation of types and to be explicit, NIEM forbids&#xA;                the use of that shorthand. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; d to be explicit, NIEM forbids the use of that shorthand.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-52_-specification">
                     <body>Constraint realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_"
                          name="NDR [Rule 7-02]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 7-2] (REF, SUB, EXT, CON)&lt;/b&gt; Two XML Schema&#xA;                documents SHALL have the same value for attribute targetNamespace carried by the&#xA;                element xsd:schema, if and only if they represent the same set of components.&#xA;                &lt;/body&gt; &lt;/html&gt; mponents. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_7-02_-specification">
                     <body>Not computable.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_"
                          name="NDR [Rule 6-08]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-8] (REF, SUB, EXT)&lt;/b&gt; The&#xA;                schema SHALL NOT reference the type xsd:anySimpleType. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; XML Schema provides a&#xA;                restriction of the ï¿½ur-type,ï¿½ which contains only simple content. This provides a&#xA;                wildcard for arbitrary text. It is realized in XML Schema as xsd:anySimpleType.&#xA;                NIEM-conformant schemas must not use xsd:anySimpleType because this feature is&#xA;                insufficiently constrained to provide a meaningful starting point for content&#xA;                definitions. Instead, content should be based on one of the more specifically&#xA;                defined simple types defined by XML Schema. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; he more specifically defined simple types defined by XML&#xA;                Schema. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-NDR__Rule_6-08_-specification">
                     <body>Constraint is realized by PSM-XSD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI"
                               name="externalURI"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; An external URI for the file; indicates a same-as relationship to&#xA;                a copy of the file. Implemented as the value of the externalURI attribute of the&#xA;                File element in the catalog instance. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; alURI attribute of the File element in the catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; he catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-externalURI-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-relativePathName"
                               name="relativePathName"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-relativePathName-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; The relative path name to the file within the MPD directory&#xA;                structure. Implemented as the value of the relativePathName attribute of the File&#xA;                element in the catalog instance. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ute of the File element in the catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-relativePathName"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-natureCode"
                               name="natureCode"
                               visibility="public"
                               type="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-natureCode-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; The nature (type) of the file. Implemented as the value of the&#xA;                natureURI attribute of the File element in the catalog instance. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ement in the catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; e. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-natureCode"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-purposeCode"
                               name="purposeCode"
                               visibility="public"
                               type="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-purposeCode-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; The purpose for or function of the file. Implemented as the value&#xA;                of the purposeURI attribute of the File element in the catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; element in the&#xA;                catalog instance. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                tance. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-purposeCode"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText"
                               name="descriptionText"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; A description of the file. Implemented as the value of the&#xA;                descriptionText attribute of the File element in the catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; element in the&#xA;                catalog instance. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                tance. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-descriptionText-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-base_Usage"
                               name="base_Usage"
                               visibility="private"
                               association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Usage"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode"
                             name="RelationshipCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The possible reasons for the connectedness between the MPDs or&#xA;              between an MPDÂ and a resource. This enumeration defines the possible values for the&#xA;              relationshipCode attribute of the ModelPackageDescriptionRelationship stereotype.&#xA;              [Note these NIEM-UML enumeration literals differ from the NIEM MPD Specification v1.0&#xA;              in that they use underscore (&#34;_&#34;) instead of dash (&#34;-&#34;). This is due to issues with&#xA;              dashes in some UML tools.] Reference Section 4.2.5 and Appendix B of NIEM MPD&#xA;              Specification v1.0&#xA;              (http://reference.niem.gov/niem/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;p&gt; Â  &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; ication/model-package-description/1.0/). &lt;/p&gt;&#xA;              &lt;p&gt; Â  &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              p&gt; &lt;/body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-updates"
                             name="updates">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-updates-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that this MPD is an incremental update to the&#xA;                resource referenced in resourceURI. Used by a core or domain update to identify the&#xA;                domain schema in a NIEM release being incrementally updated (not replaced).&#xA;                &lt;/body&gt; &lt;/html&gt; not replaced). &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-updates"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-conforms_to"
                             name="conforms_to">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-conforms_to-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that this MPD conforms to the specification or&#xA;                standard referenced in resourceURI. &lt;/body&gt; &lt;/html&gt; URI.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-conforms_to"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-version_of"
                             name="version_of">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-version_of-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that this MPD is a different version of the&#xA;                MPD referenced in resourceURI. This code value is only needed in cases where&#xA;                significant name changes might obscure the relationship to the previous version. For&#xA;                example, NIEM Justice 4.1 is a version of GJXDM 3.0.3. &lt;/body&gt;&#xA;                &lt;/html&gt; ion of GJXDM 3.0.3. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-version_of"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-specializes"
                             name="specializes">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-specializes-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that this MPD is a specialization of the MPD&#xA;                referenced in resourceURI. This value is the inverse of generalizes.&#xA;                &lt;/body&gt; &lt;/html&gt; eralizes. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-specializes"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-generalizes"
                             name="generalizes">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-generalizes-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that this MPD is a generalization of the MPD&#xA;                referenced in resourceURI. This value is the inverse of specializes.&#xA;                &lt;/body&gt; &lt;/html&gt; cializes. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-generalizes"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-supersedes"
                             name="supersedes">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-supersedes-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that this MPD replaces the MPD referenced in&#xA;                resourceURI. &lt;/body&gt; &lt;/html&gt; URI. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-supersedes"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-deprecates"
                             name="deprecates">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-deprecates-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that content in this MPD is preferred over&#xA;                content in the MPD referenced in resourceURI; and at some time in the future will&#xA;                supersede the MPD referenced in resourceURI &lt;/body&gt;&#xA;                &lt;/html&gt; sourceURI &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-deprecates"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-adapts"
                             name="adapts">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-adapts-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                relationshipCode value for indicating that this MPD is an adaptation of the MPD&#xA;                referenced in resourceURI. &lt;/body&gt; &lt;/html&gt; URI.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode-adapts"/>
                  </ownedComment>
               </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode"
                             name="PurposeCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; An indication of the type of an MPD artifact. This further indicates&#xA;              how it should be processed by software tools. &lt;/p&gt; &lt;p&gt; The&#xA;              literals of this enumeration correspond to MPD nature URIs of the form&#xA;              &#34;http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#&lt;purpose-code&gt;&#34;.&#xA;              &lt;/p&gt; &lt;p&gt; [Note these NIEM-UML enumeration literals differ&#xA;              from the NIEM MPD Specification v1.0 in that they use underscore (&#34;_&#34;) instead of dash&#xA;              (&#34;-&#34;). This is due to issues with dashes in some UML tools.] Reference Section 4.2.4&#xA;              and Appendix G of NIEM MPD Specification v1.0&#xA;              (http://reference.niem.gov/niem/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;p&gt; Â  &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; nce.niem.gov/niem/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;p&gt; Â  &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; p&gt; &lt;/body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema_set"
                             name="extension_schema_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema_set"
                             name="reference_schema_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema_set"
                             name="subset_schema_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file"
                             name="file"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-business_rules"
                             name="business_rules"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-catalog"
                             name="catalog"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-documentation"
                             name="documentation"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-administrative"
                             name="administrative"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-endorsement"
                             name="endorsement"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-memorandum"
                             name="memorandum"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-report"
                             name="report"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-conformance_report"
                             name="conformance_report"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-quality_assurance_report"
                             name="quality_assurance_report"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-test_report"
                             name="test_report"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-technical_reference"
                             name="technical_reference"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-non-normative_reference"
                             name="non-normative_reference"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-normative_reference"
                             name="normative_reference"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-metadata_extended"
                             name="metadata_extended"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-sample_instance"
                             name="sample_instance"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema"
                             name="schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema"
                             name="constraint_schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema"
                             name="exchange_schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-extension_schema"
                             name="extension_schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-incremental_schema"
                             name="incremental_schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-reference_schema"
                             name="reference_schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-replacement_schema"
                             name="replacement_schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-subset_schema"
                             name="subset_schema"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-tool_specific_file"
                             name="tool_specific_file"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-wantlist"
                             name="wantlist"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-file_set"
                             name="file_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-schema_set"
                             name="schema_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-constraint_schema_set"
                             name="constraint_schema_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode-exchange_schema_set"
                             name="exchange_schema_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279654808_91628_3541"
                             name="changelog">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279811693_257538_3559"
                                body="Serves the purpose of recording all changes (additions, deletions, modifications) to a model package description relative to a previous version.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279654808_91628_3541"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279675385_549898_3543"
                             name="data_dictionary">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279820933_225568_3560"
                                body="Serves the purpose of a record of information about data (i.e. metadata) such as names, meaning, relationships to other data, origin, usage, and format.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279675385_549898_3543"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279689960_687982_3545"
                             name="data_model">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279830798_939566_3561"
                                body="Serves the purpose of a formal representation (e.g., UML) of business data requirements that indicates data semantics, structure, and relationships.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279689960_687982_3545"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279701780_372859_3547"
                             name="display">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279838397_504131_3562"
                                body="Serves the purpose of formatting information for viewing on a computer monitor.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279701780_372859_3547"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279712336_606729_3549"
                             name="mapping">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279846819_57550_3563"
                                body="Serves the purpose of describing how one data model or set of data components corresponds to another by identifying semantic equivalence or similarity.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279712336_606729_3549"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279724114_963650_3551"
                             name="master_document">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279854992_947477_3564"
                                body="Serves the purpose of a primary source of documentation; a readme file; a first documentation source to consult and one that may reference other supplemental documentation.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279724114_963650_3551"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279735076_677095_3553"
                             name="ontology"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279747984_654521_3555"
                             name="transformation">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279872730_744174_3566"
                                body="Serves the purpose of translating an artifact into another format or representation.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279747984_654521_3555"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279759712_965559_3557"
                             name="web-service">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279880919_114332_3567"
                                body="Serves the purpose of establishing a method for communication between two electronic devices over a network.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279759712_965559_3557"/>
                  </ownedComment>
               </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship"
                             name="ModelPackageDescriptionRelationship">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The ModelPackageDescriptionRelationship stereotype applies to a&#xA;              Dependency that represents a relationship between MPDs or between an MPDÂ and another&#xA;              resource (such as a NIEMÂ specification; as in the case of conforms-to). There are many&#xA;              ways one MPD may relate to another. This makes it extremely difficult to specify a&#xA;              fixed set of values that could objectively define an exact relationship between a pair&#xA;              of MPDs. Therefore, the optional descriptionText attribute is provided to further&#xA;              explain the nature of any of the eight relationshipCode values available (version_of,&#xA;              specializes, generalizes, deprecates, supersedes, adapts, conforms_to, updates). In&#xA;              some cases, the value of relationshipCode may be generic enough to require a more&#xA;              detailed explanation in descriptionText (for example, if the value is &#34;adapts&#34;).&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; in descriptionText (for&#xA;              example, if the value is &#34;adapts&#34;). &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; /body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText"
                               name="descriptionText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; A more detailed or specific textual explanation of the&#xA;                relationship between the MPDs or between an MPD and a resource (such as a&#xA;                specification). &lt;/p&gt; &lt;p&gt; The catalog provides a&#xA;                Relationship element with three attributes (resourceURI, relationshipCode, and&#xA;                descriptionText) to identify the pedigree of an MPD. There are many ways that one&#xA;                MPD may relate to another. This makes it extremely difficult to specify a fixed set&#xA;                of values that could objectively define an exact relationship between a pair of&#xA;                MPDs. Therefore, the optional descriptionText attribute is provided to further&#xA;                explain the nature of any of the eight relationshipCode values available&#xA;                (version_of, specializes, generalizes, deprecates, supersedes, adapts, conforms_to,&#xA;                updates). In some cases, the value of relationshipCode may be generic enough to&#xA;                require a more detailed explanation in descriptionText (for example, if the value is&#xA;                &#34;adapts&#34;). &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; optional&#xA;                descriptionText attribute is provided to further explain the nature of any of the&#xA;                eight relationshipCode values available (version_of, specializes, generalizes,&#xA;                deprecates, supersedes, adapts, conforms_to, updates). In some cases, the value of&#xA;                relationshipCode may be generic enough to require a more detailed explanation in&#xA;                descriptionText (for example, if the value is &#34;adapts&#34;). &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; the value of relationshipCode may be&#xA;                generic enough to require a more detailed explanation in descriptionText (for&#xA;                example, if the value is &#34;adapts&#34;). &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-descriptionText-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-base_Dependency"
                               name="base_Dependency"
                               visibility="private"
                               association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Dependency"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-relationshipCode"
                               name="relationshipCode"
                               visibility="public"
                               aggregation="composite"
                               type="NIEM_UML_Profile-Model_Package_Description_Profile-RelationshipCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-relationshipCode-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                classification or reason for the connectedness between the MPDs or between an&#xA;                MPDÂ and a resource. &lt;/body&gt; &lt;/html&gt; a resource.&#xA;                &lt;/body&gt; &lt;/html&gt; &gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-relationshipCode"/>
                  </ownedComment>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7">
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship-base_Dependency"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd"
                         name="extension_"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionRelationship"
                         association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-7-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"
                             name="ModelPackageDescription">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A ModelPackageDescription Component represents a NIEM Model Package&#xA;              Description (MPD). Specifically, it represents the information in an MPD catalog.&#xA;              Reference NIEM MPD Specification v1.0&#xA;              (http://reference.niem.gov/niem/specification/model-package-description/1.0/)&#xA;              &lt;br&gt;An MPD is a logical set of electronic files aggregated and organized&#xA;              to fulfill a specific purpose in NIEM. Directory organization and packaging of an MPD&#xA;              should be designed around major themes in NIEM: reuse, sharing, interoperability, and&#xA;              efficiency. The inclusion of artifacts in an MPD is modeled using a Usage dependency&#xA;              from the Component representing the MPD to the model element representing the artifact&#xA;              (most commonly a Namespace Package). &lt;br&gt; &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; senting the artifact (most commonly a&#xA;              Namespace Package). &lt;br&gt; &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; &lt;/body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_"
                          name="MPD [Rule 4-05]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 4-5] &lt;/b&gt;The URI for an MPD&#xA;                MUST end in its version number. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;/p&gt; &lt;p&gt; The tag value for mpdURI is derived and&#xA;                computed from the version number. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; mputed from the version number. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-05_-specification">
                     <body>derive:
                self.mpdBaseURI.repr().concat(self.mpdVersionID.repr()).oclAsType(AnyURI) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_"
                          name="MPD [Rule 4-04]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-4]&lt;/b&gt; Every MPD MUST be assigned a valid&#xA;                http URI. &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-04_-specification">
                     <body>self.mpdBaseURI.repr().startsWith('http:/') </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_"
                          name="MPD [Rule 4-14]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-14]&lt;/b&gt; An IEPD or an EIEM MUST contain a&#xA;                master document located in the MPD root directory whose filename begins with the&#xA;                substring &#34;master-document&#34;. &lt;/body&gt; &lt;/html&gt; nt&#34;.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-14_-specification">
                     <body>Constraints on master document are resolved during PSM-MPD transformation.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_"
                          name="MPD [Rule 4-01]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-1] &lt;/b&gt;An MPD MUST contain an XML catalog&#xA;                artifact that validates with the NIEM MPD catalog schema (XSD) and that resides in&#xA;                the root directory of the MPD and bears the file name &#34;catalog.xml&#34;.&#xA;                &lt;/body&gt; &lt;/html&gt; ml&#34;. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-01_-specification">
                     <body>Constraint is resolved via PSM-MPD transformations which produce the catalog as
                specified by the MPD. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_"
                          name="MPD [Rule 4-12]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 4-12] &lt;/b&gt;Every MPD that is&#xA;                an IEPD or EIEM MUST contain a change log artifact that: &lt;/p&gt;&#xA;                &lt;p&gt; ï¿½ Records changes to previous IEPD or EIEM schemas that this MPD&#xA;                represents. &lt;/p&gt; &lt;p&gt; ï¿½ Begins with the substring&#xA;                &#34;changelog&#34;. &lt;/p&gt; &lt;p&gt; ï¿½ Resides in the root directory of&#xA;                the MPD. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;p&gt; ï¿½ Resides in the root directory of the MPD. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-12_-specification">
                     <body>Constraints on changelogs are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_"
                          name="MPD [Rule 6-9]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-9]&lt;/b&gt; Within any artifact of an MPD archive,&#xA;                any direct reference to another resource (i.e., another artifact such as an image,&#xA;                schema, stylesheet, etc.) that is required to process or display an artifact SHOULD&#xA;                exist within the archive at the location specified by that reference.&#xA;                &lt;/body&gt; &lt;/html&gt; hat reference. &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-9_-specification">
                     <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_"
                          name="MPD [Rule 6-5]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-5]&lt;/b&gt; Absolute references to Internet&#xA;                resources MUST use a well-known transfer protocol (http, https, ftp, ftps) and MUST&#xA;                resolve (If applicable, documentation that describes how to resolve with security,&#xA;                account, and/or password issues MUST be included). &lt;/body&gt;&#xA;                &lt;/html&gt; be included). &lt;/body&gt; &lt;/html&gt;&#xA;                ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-5_-specification">
                     <body>Constraints on URIs are partially satisfied by specific URI Constraints
                expressed elsewhere in the NDR and MPD. For URI references embedded elsewhere in the
                model, it would be difficult to express the constraint in OCL. This constraint must
                be manually resolved by the modeler. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_"
                          name="MPD [Rule 6-3a]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-3a]&lt;/b&gt; An MPD archive file&#xA;                MUST use file name syntax defined by the regular expression: &lt;/p&gt;&#xA;                &lt;p&gt; mpd-filename ::= name '-' version '.' class '.zip'&#xA;                &lt;/p&gt; &lt;p&gt; Where: &lt;/p&gt; &lt;p&#xA;                style=&#34;margin-left:10.0px;&#34;&gt; name ::= alphanum ((alphanum | special)*&#xA;                alphanum)? &lt;/p&gt; &lt;p style=&#34;margin-left:10.0px;&#34;&gt; alphanum&#xA;                ::= [a-zA-Z0-9] &lt;/p&gt; &lt;p style=&#34;margin-left:10.0px;&#34;&gt;&#xA;                special ::= '.' | '-' | '_' &lt;/p&gt; &lt;p&#xA;                style=&#34;margin-left:10.0px;&#34;&gt; version ::= digit+ ('.' digit+)* (status&#xA;                digit+)? &lt;/p&gt; &lt;p style=&#34;margin-left:10.0px;&#34;&gt; digit ::=&#xA;                [0-9] &lt;/p&gt; &lt;p style=&#34;margin-left:10.0px;&#34;&gt; status ::=&#xA;                'alpha' | 'beta' | 'rc' | 'rev' &lt;/p&gt; &lt;p&#xA;                style=&#34;margin-left:10.0px;&#34;&gt; class ::= 'rel' | 'cu' | 'du' | 'iepd' | 'eiem'&#xA;                &lt;/p&gt; &lt;p style=&#34;margin-left:0.0px;&#34;&gt; All alpha characters&#xA;                SHOULD be lower case to reduce the risk of complications across various file&#xA;                systems. See [&lt;a&#xA;                href=&#34;mdel://_17_0_3_24a0131_1321168952839_661693_1978&#34;&gt;Rule&#xA;                4-3&lt;/a&gt;] for an explanation of the status options. &lt;/p&gt;&#xA;                &lt;p style=&#34;margin-left:0.0px;&#34;&gt; (The regular expression notation used&#xA;                above is from XML 1.0 (Fifth Edition): &lt;a&#xA;                href=&#34;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&#34;&gt;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a&gt;)&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; sion notation used&#xA;                above is from XML 1.0 (Fifth Edition): &lt;a&#xA;                href=&#34;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&#34;&gt;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a&gt;)&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3a_-specification">
                     <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_"
                          name="MPD [Rule 4-13.1]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 4-13.1]&lt;/b&gt; If an IEPD or&#xA;                EIEM contains more than one change log artifact, then each change log artifact MUST:&#xA;                &lt;/p&gt; &lt;p&gt; ï¿½ Have a file name that begins with the&#xA;                substring &#34;changelog&#34;. &lt;/p&gt; &lt;p&gt; ï¿½ Reside in the MPD root&#xA;                directory . &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ï¿½ Reside&#xA;                in the MPD root directory . &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13.1_-specification">
                     <body>Constraints on changelogs are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_"
                          name="MPD [Rule 4-11]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 4-11] &lt;/b&gt;Every MPD that is a&#xA;                reference schema set (i.e., NIEM releases, core updates, and domain updates) MUST&#xA;                contain an XML change log artifact that: &lt;/p&gt; &lt;p&gt; ï¿½&#xA;                Validates with the NIEM change log schemas (mpd-changelog.xsd and niem-model.xsd).&#xA;                Â Note: These are the base filenames; the actual filenames also contain a version&#xA;                number. For example: mpd-changelog-1.0.xsd is the current version.&#xA;                &lt;/p&gt; &lt;p&gt; ï¿½ Records changes to previous reference schemas&#xA;                that this MPD represents. &lt;/p&gt; &lt;p&gt; ï¿½ Bears the file name&#xA;                &#34;changelog.xml&#34;. &lt;/p&gt; &lt;p&gt; ï¿½ Resides in the root&#xA;                directory of the MPD. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &#34;changelog.xml&#34;. &lt;/p&gt; &lt;p&gt; ï¿½ Resides in the root&#xA;                directory of the MPD. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                /p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-11_-specification">
                     <body>Constraints on changelog are resolved during PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_"
                          name="MPD [Rule 3-06]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-6] &lt;/b&gt;An IEPD MUST contain at least one&#xA;                exchange schema artifact that declares at least one top-level root element for IEP&#xA;                instances specified by the IEPD. &lt;/body&gt; &lt;/html&gt; the&#xA;                IEPD. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-06_-specification">
                     <body>( self.base_Component.profiledBy('NIEM_PSM_Profile') and
                (self.mpdClassCode=ModelPackageDescriptionClassCode::iepd) ) implies
                self.base_Component.elementImport -&gt;exists(elementImport|
                elementImport.stereotypedBy('ModelPackageDescriptionFile') and (
                elementImport.getStereotypeApplication('ModelPackageDescriptionFile').purposeURI=
                'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#exchange-schema' )
                and elementImport.importElement.oclAsType(Package).packagedElement
                -&gt;exists(e|e.stereotypedBy('PropertyHolder') and
                e.oclAsType(Class).ownedAttribute-&gt;notEmpty()) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_"
                          name="MPD [Rule 4-15]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-15]&lt;/b&gt; A NIEM IEPD or EIEM master document&#xA;                SHOULD (at a minimum) describe the MPD purpose, scope, business value, exchange&#xA;                information, senders/receivers, interactions, and references to other documentation.&#xA;                &lt;/body&gt; &lt;/html&gt; documentation. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-15_-specification">
                     <body>Constraints on master document are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_"
                          name="MPD [Rule 6-3c]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-3c]&lt;/b&gt; Within an MPD,the&#xA;                &lt;class&gt; substring in the file name MUST correctly correspond to the&#xA;                value for the attribute mpdClassCode within catalog.xml. Correct correspondence is:&#xA;                &lt;/p&gt; &lt;table cellpadding=&#34;0&#34; cellspacing=&#34;0&#34;&#xA;                width=&#34;100%&#34;&gt; &lt;tr&gt; &lt;td&gt; Â IF file name&#xA;                &lt;class&gt;= &lt;/td&gt; &lt;td&gt; Â THEN catalog.xml&#xA;                mpdClassCode = &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;&#xA;                &lt;td&gt; Â rel &lt;/td&gt; &lt;td&gt; Â release&#xA;                &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; Â cu&#xA;                &lt;/td&gt; &lt;td&gt; Â core-update &lt;/td&gt;&#xA;                &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; Â du &lt;/td&gt;&#xA;                &lt;td&gt; Â domain-update &lt;/td&gt; &lt;/tr&gt;&#xA;                &lt;tr&gt; &lt;td&gt; Â iepd &lt;/td&gt; &lt;td&gt;&#xA;                Â iepd &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&#xA;                Â eiem &lt;/td&gt; &lt;td&gt; Â eiem &lt;/td&gt;&#xA;                &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; Â cu &lt;/td&gt; &lt;td&gt; Â core-update&#xA;                &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; Â du&#xA;                &lt;/td&gt; &lt;td&gt; Â domain-update &lt;/td&gt;&#xA;                &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; Â iepd &lt;/td&gt;&#xA;                &lt;td&gt; Â iepd &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;&#xA;                &lt;td&gt; Â eiem &lt;/td&gt; &lt;td&gt; Â eiem&#xA;                &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt;&#xA;                &lt;td&gt; Â iepd &lt;/td&gt; &lt;td&gt; Â iepd&#xA;                &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; Â eiem&#xA;                &lt;/td&gt; &lt;td&gt; Â eiem &lt;/td&gt; &lt;/tr&gt;&#xA;                &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3c_-specification">
                     <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_"
                          name="MPD [Rule 4-03]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 4-3]&lt;/b&gt; All NIEM version&#xA;                numbers adhere to the regular expression: &lt;/p&gt; &lt;p&gt;&#xA;                version ::= digit+ ('.' digit+)* (status digit+)? &lt;/p&gt;&#xA;                &lt;p&gt; Where: &lt;/p&gt; &lt;p&gt; digit ::= [0-9]&#xA;                &lt;/p&gt; &lt;p&gt; status ::= 'alpha' | 'beta' | 'rc' | 'rev'&#xA;                &lt;/p&gt; &lt;p&gt; 'alpha' indicates early development&#xA;                &lt;/p&gt; &lt;p&gt; 'beta' indicates late development; but changing&#xA;                or incomplete &lt;/p&gt; &lt;p&gt; 'rc' indicates release candidate;&#xA;                complete but not approved as operational &lt;/p&gt; &lt;p&gt; 'rev'&#xA;                indicates very minor revision that does not impact schema validation&#xA;                &lt;/p&gt; &lt;p&gt; (The regular expression notation used above is&#xA;                from XML 1.0 (Fifth Edition): &lt;a&#xA;                href=&#34;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&#34;&gt;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a&gt;)&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; om XML 1.0 (Fifth&#xA;                Edition): &lt;a&#xA;                href=&#34;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&#34;&gt;http://www.w3.org/TR/2008/REC-xml-20081126/#sec-notation&lt;/a&gt;)&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03_-specification">
                     <body>self.mpdVersionID.match('[0-9]+(\\.[0-9]+)*((alpha|beta|rc|rev)[0-9]+)?') </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_"
                          name="MPD [Rule 6-1]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-1] &lt;/b&gt;An MPD is packaged as a single&#xA;                compressed archive of files that represents a sub-tree of a file system in&#xA;                standard&lt;b&gt; [PK-ZIP]&lt;/b&gt; format. This archive MUST&#xA;                preserve and store the logical directory structure intended by its author.&#xA;                &lt;/body&gt; &lt;/html&gt; by its author. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-1_-specification">
                     <body>Constraints on packaging are resolved during PSM-MPD transformation.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_"
                          name="MPD [Rule 3-09]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-9]&lt;/b&gt; A NIEM-conforming IEPD or EIEM MUST&#xA;                contain at least one schema that is either a NIEM reference schema or a subset&#xA;                derived from a NIEM reference schema. &lt;/body&gt; &lt;/html&gt; e&#xA;                schema. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-09_-specification">
                     <body>( self.base_Component.profiledBy('NIEM_PSM_Profile') and (
                (self.mpdClassCode=ModelPackageDescriptionClassCode::iepd) or
                (self.mpdClassCode=ModelPackageDescriptionClassCode::eiem) ) ) implies
                self.base_Component.elementImport
                -&gt;select(elementImport|elementImport.stereotypedBy('ModelPackageDescriptionFile')).getStereotypeApplication('ModelPackageDescriptionFile').purposeURI
                -&gt;exists(purposeURI|
                (purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema')
                or
                (purposeURI='http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
                ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_"
                          name="MPD [Rule 4-09]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 4-9]&lt;/b&gt; A URI reference to&#xA;                an individual MPD artifact from another resource is the concatenation of&#xA;                &lt;/p&gt; &lt;p&gt; ï¿½ The URI of the MPD that contains the&#xA;                artifact. &lt;/p&gt; &lt;p&gt; ï¿½ The crosshatch or pound character&#xA;                (&#34;#&#34;). &lt;/p&gt; &lt;p&gt; ï¿½ A fragment identifier that is the&#xA;                locally unique id of the artifact within the catalog of the MPD itself.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; f the artifact within&#xA;                the catalog of the MPD itself. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-09_-specification">
                     <body>Explicit URI references are not modelled for well known artifacts such as
                schemas. Serialization of MPD artifacts such as schemas are via PSM-MPD
                transformations which construct URI references according to this MPD rule.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_"
                          name="MPD [Rule 4-07]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-7] &lt;/b&gt;Each file set artifact in an MPD MUST&#xA;                have a corresponding FileSet element in the catalog for that MPD. This FileSet&#xA;                element must identify each file artifact that is a member of that file set artifact.&#xA;                &lt;/body&gt; &lt;/html&gt; artifact. &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-07_-specification">
                     <body>Constraints for catalog construction are resolved in PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_"
                          name="MPD [Rule 6-6]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-6] &lt;/b&gt;A published IEPD MUST contain all&#xA;                documents necessary to understand it and allow it to be implemented correctly.&#xA;                &lt;/body&gt; &lt;/html&gt; tly. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-6_-specification">
                     <body>This constraint is resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_"
                          name="MPD [Rule 3-10]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 3-10]&lt;/b&gt; A NIEM IEPD MUST contain at least one&#xA;                valid sample XML instance (i.e., IEP) artifact for each exchange schema element that&#xA;                can be the root of a corresponding IEP. &lt;/body&gt; &lt;/html&gt;&#xA;                ding IEP. &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_3-10_-specification">
                     <body>This constraint is realized by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_"
                          name="MPD [Rule 4-10]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-10] &lt;/b&gt;NIEM namespaces MUST NOT be used as&#xA;                URIs for MPD artifacts. &lt;/body&gt; &lt;/html&gt; cts.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-10_-specification">
                     <body>Constraints on artifact URIs are resolved during PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_"
                          name="MPD [Rule 6-3]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-3] &lt;/b&gt;An MPD archive MUST uncompress (unzip)&#xA;                to a one and only one MPD root directory. &lt;/body&gt;&#xA;                &lt;/html&gt; ory. &lt;/body&gt; &lt;/html&gt; l&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3_-specification">
                     <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_"
                          name="MPD [Rule 6-2]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-2]&lt;/b&gt; Within an MPD archive, all XSD and XML&#xA;                artifacts MUST be valid against and follow all rules for their respective&#xA;                &lt;b&gt;[NIEM-NDR]&lt;/b&gt; conformance targets (i.e., subset,&#xA;                constraint, extension, exchange, reference schemas, and XML instances); this&#xA;                includes being well-formed and valid XML Schema documents. &lt;/body&gt;&#xA;                &lt;/html&gt; L Schema documents. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-2_-specification">
                     <body>This constraint is resolved by a combination of applying all specified NDR-based
                constraints and transformations to target artifacts.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_"
                          name="MPD [Rule 6-3d]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-3d]&lt;/b&gt; When represented on&#xA;                the Internet, an MPD archive SHOULD use the following MIME Type: &lt;/p&gt;&#xA;                &lt;p&gt; application/zip+&lt;class&gt; &lt;/p&gt;&#xA;                &lt;p&gt; where &lt;/p&gt; &lt;p&#xA;                style=&#34;margin-left:10.0px;&#34;&gt; &lt;class&gt; is one member from the set&#xA;                {rel, cu, du, iepd, eiem} &lt;/p&gt; &lt;p&#xA;                style=&#34;margin-left:0.0px;&#34;&gt; Use of the generic zip MIME type application/zip&#xA;                is allowed, but discouraged. No other MIME types are allowed when representing MPD&#xA;                archives. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; scouraged.&#xA;                No other MIME types are allowed when representing MPD archives. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3d_-specification">
                     <body>Packaging constraints are resolved by transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_"
                          name="MPD [Rule 4-02]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-2] &lt;/b&gt;Every MPD MUST be assigned a version&#xA;                number. &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-02_-specification">
                     <body>not(self.mpdVersionID.oclIsUndefined()) and
                (self.mpdVersionID&lt;&gt;'') -- This constraint also satisfied by tag
                mpdVersionID, which is required to have a value.</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_"
                          name="MPD [Rule 6-3b]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-3b]&lt;/b&gt; Within an MPD,the&lt;name&gt;&#xA;                and &lt;version&gt; substrings in the file name MUST match exactly the&#xA;                values for attributes mpdName and mpdVersionID within its catalog.xml artifact.&#xA;                &lt;/body&gt; &lt;/html&gt; artifact. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-3b_-specification">
                     <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_"
                          name="MPD [Rule 4-08]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-8] &lt;/b&gt;Each artifact identified in the&#xA;                catalog MUST be assigned an id in the format of an NCName (Non-Colonized Name) as&#xA;                defined by [W3-XML-Namespaces]. This is required for both File and FileSet&#xA;                artifacts. &lt;/body&gt; &lt;/html&gt; rtifacts.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-08_-specification">
                     <body>All catalog constraints are resolved in PSM-MPD transformation.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_"
                          name="MPD [Rule 4-13]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-13]&lt;/b&gt; The initial version of an IEPD or&#xA;                EIEM MUST contain a change log artifact with at least one entry for its creation&#xA;                date. &lt;/body&gt; &lt;/html&gt; ate. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-13_-specification">
                     <body>Constraints on changelogs are resolved during PSM-MPD transformation.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_"
                          name="MPD [Rule 4-03.1]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-3.1] &lt;/b&gt;A higher MPD version number within a&#xA;                version series does NOT imply compatibility between versions. Compatibility between&#xA;                or among MPD versions MUST be explicitly stated in documentation.&#xA;                &lt;/body&gt; &lt;/html&gt; entation. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-03.1_-specification">
                     <body>Satisfaction of this constraint requires comparative analysis between versions;
                can not be expressed easily in OCL.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_"
                          name="MPD [Rule 6-7]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-7]&lt;/b&gt; A published IEPD MUST link (through&#xA;                its catalog) to any EIEM it is based on. &lt;/body&gt; &lt;/html&gt;&#xA;                on. &lt;/body&gt; &lt;/html&gt; ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-7_-specification">
                     <body>An EIEM is an MPD with a packageCode of EIEM. An EIEM is typically bundled as a
                reusable model library which can be referenced from IEPDs. This relationship between
                EIEM and IEPD is used by PSM-MPD transformations to construct the catalog entries in
                resolution of this constraint.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_"
                          name="MPD [Rule 4-06]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 4-6] &lt;/b&gt;Each file artifact in an MPD MUST have&#xA;                a corresponding File element in the catalog for that MPD. &lt;/body&gt;&#xA;                &lt;/html&gt; MPD. &lt;/body&gt; &lt;/html&gt; l&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_4-06_-specification">
                     <body>Constraints for catalog construction are resolved in PSM-MPD transformation. </body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_"
                          name="MPD [Rule 6-4]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-4]&lt;/b&gt; Within an MPD archive, the value of&#xA;                each xsd:import schemaLocation attribute MUST be a relative path reference that&#xA;                resolves to the correct schema within the sub-tree. &lt;/body&gt;&#xA;                &lt;/html&gt; sub-tree. &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-4_-specification">
                     <body>Packaging constraints are resolved by PSM-MPD transformations.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_"
                          name="MPD [Rule 6-8]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 6-8]&lt;/b&gt; Within an MPD archive, if&#xA;                non-NIEM-conforming schemas from other standards are used and referenced within an&#xA;                MPD, then all xsd:import, xsd:include, and xsd:redefine constructs used within those&#xA;                schemas MUST be modified as needed to have a value for the schemaLocation attribute&#xA;                that is a relative path reference that resolves to the correct schema within the&#xA;                sub-tree. &lt;/body&gt; &lt;/html&gt; ema within the sub-tree.&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-MPD__Rule_6-8_-specification">
                     <body>The schemaLocation constraints are resolved during PSM-MPD transformation.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-base_Component"
                               name="base_Component"
                               visibility="private"
                               association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-1">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Component"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdVersionID"
                               name="mpdVersionID"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdVersionID-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; Many&#xA;                published MPDs will be periodically revised and updated; therefore, versioning is&#xA;                required to clearly indicate that changes have occurred. A version number is&#xA;                actually part of the unique identification for an MPD (to be discussed in a&#xA;                subsequent section). All NIEM version numbers adhere to the regular expression:&#xA;                [0-9]+(\.[0-9]+)*((alpha|beta|rc|rev)[0-9]+)? Where: &lt;ul&gt;&#xA;                &lt;li&gt; &#34;alpha&#34; indicates early development &lt;/li&gt;&#xA;                &lt;li&gt; &#34;beta&#34; indicates late development; but changing or incomplete&#xA;                &lt;/li&gt; &lt;li&gt; &#34;rc&#34; indicates release candidate; complete&#xA;                but not approved as operational &lt;/li&gt; &lt;li&gt; &#34;rev&#34;&#xA;                indicates very minor revision that does not impact schema validation&#xA;                &lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                ional &lt;/li&gt; &lt;li&gt; &#34;rev&#34; indicates very minor revision&#xA;                that does not impact schema validation &lt;/li&gt; &lt;/ul&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; n &lt;/li&gt;&#xA;                &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdVersionID"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdBaseURI"
                               name="mpdBaseURI"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdBaseURI-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; The left hand substring of an MPD URI that does not include its&#xA;                mpdVersionID. The concatenation of mpdBaseURI and mpdVersionID becomes the value of&#xA;                the mpdURI attribute of the Catalog element in the catalog instance.&#xA;                &lt;/p&gt; &lt;p&gt; Â  &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ance. &lt;/p&gt; &lt;p&gt; Â &#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdBaseURI"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdClassCode"
                               name="mpdClassCode"
                               visibility="public"
                               aggregation="composite"
                               type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdClassCode-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; The classification code of the MPD. Implemented as the value of&#xA;                the mpdClassCode attribute of the Catalog element in the catalog instance. This code&#xA;                designates the classification or kind of the MPD. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; This code designates the classification&#xA;                or kind of the MPD. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                kind of the MPD. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-mpdClassCode"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText"
                               name="descriptionText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; A description of the MPD. A statement that provides an explanation&#xA;                or additional detail. &lt;/p&gt; &lt;p&gt; Implemented as the value&#xA;                of the descriptionText attribute of the Catalog element in the catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; element in the&#xA;                catalog instance. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ce.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-descriptionText-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-SecurityMarkingText"
                               name="SecurityMarkingText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-SecurityMarkingText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                label that defines how this MPD must be handled or can be distributed to protect the&#xA;                information it contains; the security marking for the MPD. Implemented as the value&#xA;                of the SecurityMarkingText element in the catalog instance. Default is&#xA;                &#34;unclassified&#34;. &lt;/body&gt; &lt;/html&gt; t element in the catalog&#xA;                instance. Default is &#34;unclassified&#34;. &lt;/body&gt; &lt;/html&gt;&#xA;                &#34;unclassified&#34;. &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-SecurityMarkingText"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-CreationDate"
                               name="CreationDate"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-CreationDate-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; Date&#xA;                this MPD was published or created. Implemented as the value of the CreationDate&#xA;                element in the catalog instance. &lt;/body&gt; &lt;/html&gt; catalog&#xA;                instance. &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-CreationDate"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate"
                               name="LastRevsionDate"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; Date the MPD was last revised. Implemented as the value of the&#xA;                LastRevisionDate element in the catalog instance. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; the catalog instance. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; /p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-LastRevsionDate-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate"
                               name="NextRevisionDate"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; An estimate of the projected date the MPD is expected to be&#xA;                revised again (if known). Implemented as the value of the NextRevisionDate element&#xA;                in the catalog instance. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; the NextRevisionDate element in the catalog instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; instance.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-NextRevisionDate-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText"
                               name="StatusText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                Description of the current state of development or usage of the MPD; may also&#xA;                project future plans for the MPD. Implemented as the value of the StatusText element&#xA;                in the catalog instance. &lt;/body&gt; &lt;/html&gt; the StatusText&#xA;                element in the catalog instance. &lt;/body&gt; &lt;/html&gt;&#xA;                instance. &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-StatusText-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText"
                               name="KeywordText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                keyword associated with the MPD; a common alias, term, or phrase that would help to&#xA;                facilitate search and discovery of this MPD. Implemented as the value of the&#xA;                KeywordText element in the catalog instance. &lt;/body&gt;&#xA;                &lt;/html&gt; lue of the KeywordText element in the catalog instance.&#xA;                &lt;/body&gt; &lt;/html&gt; g instance. &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText"/>
                  </ownedComment>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-KeywordText-upperValue"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText"
                               name="DomainText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                NIEM Domain applicable to, associated with, or that uses the MPD. Implemented as the&#xA;                value of the DomainText element in the catalog instance. &lt;/body&gt;&#xA;                &lt;/html&gt; lement in the catalog instance. &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText"/>
                  </ownedComment>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-DomainText-upperValue"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText"
                               name="PurposeText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                description for the purpose, function, intended use of, or reason for the existence&#xA;                of the MPD. Implemented as the value of the PurposeText element in the catalog&#xA;                instance. &lt;/body&gt; &lt;/html&gt; PurposeText element in the&#xA;                catalog instance. &lt;/body&gt; &lt;/html&gt; tance.&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText-lowerValue"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-PurposeText-upperValue"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText"
                               name="ExchangePatternText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                description of a transactional, design, or exchange pattern the MPD uses (generally,&#xA;                applicable to IEPDs only). Implemented as the value of the ExchangePatternText&#xA;                element in the catalog instance. &lt;/body&gt; &lt;/html&gt;&#xA;                atternText element in the catalog instance. &lt;/body&gt;&#xA;                &lt;/html&gt; ce. &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText-lowerValue"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePatternText-upperValue"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName"
                               name="ExchangePartnerName"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; Name&#xA;                of an agency, organization, or entity that uses the MPD (in particular to share or&#xA;                exchange data). Implemented as the value of the ExchangePartnerName element in the&#xA;                catalog instance. &lt;/body&gt; &lt;/html&gt; xchangePartnerName&#xA;                element in the catalog instance. &lt;/body&gt; &lt;/html&gt; ce.&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName-lowerValue"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ExchangePartnerName-upperValue"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASName"
                               name="ASName"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASName-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                name for the authoritative source for the MPD; can be author, creator, sponsor, etc.&#xA;                (person, organization, or entity). Implemented as the value of the ASName element in&#xA;                the catalog instance. &lt;/body&gt; &lt;/html&gt; the ASName element&#xA;                in the catalog instance. &lt;/body&gt; &lt;/html&gt; instance.&#xA;                &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASName"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText"
                               name="ASAddressText"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; An&#xA;                address or description for the location of the authoritative source for the MPD.&#xA;                Implemented as the value of the ASAddressText element in the catalog instance.&#xA;                &lt;/body&gt; &lt;/html&gt; xt element in the catalog instance.&#xA;                &lt;/body&gt; &lt;/html&gt; ce. &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASAddressText-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL"
                               name="ASWebSiteURL"
                               visibility="public"
                               aggregation="composite">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A URL&#xA;                for the Web site of the authoritative source for the MPD. Implemented as the value&#xA;                of the ASWebSiteURL element in the catalog instance. &lt;/body&gt;&#xA;                &lt;/html&gt; lement in the catalog instance. &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/body&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-ASWebSiteURL-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC"
                               name="POC"
                               visibility="public"
                               aggregation="composite"
                               type="NIEM_UML_Profile-Model_Package_Description_Profile-POCType">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                point of contact (POC) for the authoritative source for the MPD; metadata used to&#xA;                contact the authoritative source. Implemented as a POCType with values for name,&#xA;                email, and telephone in the catalog instance. &lt;/body&gt;&#xA;                &lt;/html&gt; for name, email, and telephone in the catalog instance.&#xA;                &lt;/body&gt; &lt;/html&gt; g instance. &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC"/>
                  </ownedComment>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescription-POC-upperValue"
                              value="*"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode"
                             name="NatureCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; An indication of the type of an MPD artifact. This further indicates&#xA;              how it should be processed by software tools. The literals of this enumeration&#xA;              correspond to MPD nature URIs of the form&#xA;              &#34;http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/nature#&lt;nature-code&gt;&#34;.&#xA;              &lt;/p&gt; &lt;p&gt; [Note these NIEM-UML enumeration literals differ&#xA;              from the NIEM MPD Specification v1.0 in that they use underscore (&#34;_&#34;) instead of dash&#xA;              (&#34;-&#34;). This is due to issues with dashes in some UML tools.] Reference Section 4.2.5&#xA;              and Appendix G of NIEM MPD Specification v1.0&#xA;              (http://reference.niem.gov/niem/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;p&gt; Â  &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; m/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;p&gt; Â  &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; p&gt; &lt;/body&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mpd"
                             name="mpd"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-domain_update"
                             name="domain_update"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-iepd"
                             name="iepd"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-release"
                             name="release"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-binary"
                             name="binary">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279521108_262459_3537"
                                body="A nature of a binary file with unknown or unspecified encoding or format.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-binary"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-doc"
                             name="doc"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-image"
                             name="image"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-gif"
                             name="gif"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-jpg"
                             name="jpg"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-png"
                             name="png"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-mdb"
                             name="mdb"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-pdf"
                             name="pdf"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-ppt"
                             name="ppt"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-svg"
                             name="svg"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-vsd"
                             name="vsd"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xls"
                             name="xls"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-zip"
                             name="zip"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-character"
                             name="character"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-csv"
                             name="csv"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-html"
                             name="html"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-text"
                             name="text"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xml"
                             name="xml"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-catalog"
                             name="catalog">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279534455_885606_3538"
                                body="A nature of a NIEM model package description (MPD) catalog file format.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-catalog"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-changelog"
                             name="changelog"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-owl"
                             name="owl"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-rdf"
                             name="rdf"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-schematron"
                             name="schematron"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wantlist"
                             name="wantlist"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-wsdl"
                             name="wsdl"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xhtml"
                             name="xhtml"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xmi"
                             name="xmi"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xsd"
                             name="xsd"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-xslt"
                             name="xslt"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode-file_set"
                             name="file_set"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279318712_70016_3529"
                             name="core_update">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279545579_724090_3539"
                                body="A nature of a NIEM core update model package description (MPD).">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279318712_70016_3529"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377279328400_220596_3531"
                             name="eiem">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377279558504_485988_3540"
                                body="A nature of a NIEM Enterprise Information Exchange Model (EIEM) model package description (MPD).">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377279328400_220596_3531"/>
                  </ownedComment>
               </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10">
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-base_Component"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd"
                         name="extension_ModelPackageDescriptionFileSet"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet"
                         association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode"
                             name="ModelPackageDescriptionClassCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;              specified classification (type or kind) of the MPD. Implemented as the value of the&#xA;              mpdClassCode attribute of the Catalog element in the catalog instance. One and only&#xA;              one classification is allowed for any given MPD. &lt;p&gt; [Note these&#xA;              NIEM-UML enumeration literals differ from the NIEM MPD Specification v1.0 in that they&#xA;              use underscore (&#34;_&#34;) instead of dash (&#34;-&#34;). This is due to issues with dashes in some&#xA;              UML tools.] Reference Section 4.2.5 and Appendix B of NIEM MPD Specification v1.0&#xA;              (http://reference.niem.gov/niem/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              cification/model-package-description/1.0/). &lt;/p&gt; &lt;/body&gt;&#xA;              &lt;/html&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-eiem"
                             name="eiem">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-eiem-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; An&#xA;                Enterprise Information Exchange Model (EIEM) is an MPD that incorporates BIECs that&#xA;                meet enterprise business needs for exchanging data using NIEM [NIEM-BIEC]. An EIEM&#xA;                is an adaptation of NIEM schemas, tailored and constrained for and by an enterprise.&#xA;                An EIEM will contain the following schemas that are commonly used or expected to be&#xA;                used by the authoring enterprise: one standard NIEM schema subset and one or more&#xA;                NIEM extension schemas that extend existing NIEM data components or establish new&#xA;                data components. &lt;br&gt; &lt;/body&gt; &lt;/html&gt; ish&#xA;                new data components. &lt;br&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                y&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-eiem"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-iepd"
                             name="iepd">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-iepd-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; NIEM Information Exchange Package Documentation (IEPD) is an MPD&#xA;                that defines a recurring XML data exchange. An NIEM IEPD is a set of valid XML&#xA;                schemas that may include portions of NIEM Core schemas, portions of NIEM Domain&#xA;                schemas, enterprise-specific or IEPD-specific extension schemas, and at least one&#xA;                exchange schema that defines a document element (as defined in [W3-XML-InfoSet]).&#xA;                The schemas contained in an IEPD work together to define a class of XML instances&#xA;                that consistently encapsulate data for information exchanges. Each XML instance in&#xA;                this class validates against the set of XML schemas contained within the IEPD.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; gainst the set of XML&#xA;                schemas contained within the IEPD. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-iepd"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-core_update"
                             name="core_update">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-core_update-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; When necessary, the NIEM PMO can publish a core update. This is&#xA;                essentially identical to a domain update in terms of structure and use, with two&#xA;                important exceptions. First, a core update records changes that apply to a&#xA;                particular NIEM core version or another core update. This also means it is&#xA;                applicable to all NIEM releases using that same core version. Second, a core update&#xA;                is never published to replace a NIEM core. It is intended to add new schemas, new&#xA;                data components, new code values, etc. to a core without waiting for the next major&#xA;                release. In some cases, minor modifications to existing data components are&#xA;                possible. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                modifications to existing data components are possible. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-core_update"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-release"
                             name="release">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-release-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; A&#xA;                NIEM release is an MPD containing a full set of harmonized reference schemas that&#xA;                coherently define all content within a single version of NIEM. NIEM releases include&#xA;                major, minor, and micro releases (as defined in the NIEM High Level Version&#xA;                Architecture (HLVA)). &lt;br&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                tecture (HLVA)). &lt;br&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                /html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-release"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-domain_update"
                             name="domain_update">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-domain_update-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; A domain update is an MPD containing reference schemas that&#xA;                represent changes to NIEM domains. The [NIEM-HLVA] defines a domain update as both a&#xA;                process and a NIEM product. Through use and analysis of NIEM releases and published&#xA;                content, domain users will identify issues and new data requirements for the domain&#xA;                and sometimes Core. NIEM domains use these issues as the basis for incremental&#xA;                improvements, extensions, and proposed changes to future NIEM releases. Both the&#xA;                process and product of the process are referred to as domain update.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; of the process are&#xA;                referred to as domain update. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionClassCode-domain_update"/>
                  </ownedComment>
               </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet"
                             name="ModelPackageDescriptionFileSet">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; A ModelPackageDescriptionFileSet Component represents a set of files&#xA;              in an MPD that are grouped for a specific purpose, function, or classification. For&#xA;              example, a set of MPD files might represent a schema subset, extension schema set, set&#xA;              of documentation, or set of test files. The MPD catalog uses the File element to&#xA;              represent artifacts, and the FileSet element to represent a set of artifacts. Note&#xA;              that both files and file sets are considered MPD artifacts. Reference Sections 4.2.3&#xA;              and 4.2.4 of NIEM MPD Specification v1.0&#xA;              (http://reference.niem.gov/niem/specification/model-package-description/1.0/).&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              .gov/niem/specification/model-package-description/1.0/). &lt;/p&gt;&#xA;              &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-unnamed1"
                          name="unnamed1">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet"/>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-unnamed1-specification">
                     <body>self.base_Package.namespace.stereotypedBy('ModelPackageDescription')</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI"
                               name="externalURI"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI-ownedComment"
                                body="The external URI for the file set; indicates a same-as relationship to a copy of&#xA;                the file set. Implemented as the value of the externalURI attribute of the FileSet&#xA;                element in the catalog instance.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-externalURI-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-natureCode"
                               name="natureCode"
                               visibility="public"
                               type="NIEM_UML_Profile-Model_Package_Description_Profile-NatureCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-natureCode-ownedComment"
                                body="The nature (type) of the file set. Implemented as the value of the natureURI&#xA;                attribute of the FileSet element in the catalog instance.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-natureCode"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-purposeCode"
                               name="purposeCode"
                               visibility="public"
                               type="NIEM_UML_Profile-Model_Package_Description_Profile-PurposeCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-purposeCode-ownedComment"
                                body="The purpose or function of the file set. Implemented as the value of the&#xA;                purposeURI attribute of the FileSet element in the catalog instance.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-purposeCode"/>
                  </ownedComment>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText"
                               name="descriptionText"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText-ownedComment"
                                body="A description of the file set. Implemented as the value of the descriptionText&#xA;                attribute of the FileSet element in the catalog instance.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-descriptionText-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFileSet-base_Component"
                               name="base_Component"
                               visibility="private"
                               association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-10">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Component"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13">
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile-base_Usage"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd"
                         name="extension_ModelPackageDescriptionFile"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-Model_Package_Description_Profile-ModelPackageDescriptionFile"
                         association="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-Model_Package_Description_Profile-packagedElement-13-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="_17_0_4_1_7b3022e_1377283113930_625311_3573"
                             name="ChangeLogType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="_17_0_4_1_7b3022e_1377283224237_231001_3642"
                             body="The ChangeLogType stereotype applies to a Package that represents the required MPD changelog artifact. The changelog artifact contains descriptive information about the changelog as a whole.  The attributes defined for &lt;&lt;ChangeLogType&gt;&gt; reflect the required changelog descriptive information.">
                  <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283113930_625311_3573"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283158966_496211_3599"
                               name="base_Package"
                               visibility="private"
                               association="_17_0_4_1_7b3022e_1377283158966_694257_3598">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Package"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283301913_250153_3643"
                               name="ChangeLogSummaryText"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283348468_362197_3647"
                                body="Descriptive text providing a summary of the change log.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283301913_250153_3643"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283333031_68992_3645"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283356360_866752_3648"
                               name="ChangeLogSubmitterName"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283483322_259815_3660"
                                body="A name of the person, or organization submitting the change log.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283356360_866752_3648"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283378368_652698_3650"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283383065_429317_3652"
                               name="ChangeLogApplicationInstructionsText"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283499036_570719_3661"
                                body="Descriptive text representing change log applications instructions.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283383065_429317_3652"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283422820_252745_3654"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283435497_78459_3656"
                               name="BaselineModelURL"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283510325_964890_3662"
                                body="URL of baseline model the change log applies to.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283435497_78459_3656"/>
                  </ownedComment>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="_17_0_4_1_7b3022e_1377283158966_694257_3598">
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1377283158966_496211_3599"/>
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1377283158966_200925_3600"/>
               <navigableOwnedEnd xmi:idref="_17_0_4_1_7b3022e_1377283158966_200925_3600"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="_17_0_4_1_7b3022e_1377283158966_200925_3600"
                         name="extension_ChangeLogType"
                         visibility="private"
                         aggregation="composite"
                         type="_17_0_4_1_7b3022e_1377283113930_625311_3573"
                         association="_17_0_4_1_7b3022e_1377283158966_694257_3598">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283158966_379734_3601"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="_17_0_4_1_7b3022e_1377283555001_899138_3668"
                             name="ChangeInformationType">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="_17_0_4_1_7b3022e_1377283643790_384192_3713"
                             body="The ChangeInformationType stereotype applies to a Package that represents one or more detailed change entries.  The &lt;&lt;ChangeInformationType&gt;&gt; is a nested UML::Package of &lt;&lt;ChangeLogType&gt;&gt;.  It contains descriptive information about one or more detailed change entries.  The attributes defined for &lt;&lt;ChangeInformationType&gt;&gt; reflect the required changelog descriptive information for change entries.  The change entries themselves, and their relationship with &lt;&lt;ChangeInformationType&gt;&gt; is an implementation detail not constrained by this specification">
                  <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283555001_899138_3668"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283599310_381497_3694"
                               name="base_Package"
                               visibility="private"
                               association="_17_0_4_1_7b3022e_1377283599310_636288_3693">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Package"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283663977_43979_3714"
                               name="ChangeSummaryText"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283900408_228153_3749"
                                body="Text outlining a summary of a specific change contained in the change log.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283663977_43979_3714"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283679593_505945_3716"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283689001_472094_3718"
                               name="ChangeReasonText"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283883732_974093_3748"
                                body="Descriptive text providing context to the reason a change noted in the change log was made.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283689001_472094_3718"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283706601_33998_3720"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283710784_892590_3722"
                               name="ChangeFullDescriptionText"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283863334_237774_3747"
                                body="Descriptive text outlining the details of a specific change contained in a change log.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283710784_892590_3722"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283731814_561434_3724"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283746968_787989_3726"
                               name="ChangeNCCTIssueNumber"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Integer"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283851847_165047_3746"
                                body="Text outlining the  NIEMthe NIEM Change Configuration Tool number associated to the specific change contained in the change log.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283746968_787989_3726"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283781785_301029_3728"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="_17_0_4_1_7b3022e_1377283781785_468962_3729"
                              value="*"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377283786897_40249_3730"
                               name="ChangeCodeSimpleType"
                               visibility="public"
                               type="_17_0_4_1_7b3022e_1377283917226_149023_3750">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="_17_0_4_1_7b3022e_1377283840413_398520_3745"
                                body="An enumeration of change codes based on the type of change that is contained in the change log.">
                     <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377283786897_40249_3730"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283810927_854720_3732"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural"
                              xmi:id="_17_0_4_1_7b3022e_1377283810927_182030_3733"
                              value="*"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="_17_0_4_1_7b3022e_1377283599310_636288_3693">
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1377283599310_381497_3694"/>
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1377283599311_460341_3695"/>
               <navigableOwnedEnd xmi:idref="_17_0_4_1_7b3022e_1377283599311_460341_3695"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="_17_0_4_1_7b3022e_1377283599311_460341_3695"
                         name="extension_ChangeInformationType"
                         visibility="private"
                         aggregation="composite"
                         type="_17_0_4_1_7b3022e_1377283555001_899138_3668"
                         association="_17_0_4_1_7b3022e_1377283599310_636288_3693">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377283599311_21991_3696"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="_17_0_4_1_7b3022e_1377283917226_149023_3750"
                             name="ChangeCodeSimpleType">
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377283944098_788984_3769"
                             name="new_requirement"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377283963649_377024_3771"
                             name="bug_fix"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377283971664_866270_3773"
                             name="refactoring"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377283981217_32042_3775"
                             name="harmonization"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="_17_0_4_1_7b3022e_1377283991984_174351_3777"
                             name="general_improvement"/>
            </packagedElement>
         </packagedElement>
         <packagedElement xmi:type="uml:Profile"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile"
                          name="NIEM_PSM_Profile"
                          URI="http://www.omg.org/spec/NIEM-UML/20130801/NIEM_PSM_Profile">
            <metamodelReference xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packageImport-2"/>
            <ownedComment xmi:type="uml:Comment"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-ownedComment"
                          body="The NIEM PSM Profile comprises stereotypes that are used in NIEM PSMs. These&#xA;            stereotypes need not be used with a NIEM PIM, but they may be in order to provide&#xA;            additional platform-specific markup.Further, the NIEM PIM Profile imports the NIEM&#xA;            Common Profile and, therefore, includes all the stereotypes and metaclasses covered by&#xA;            that profile.">
               <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile"/>
            </ownedComment>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packageImport-1"
                           importedPackage="NIEM_UML_Profile-NIEM_Common_Profile"/>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packageImport-2">
               <importedPackage href="http://www.omg.org/spec/UML/20110701/UML.xmi#_0"/>
            </packageImport>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-1">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-base_DataType"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-1-ownedEnd"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-1-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-1-ownedEnd"
                         name="extension_RepresentationRestriction"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction"
                         association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-1">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-1-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction"
                             name="XSDRepresentationRestriction">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-ownedComment"
                             body="XSDRepresentationRestriction specifies a restriction on the representation in an&#xA;              XML schema of the values of a base DataType. ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-must_have_one_generalization"
                          name="must have one generalization">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-must_have_one_generalization-ownedComment"
                                body="A DataType with an XSDRepresentationRestriction must have exactly one&#xA;                generalization.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-must_have_one_generalization"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-must_have_one_generalization-specification">
                     <body> self.base_DataType.generalization-&gt;notEmpty() </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-whiteSpace"
                               name="whiteSpace"
                               visibility="public"
                               type="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-whiteSpace-ownedComment"
                                body="whiteSpace is a restriction on the value space of the DataType. It is&#xA;                implemented in XML Schema as the value of the value attribute on the xsd:whiteSpace&#xA;                element, the child of the xsd:restriction element which is the immediate child of&#xA;                the xsd:simpleType element.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-whiteSpace"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-whiteSpace-lowerValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDRepresentationRestriction-base_DataType"
                               name="base_DataType"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-1">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#DataType"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode"
                             name="XSDPropertyKindCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-ownedComment"
                             body="XSDPropertyKindCode supports the kind attribute of XSDProperty by providing values&#xA;              to specify if an XSD property is represented as an xsd:element or&#xA;            xsd:attribute.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-element"
                             name="element">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-element-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-element"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-attribute"
                             name="attribute">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-attribute-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-attribute"/>
                  </ownedComment>
               </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-4">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-4-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID-base_Property"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-4-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-4-ownedEnd"
                         name="extension_XSDStructureId"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID"
                         association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-4">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-4-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty"
                             name="XSDProperty">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-ownedComment"
                             body="An XSDProperty Property represents a NIEM property, which is implemented in XML&#xA;              Schema as either an attribute declaration and use or an element declaration and&#xA;              particle. If an XSDProperty Property is the client of a References Realization, then&#xA;              the supplier of the Realization defines the declaration of the NIEM property.&#xA;              Otherwise, the declaration of the NIEM property is defined implicitly to be the&#xA;              top-level attribute or element definition of the same name within the target namespace&#xA;              of the Namespace Package that contains the XSDProperty Property. All NIEM properties&#xA;              represented by XSDProperty Properties with the same name within the same package that&#xA;              are not clients of References Realizations share the same implicit attribute or&#xA;              element declaration. ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-5_"
                          name="NDR [Rule 9-5]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-5_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-5] (REF, SUB, EXT)&lt;/b&gt; Within the schema, any&#xA;                attribute declaration SHALL have a name that begins with a lower-case letter&#xA;                ('a'-'z'). &lt;/body&gt; &lt;/html&gt; 'a'-'z').&#xA;                &lt;/body&gt; &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-5_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-5_-specification">
                     <body>(self.kind=XSDPropertyKindCode::attribute) implies
                self.base_Property.name.firstToUpper()&lt;&gt;self.base_Property.name</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyAttributeKind"
                          name="XSDPropertyAttributeKind">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyAttributeKind-ownedComment"
                                body="If kind=attribute, then an XSDProperty must have multiplicity 1..1, must not be&#xA;                a derived union and must not subset any other property. If the type is not empty, it&#xA;                must be a DataType.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyAttributeKind"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyAttributeKind-specification">
                     <body>( (self.kind=XSDPropertyKindCode::element) implies( (self.base_Property.upper=1)
                and (self.base_Property.lower=1) and not (self.base_Property.isDerivedUnion) and
                self.base_Property.subsettedProperty-&gt;isEmpty() ) ) and(
                not(self.base_Property.type.oclIsUndefined()) implies
                self.base_Property.type.oclIsKindOf(DataType) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_7-14_"
                          name="NDR [Rule 7-14]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_7-14_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-14] (REF, EXT)&lt;/b&gt; A&#xA;                component definition SHALL begin with a standard opening phrase that depends on the&#xA;                class of the component per Table 7-1 in NDR: Standard Opening Phrases:&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                standard opening phrase based on component class helps to ensure consistent&#xA;                definitions that appropriate for the type of component item being defined. These&#xA;                opening phrases also provide a cue that facilitates recognition of the particular&#xA;                kind of component. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; s&#xA;                recognition of the particular kind of component. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_7-14_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_7-14_-specification">
                     <body>self.base_Property.ownedComment -&gt;exists(documentation|
                documentation.stereotypedBy('Documentation') and
                (self.base_Property.type.oclIsUndefined() implies documentation.body.startsWith('A
                data concept for a ')) and (self.base_Property.type.stereotypedBy('AssociationType')
                implies documentation.body.startsWith('A relationship ')) and
                (self.base_Property.type.stereotypedBy('AugmentationType') implies
                documentation.body.startsWith('Supplements ')) and
                (self.base_Property.type.stereotypedBy('MetadataType') implies
                (documentation.body.startsWith('Metadata about ') or
                documentation.body.startsWith('Information that further qualifies ')) and
                (self.base_Property.name.match('.*Date.*') implies documentation.body.startsWith('A
                date ')) and (self.base_Property.name.match('.*Quantity.*') implies
                documentation.body.match('A .*count/number of ')) -- Element with an image
                representation term "A(n) (optional adjective) image/picture/photograph of..." and
                (self.base_Property.name.match('.*Indicator.*') implies
                documentation.body.match('True if .*; false otherwise.*')) -- Element with an
                identification representation term "A(n) (optional adjective) identification..." and
                (self.base_Property.name.match('.*ID.*') implies documentation.body.match('An
                Identifier .*')) -- Element with a status representation term "A(n) (optional
                adjective) status/state of..." and (self.base_Property.name.match('.*Name.*')
                implies documentation.body.match('A name of .*')) -- Element with a category text
                representation term "A kind of..." -- Element with a description text representation
                term "A description of..." and
                (not(self.base_Property.type.stereotypedBy('AugmentationType') or
                self.base_Property.type.stereotypedBy('MetadataType')) implies
                documentation.body.match('An? .* ')) ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-31_"
                          name="NDR [Rule 9-31]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-31_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-31] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the name of any reference element SHALL use the representation&#xA;                term suffix Reference. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Reference elements are identical in&#xA;                semantics to elements that are not by reference. However, they refer to their values&#xA;                by a reference attribute instead of carrying it as content of the XML element. The&#xA;                use of a suffix helps indicate that the elements refer to, instead of contain, their&#xA;                values, yet allows the basic semantics (e.g., property, representation term) to&#xA;                persist. &lt;/p&gt; &lt;p&gt; Note that the use of the&#xA;                representation term suffix is one of the situations in which there is a slight&#xA;                divergence from the general rule for name generation as discussed in [Rule 9-12].&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; vergence from the&#xA;                general rule for name generation as discussed in [Rule 9-12]. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; body&gt; &lt;/html&gt;&#xA;              ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-31_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-31_-specification">
                     <body>( (self.kind=XSDPropertyKindCode::element) and
                (self.base_Property.aggregation=AggregationKind::none) ) =
                self.base_Property.name.endsWith('Reference') </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-3_"
                          name="NDR [Rule 9-3]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-3_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-3] (REF, SUB, EXT) &lt;/b&gt;The&#xA;                name of any XML Schema component defined by the schema SHALL contain only the&#xA;                following characters: &lt;/p&gt; &lt;p&gt; ï¿½ Upper-case letters&#xA;                ('A'-'Z'). &lt;/p&gt; &lt;p&gt; ï¿½ Lower-case letters ('a'-'z').&#xA;                &lt;/p&gt; &lt;p&gt; ï¿½ Digits ('0'-'9'). &lt;/p&gt;&#xA;                &lt;p&gt; ï¿½ Hyphen ('-'). &lt;/p&gt; &lt;p&gt; Other&#xA;                characters, such as the underscore ('_') character and the period ('.') character&#xA;                SHALL NOT appear in component names in NIEM-conformant schemas. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; od ('.') character SHALL NOT appear in&#xA;                component names in NIEM-conformant schemas. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &gt; &lt;/body&gt; &lt;/html&gt;&#xA;                ml&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-3_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-3_-specification">
                     <body>self.base_Property.name.match('[\\w|\\-]*')</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyElementKind"
                          name="XSDPropertyElementKind">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyElementKind-ownedComment"
                                body="If an XSDProperty has kind=element and a non-empty type, then that type must be&#xA;                a Class stereotyped as a NIEMType. If it has kind=element and an empty type, then it&#xA;                must be a derived union.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyElementKind"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyElementKind-specification">
                     <body>( ( (self.kind=XSDPropertyKindCode::element) and
                not(self.base_Property.type.oclIsUndefined()) ) implies
                self.base_Property.type.stereotypedBy('NIEMType') ) and ( (
                (self.kind=XSDPropertyKindCode::element) and
                self.base_Property.type.oclIsUndefined() ) implies self.base_Property.isDerivedUnion
                ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-19_"
                          name="NDR [Rule 9-19]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-19_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-19] (REF, SUB, EXT) &lt;/b&gt;Within the schema,&#xA;                the name of an element declaration that is of simple content MUST use a&#xA;                representation term found in NDR Table 9-2: Representation Terms.&#xA;                &lt;/body&gt; &lt;/html&gt; on Terms. &lt;/body&gt;&#xA;                &lt;/html&gt; l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-19_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-19_-specification">
                     <body>( (self.kind=XSDPropertyKindCode::element) and
                self.base_Property.type.oclIsKindOf(DataType) ) implies (
                self.base_Property.name.match('.*Name.*') or
                self.base_Property.name.match('.*Text.*') or
                self.base_Property.name.match('.*Quantity.*') or
                self.base_Property.name.match('.*Percent.*') or
                self.base_Property.name.match('.*Rate.*') or
                self.base_Property.name.match('.*Value.*') or
                self.base_Property.name.match('.*Numeric.*') or
                self.base_Property.name.match('.*Measure.*') or
                self.base_Property.name.match('.*Indicator.*') or
                self.base_Property.name.match('.*URI.*') or self.base_Property.name.match('.*ID.*')
                or self.base_Property.name.match('.*Time.*') or
                self.base_Property.name.match('.*Date.*') or
                self.base_Property.name.match('.*DateTime.*') or
                self.base_Property.name.match('.*Code.*') or
                self.base_Property.name.match('.*Video.*') or
                self.base_Property.name.match('.*Sound.*') or
                self.base_Property.name.match('.*Picture.*') or
                self.base_Property.name.match('.*Graphic.*') or
                self.base_Property.name.match('.*BinaryObject.*') or
                self.base_Property.name.match('.*Amount.*') ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyOwner"
                          name="XSDPropertyOwner">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyOwner-ownedComment"
                                body="An XSDProperty must be the ownedAttribute of a DataType or a Class stereotyped&#xA;                as a NIEMType.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyOwner"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-XSDPropertyOwner-specification">
                     <body>self.base_Property.owner.oclIsKindOf(DataType) or
                self.base_Property.owner.stereotypedBy(NIEMType) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-22_"
                          name="NDR [Rule 9-22]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-22_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-22] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, the name of an attribute declaration MUST use a&#xA;                representation term from NDR Table 9-2: Representation Terms. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; An element that&#xA;                represents a value listed in the table should have a representation term. It should&#xA;                do so even if its type is complex with multiple parts. For example, a type with&#xA;                multiple fields may represent a sound binary, a date, or a name. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; may represent a sound binary, a date, or&#xA;                a name. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-22_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-22_-specification">
                     <body>(self.kind=XSDPropertyKindCode::attribute) implies
                self.base_Property.name.match('.*Name.*') or
                self.base_Property.name.match('.*Text.*') or
                self.base_Property.name.match('.*Quantity.*') or
                self.base_Property.name.match('.*Percent.*') or
                self.base_Property.name.match('.*Rate.*') or
                self.base_Property.name.match('.*Value.*') or
                self.base_Property.name.match('.*Numeric.*') or
                self.base_Property.name.match('.*Measure.*') or
                self.base_Property.name.match('.*Indicator.*') or
                self.base_Property.name.match('.*URI.*') or self.base_Property.name.match('.*ID.*')
                or self.base_Property.name.match('.*Time.*') or
                self.base_Property.name.match('.*Date.*') or
                self.base_Property.name.match('.*DateTime.*') or
                self.base_Property.name.match('.*Code.*') or
                self.base_Property.name.match('.*Video.*') or
                self.base_Property.name.match('.*Sound.*') or
                self.base_Property.name.match('.*Picture.*') or
                self.base_Property.name.match('.*Graphic.*') or
                self.base_Property.name.match('.*BinaryObject.*') or
                self.base_Property.name.match('.*Amount.*')</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-6_"
                          name="NDR [Rule 9-6]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-6_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;b&gt;[Rule 9-6] (REF, SUB, EXT) &lt;/b&gt;Within the schema, any&#xA;                XML Schema component other than an attribute declaration SHALL have a name that&#xA;                begins with an upper-case letter ('A'-'Z'). &lt;/body&gt;&#xA;                &lt;/html&gt; 'A'-'Z'). &lt;/body&gt; &lt;/html&gt;&#xA;                l&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-6_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_9-6_-specification">
                     <body>(self.kind=XSDPropertyKindCode::element) implies
                (self.base_Property.name.firstToUpper()=self.base_Property.name)</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_6-10_"
                          name="NDR [Rule 6-10]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_6-10_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-10] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, an attribute declaration with attribute name MUST carry the&#xA;                attribute type. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; Untyped XML Schema attributes allow&#xA;                arbitrary content, with no semantics. Attributes must have a type so that specific&#xA;                syntax and semantics will be provided. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; and semantics will be provided. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; dy&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_6-10_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-NDR__Rule_6-10_-specification">
                     <body>(self.kind=XSDPropertyKindCode::attribute) implies
                not(self.base_Property.type.oclIsUndefined())</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-base_Property"
                               name="base_Property"
                               visibility="public"
                               association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-9">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Property"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-kind"
                               name="kind"
                               visibility="public"
                               type="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-kind-ownedComment"
                                body="Indicates whether the NIEM property is implemented in XML Schema as an attribute&#xA;                declaration and attribute use or element declaration and element particle: if&#xA;                &#34;attribute&#34;, the NIEM property is implemented in XML Schema as an attribute&#xA;                declaration and attribute use; if &#34;element&#34;, the NIEM property is implemented as an&#xA;                element declaration and element particle.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-kind"/>
                  </ownedComment>
                  <defaultValue xmi:type="uml:InstanceValue"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-kind-defaultValue"
                                instance="NIEM_UML_Profile-NIEM_PSM_Profile-XSDPropertyKindCode-element"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-nillable"
                               name="nillable"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#Boolean"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-nillable-ownedComment"
                                body="Implemented in XML Schema as the value of the nillable attribute on the&#xA;                xsd:element element. Note that an XSDProperty that represents an XML attribute may&#xA;                not have a nillable value.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-nillable"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-nillable-lowerValue"/>
                  <defaultValue xmi:type="uml:LiteralBoolean"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-nillable-defaultValue"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-fixed"
                               name="fixed"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-fixed-ownedComment"
                                body="If present, implemented as the value of the fixed attribute of the xsd:attribute&#xA;                or xsd:element.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-fixed"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-fixed-lowerValue"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-6">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-base_Realization"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-6-ownedEnd"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-6-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-6-ownedEnd"
                         name="extension_XSDSimpleContent"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent"
                         association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-6">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-6-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty"
                             name="XSDAnyProperty">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-ownedComment"
                             body="XSDAnyProperty stereotype represents a property that is unrestricted with respect&#xA;              to the properties type, which is implemented in XML Schema as the xsd:any&#xA;            particle.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-XSDAnyPropertyType"
                          name="XSDAnyPropertyType">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-XSDAnyPropertyType-ownedComment"
                                body="An XSDAnyProperty must have an empty type and must not be a derived union or&#xA;                subset any other property.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-XSDAnyPropertyType"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-XSDAnyPropertyType-specification">
                     <body>self.base_Property.type.oclIsUndefined() and
                not(self.base_Property.isDerivedUnion) and
                self.base_Property.subsettedProperty-&gt;isEmpty() </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-NDR__Rule_6-11_"
                          name="NDR [Rule 6-11]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-NDR__Rule_6-11_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 6-11] (REF, SUB)&lt;/b&gt; The&#xA;                schema SHALL NOT contain the element xsd:any. &lt;/p&gt; &lt;p&gt;&#xA;                &lt;b&gt;Rationale&lt;/b&gt; The xsd:any particle (see Model Group&#xA;                Restrictions for an informative definition of particle) provides a wildcard that may&#xA;                carry arbitrary content. The particle xsd:any may appear within constraint schemas,&#xA;                extension schemas, and exchange schemas. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; s, extension schemas, and exchange schemas. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-NDR__Rule_6-11_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-NDR__Rule_6-11_-specification">
                     <body>self.base_Property.owner.owner.getTargetDirectedRelationships()
                -&gt;select(d|d.stereotypedBy('ModelPackageDescriptionFile'))
                -&gt;forAll(mpdf|
                (mpdf.getStereotypeApplication('ModelPackageDescriptionFile').purposeURI&lt;&gt;'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#reference-schema')
                and
                (mpdf.getStereotypeApplication('ModelPackageDescriptionFile').purposeURI&lt;&gt;'http://reference.niem.gov/niem/resource/mpd/lexicon/1.0/purpose#subset-schema')
                ) </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-base_Property"
                               name="base_Property"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-11">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Property"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-processContents"
                               name="processContents"
                               visibility="public"
                               type="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-processContents-ownedComment"
                                body="Determines how or if the value of a NIEM property should be processed; values&#xA;                are: &#34;lax&#34;, &#34;skip&#34;, and &#34;strict&#34;.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-processContents"/>
                  </ownedComment>
                  <defaultValue xmi:type="uml:OpaqueExpression"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-processContents-defaultValue">
                     <body>"strict"</body>
                  </defaultValue>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-valueNamespace"
                               name="valueNamespace"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-valueNamespace-ownedComment"
                                body="The namespace in which values of this property must be defined. Implemented in&#xA;                XML Schema as the value of the namespace attribute on the xsd:any element.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-valueNamespace"/>
                  </ownedComment>
                  <defaultValue xmi:type="uml:LiteralString"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-valueNamespace-defaultValue"
                                value="&#34;##any&#34;"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode"
                             name="XSDWhiteSpaceCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-ownedComment"
                             body="Enumeration XSDWhiteSpaceCode supports the whiteSpace attribute of the&#xA;              XSDWhiteSpaceCode attribute as per the XSD definitions.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-replace"
                             name="replace">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-replace-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-replace"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-collapse"
                             name="collapse">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-collapse-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-collapse"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-preserve"
                             name="preserve">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-preserve-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDWhiteSpaceCode-preserve"/>
                  </ownedComment>
               </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-9">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty-base_Property"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-9-ownedEnd"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-9-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-9-ownedEnd"
                         name="extension_NIEMProperty"
                         visibility="public"
                         type="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProperty"
                         association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-9">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-9-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent"
                             name="XSDSimpleContent">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-ownedComment"
                             body="XSDSimpleContent represents a relationship between two type definitions: the first&#xA;              is a complex type definition with simple content whose content type is the second.&#xA;              This relationship is implemented in XML Schema through base attribute on the&#xA;              xsd:extension or xsd:restriction element of the first type definition, the actual&#xA;              value of which resolves to the second type definition. Section 3.4 of XML Schema&#xA;              Structures addresses simple content types in XML Schema; Sections 6.5.1, 6.5.2, and&#xA;              7.4 of NIEM NDR v1.3 address simple content types in NIEM-conformant XML&#xA;            Schema.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-Client_must_be_a___NIEMType__"
                          name="Client must be a &lt;&lt;NIEMType&gt;&gt;">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-Client_must_be_a___NIEMType__-ownedComment"
                                body="The client of an XSDSimpleContent Realization must be a Class stereotyped as a&#xA;                NIEMType.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-Client_must_be_a___NIEMType__"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-Client_must_be_a___NIEMType__-specification">
                     <body>self.base_Realization.client-&gt;forAll(c|c.stereotypedBy('NIEMType'))</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-supplier_must_be_a__DataType_"
                          name="supplier must be a &lt;DataType&gt;">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-supplier_must_be_a__DataType_-ownedComment"
                                body="The suppler of an XSDSimpleContent Realization must be a DataType.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-supplier_must_be_a__DataType_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-supplier_must_be_a__DataType_-specification">
                     <body>self.base_Realization.supplier-&gt;forAll(s|s.oclIsKindOf(DataType))</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-NDR__Rule_9-1_"
                          name="NDR [Rule 9-1]">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-NDR__Rule_9-1_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-1] (REF, SUB, EXT)&#xA;                &lt;/b&gt;Within the schema, a complex type that is a direct extension of a&#xA;                simple type from the XML Schema namespace simple type MAY use the same local name as&#xA;                the simple type if and only if the extension adds no content other than the&#xA;                attribute group structures:SimpleObjectAttributeGroup. &lt;/p&gt;&#xA;                &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; It is useful to build&#xA;                complex type bases for further extension. The NIEM distribution proxy schema xsd.xsd&#xA;                provides complex type bases for some of the simple types in the XML Schema&#xA;                namespace. However, the complex types in this proxy schema reuse the local names of&#xA;                the simple types they extend, even though the simple type names may not be&#xA;                NIEM-conformant. Requiring name changes for those NIEM-provided complex type bases&#xA;                would work against user understanding, for those already familiar with the names of&#xA;                the XML Schema namespace simple types being extended. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; already familiar with the names of the&#xA;                XML Schema namespace simple types being extended. &lt;/p&gt;&#xA;                &lt;/body&gt; &lt;/html&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-NDR__Rule_9-1_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-NDR__Rule_9-1_-specification">
                     <body>self.base_Realization.client-&gt;forAll(complexType|self.base_Realization.supplier-&gt;forAll(simpleType|simpleType.name=complexType.name))
                implies
                self.base_Realization.client.oclAsType(Class).ownedAttribute-&gt;isEmpty() </body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDSimpleContent-base_Realization"
                               name="base_Realization"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-6">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Realization"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-11">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-11-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty-base_Property"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-11-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-11-ownedEnd"
                         name="extension_XSDAnyElement"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PSM_Profile-XSDAnyProperty"
                         association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-11">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-11-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID"
                             name="SequenceID">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID-ownedComment"
                             body="An SequenceId Property is implemented in XML schema as a use of the&#xA;              structures:sequenceId property. The name of the property must be &#34;sequenceId&#34;, the&#xA;              type must be integer and the multiplicity must be 1..1. ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID-XSDStructureId"
                          name="XSDStructureId">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID-XSDStructureId-ownedComment"
                                body="A SequenceID Property must have the name &#34;sequenceID&#34;, the type &#34;integer&#34; and&#xA;                multiplicity 1..1.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID-XSDStructureId"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID-XSDStructureId-specification">
                     <body>self.base_Property.name = "sequenceId" and self.base_Property.type.name =
                "integer" and self.base_Property.type.oclIsKindOf(PrimitiveType) and
                self.base_Property.lower = 1 and self.base_Property.upper = 1</body>
                     <language>OCL2.0</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-SequenceID-base_Property"
                               name="base_Property"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PSM_Profile-packagedElement-4">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Property"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode"
                             name="XSDProcessContentsCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-ownedComment"
                             body="XSDProcessContentsCode supports the processContents attribute of the&#xA;              XSDAnyProperty stereotype.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-strict"
                             name="strict">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-strict-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-strict"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-lax"
                             name="lax">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-lax-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-lax"/>
                  </ownedComment>
               </ownedLiteral>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-skip"
                             name="skip">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-skip-ownedComment">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDProcessContentsCode-skip"/>
                  </ownedComment>
               </ownedLiteral>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDDeclaration"
                             name="XSDDeclaration">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDDeclaration-ownedComment"
                             body="The XSDDeclaration stereotype is a specialization of the common References&#xA;              stereotype. However, it is constrained such that its client must be an XSDProperty&#xA;              Property and its supplier must be an XSDProperty Property or a Namepsace Package. By&#xA;              default, the namespace of the global XSDï¿½property declaration referenced by&#xA;              XSDProperty is the namespace of its class. The XSDDeclaration stereotype allows the&#xA;              modeler to specify the namespace a XSDProperty will reference based on the namespace&#xA;              of another XSDProperty or the target namespace of a Namespace Package. Specifically,&#xA;              the client of the XSDDeclaration Realization shall reference the namespace indicated&#xA;              by the supplier of the XSDDeclaration Realization, the client of the maps to one of&#xA;              the following: an attribute use schema component or a particle component whose term&#xA;              property is an element declaration schema component. In the first case, the supplier&#xA;              maps to the attribute declaration schema component for the attribute use component. In&#xA;              the second case, the supplier maps to the element declaration schema component for the&#xA;              particle schema component.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PSM_Profile-XSDDeclaration"/>
               </ownedComment>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_PSM_Profile-XSDDeclaration-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-References"/>
            </packagedElement>
         </packagedElement>
         <packagedElement xmi:type="uml:Profile"
                          xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile"
                          name="NIEM_PIM_Profile"
                          URI="http://www.omg.org/spec/NIEM-UML/20130801/NIEM_PIM_Profile">
            <metamodelReference xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packageImport-2"/>
            <ownedComment xmi:type="uml:Comment"
                          xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-ownedComment"
                          body="The NIEM PIM Profile comprises stereotypes that are used in NIEM PIMs but not NIEM&#xA;            PSMs. Further, the NIEM PIM Profile imports the NIEM Common Profile and, therefore,&#xA;            includes all the stereotypes and metaclasses covered by that profile. In addition, the&#xA;            UML metamodel subset covered by the NIEM PIM Profile also includes the metaclasses&#xA;            Association and AssociationClass, even though they are not specifically extended by any&#xA;            stereotypes in the profile.">
               <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile"/>
            </ownedComment>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packageImport-1"
                           importedPackage="NIEM_UML_Profile-NIEM_Common_Profile"/>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packageImport-2">
               <importedPackage href="http://www.omg.org/spec/UML/20110701/UML.xmi#_0"/>
            </packageImport>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-Augments"
                             name="Augments">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-Augments-ownedComment"
                             body="An Augments Generalization specifies that the special Class is an augmentation&#xA;              type that is restricted to apply to instances of the general Class. ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-Augments"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-Augments-base_Generalization"
                               name="base_Generalization"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-5">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Generalization"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-2">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-2-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-base_Property"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-2-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-2-ownedEnd"
                         name="extension_RoleOf"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf"
                         association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-2">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-2-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel"
                             name="InformationModel">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-ownedComment"
                             body="The contents of an InformationModel Package provide a platform-independent&#xA;              perspective on the structure of information to be exchanged in NIEM messages. Such a&#xA;              model is always taken to represent a NIEM namespace, but it may also be given a&#xA;              default purpose as modeled, independent of the implementation of that namespace. This&#xA;              allows a modeler to identify the intended purposes (e.g., reference, subset, exchange,&#xA;              etc.) of various information models within a set, without having to create a complete&#xA;              MPD model for the set.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel"/>
               </ownedComment>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-generalization"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-Namespace"/>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-base_Package"
                               name="base_Package"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-6">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Package"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-defaultPurpose"
                               name="defaultPurpose"
                               visibility="public"
                               type="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode">
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-defaultPurpose-ownedComment"
                                body="The default purpose for which an information model is intended. If an&#xA;                InformationModel Package is modeled as being included as an artifact in an MPD,&#xA;                then, unless otherwise specified, the purpose of the artifact is by default taken to&#xA;                be the schema purpose code corresponding to the value of the defaultPurpose&#xA;                attribute.">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-defaultPurpose"/>
                  </ownedComment>
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-defaultPurpose-lowerValue"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName"
                             name="ReferenceName">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName-ownedComment"
                             body="The ReferenceName stereotype is used on an Element that has a name that does not&#xA;              conform to the naming conventions required by the NIEM NDR or is otherwise not the&#xA;              desired NIEM name. The NIEMName attribute must provide a name for the Element that&#xA;              conforms to the relevant NDR naming rules for the specific kind of Element to which&#xA;              the stereotype is applied.">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName-base_Element"
                               name="base_Element"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-8">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Element"/>
               </ownedAttribute>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName-NIEMName"
                               name="NIEMName"
                               visibility="public">
                  <type href="http://www.omg.org/spec/UML/20110701/PrimitiveTypes.xmi#String"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName-NIEMName-ownedComment"
                                body="A NIEM NDR-conformant name to be applied to an Element. The NIEMName will&#xA;                override any name generated from the UML name..">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName-NIEMName"/>
                  </ownedComment>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-5">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-5-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-Augments-base_Generalization"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-5-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-5-ownedEnd"
                         name="extension_Augments"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PIM_Profile-Augments"
                         association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-5">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-5-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-6">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-6-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel-base_Package"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-6-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-6-ownedEnd"
                         name="extension_InformationModel"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PIM_Profile-InformationModel"
                         association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-6">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-6-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Enumeration"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode"
                             name="DefaultPurposeCode">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; The&#xA;              possible purposes for an information model. This enumeration provides the allowed&#xA;              values for the defaultPurpose attribute of the InformationModel stereotype. The values&#xA;              correspond to the schema purpose codes for an MPD artifact. &lt;/body&gt;&#xA;              &lt;/html&gt; MPD artifact. &lt;/body&gt; &lt;/html&gt;&#xA;              ml&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode"/>
               </ownedComment>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-subset"
                             name="subset"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-constraint"
                             name="constraint"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-exchange"
                             name="exchange"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-extension"
                             name="extension"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-incremental"
                             name="incremental"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-reference"
                             name="reference"/>
               <ownedLiteral xmi:type="uml:EnumerationLiteral"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-DefaultPurposeCode-replacement"
                             name="replacement"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-8">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-8-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName-base_Element"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-8-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-8-ownedEnd"
                         name="extension_"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PIM_Profile-ReferenceName"
                         association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-8">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-8-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf"
                             name="RoleOf">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-ownedComment"
                             body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;              margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;              &lt;p&gt; The RoleOf stereotype is applied to a Property of a Class&#xA;              representing a NIEM role type, whose type identifies the base type of that role type.&#xA;              A RoleOf Property must be a reference (i.e., have aggregation=none). A NIEM role type&#xA;              is a type that represents a particular function, purpose, usage, or role of an object.&#xA;              &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; usage, or role of an&#xA;              object. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;              &lt;/html&gt; ">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_9-35_"
                          name="NDR [Rule 9-35]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_9-35_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 9-35] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, the name of a role SHALL use the property term RoleOf.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt;&#xA;                Using the property term RoleOf immediately identifies an element as representing a&#xA;                role. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; ement as&#xA;                representing a role. &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;&#xA;                &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_9-35_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_9-35_-specification">
                     <body>This constraint is enforced by the PIM/PSM transformation. The Transformation
                ensures that the "RoleOf" property term becomes part of the target PSM property
                name.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_7-40_"
                          name="NDR [Rule 7-40]">
                  <constrainedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf"/>
                  <ownedComment xmi:type="uml:Comment"
                                xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_7-40_-ownedComment"
                                body="&lt;html&gt; &lt;head&gt; &lt;style&gt; p {padding:0px;&#xA;                margin:0px;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt;&#xA;                &lt;p&gt; &lt;b&gt;[Rule 7-40] (REF, SUB, EXT)&lt;/b&gt;&#xA;                Within the schema, any element with a name beginning with the string RoleOf SHALL&#xA;                represent a base type, of which the containing type represents a role.&#xA;                &lt;/p&gt; &lt;p&gt; &lt;b&gt;Rationale&lt;/b&gt; A&#xA;                RoleOf element references its corresponding base element. The RoleOf label on the&#xA;                reference element ensures that a role object is distinguishable from other objects&#xA;                and its link to the associated base is also distinguishable from the additional&#xA;                properties that are characteristic of this role or that add information.&#xA;                &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; are characteristic of&#xA;                this role or that add information. &lt;/p&gt; &lt;/body&gt;&#xA;                &lt;/html&gt; &lt;/html&gt; ">
                     <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_7-40_"/>
                  </ownedComment>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-NDR__Rule_7-40_-specification">
                     <body>This constraint is implemented by the PIM/PSM transformation. Identifying a
                &lt;Property&gt; as a &lt;&lt;RoleOf&gt;&gt; corresponds to
                the NIEM naming convention used to identify the roleOf...reference and furthermore
                establishes the owning &lt;Classifier&gt; as a NIEM Role.</body>
                     <language>English</language>
                  </specification>
               </ownedRule>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RoleOf-base_Property"
                               name="base_Property"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-2">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Property"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-10">
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-10-ownedEnd"/>
               <memberEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RolePlayedBy-base_Generalization"/>
               <navigableOwnedEnd xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-10-ownedEnd"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-10-ownedEnd"
                         name="extension_"
                         visibility="private"
                         aggregation="composite"
                         type="NIEM_UML_Profile-NIEM_PIM_Profile-RolePlayedBy"
                         association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-10">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-10-ownedEnd-lowerValue"/>
               </ownedEnd>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RolePlayedBy"
                             name="RolePlayedBy">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RolePlayedBy-ownedComment"
                             body="RolePlayedBy Generalization specifies that the special class is to be considered&#xA;              the type of a role that is played by instances of the general class. In the PSM this&#xA;              will map to a property with the &#34;RoleOf&#34; prefix..">
                  <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_PIM_Profile-RolePlayedBy"/>
               </ownedComment>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="NIEM_UML_Profile-NIEM_PIM_Profile-RolePlayedBy-base_Generalization"
                               name="base_Generalization"
                               visibility="private"
                               association="NIEM_UML_Profile-NIEM_PIM_Profile-packagedElement-10">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Generalization"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Stereotype"
                             xmi:id="_17_0_4_1_7b3022e_1377278771338_750079_3474"
                             name="Subsets">
               <ownedComment xmi:type="uml:Comment"
                             xmi:id="_17_0_4_1_7b3022e_1377278958725_591231_3511"
                             body="&#x9;A Realization signifying a NIEM subsetting relationship between a client derived (subset) element and a supplier base (reference) element.  The &lt;&lt;Subsets&gt;&gt; Realization must be between the same meta-types: either Properties, Classifiers, or &lt;&lt;InformationModel&gt;&gt; packages.  The &lt;&lt;Subsets&gt;&gt; Realization must be between elements owned by different &lt;&lt;InformationModel&gt;&gt; packages.  The targetNamespace of the distinct &lt;&lt;InformationModel&gt;&gt; packages must be identical.  The defaultPurpose of client and supplier may be one of the following combinations:  client is subset, supplier is reference; client is reference, supplier is reference; client is extension, supplier is extension; client is constraint, supplier is exchange, subset, extension, or reference">
                  <annotatedElement xmi:idref="_17_0_4_1_7b3022e_1377278771338_750079_3474"/>
               </ownedComment>
               <ownedRule xmi:type="uml:Constraint"
                          xmi:id="_17_0_4_1_7b3022e_1377278976794_270552_3512"
                          name="SubsetNamesMustMatch">
                  <constrainedElement xmi:idref="_17_0_4_1_7b3022e_1377278771338_750079_3474"/>
                  <specification xmi:type="uml:OpaqueExpression"
                                 xmi:id="_17_0_4_1_7b3022e_1377278976794_112773_3513">
                     <body>[OCL2.0]
self.base_Realization.client
    -&gt;union(self.base_Realization.supplier)
    -&gt;forAll(e1,e2|e1.getTargetNamespace()=e2.getTargetNamespace());
[English] The namespace of the subset and reference models must match.</body>
                  </specification>
               </ownedRule>
               <generalization xmi:type="uml:Generalization"
                               xmi:id="_17_0_4_1_7b3022e_1377278782260_763753_3499"
                               general="NIEM_UML_Profile-NIEM_Common_Profile-References"/>
               <ownedAttribute xmi:type="uml:Property"
                               xmi:id="_17_0_4_1_7b3022e_1377278782272_955861_3502"
                               name="base_Realization"
                               visibility="private"
                               association="_17_0_4_1_7b3022e_1377278782272_350641_3501">
                  <type href="http://www.omg.org/spec/UML/20110701/UML.xmi#Realization"/>
               </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Extension"
                             xmi:id="_17_0_4_1_7b3022e_1377278782272_350641_3501">
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1377278782272_955861_3502"/>
               <memberEnd xmi:idref="_17_0_4_1_7b3022e_1377278782272_943829_3503"/>
               <navigableOwnedEnd xmi:idref="_17_0_4_1_7b3022e_1377278782272_943829_3503"/>
               <ownedEnd xmi:type="uml:ExtensionEnd"
                         xmi:id="_17_0_4_1_7b3022e_1377278782272_943829_3503"
                         name="extension_Subsets"
                         visibility="private"
                         aggregation="composite"
                         type="_17_0_4_1_7b3022e_1377278771338_750079_3474"
                         association="_17_0_4_1_7b3022e_1377278782272_350641_3501">
                  <lowerValue xmi:type="uml:LiteralInteger"
                              xmi:id="_17_0_4_1_7b3022e_1377278782272_297425_3504"/>
               </ownedEnd>
            </packagedElement>
         </packagedElement>
         <packagedElement xmi:type="uml:Profile"
                          xmi:id="NIEM_UML_Profile-NIEM_UML_Profile"
                          name="NIEM_UML_Profile"
                          URI="http://www.omg.org/spec/NIEM-UML/20130801">
            <metamodelReference xmi:idref="NIEM_UML_Profile-NIEM_UML_Profile-packageImport-1"/>
            <ownedComment xmi:type="uml:Comment"
                          xmi:id="NIEM_UML_Profile-NIEM_UML_Profile-ownedComment"
                          body="The NIEM UML Profile imports the NIEM PIM Profile, the NIEM PSM Profile and the&#xA;            Model Package Description Profile, so all three of these profiles can effectively be&#xA;            imported just by importing the single NIEM UML Profile.">
               <annotatedElement xmi:idref="NIEM_UML_Profile-NIEM_UML_Profile"/>
            </ownedComment>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_UML_Profile-packageImport-1">
               <importedPackage href="http://www.omg.org/spec/UML/20110701/UML.xmi#_0"/>
            </packageImport>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_UML_Profile-packageImport-2"
                           importedPackage="NIEM_UML_Profile-Model_Package_Description_Profile"/>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_UML_Profile-packageImport-3"
                           importedPackage="NIEM_UML_Profile-NIEM_PSM_Profile"/>
            <packageImport xmi:type="uml:PackageImport"
                           xmi:id="NIEM_UML_Profile-NIEM_UML_Profile-packageImport-4"
                           importedPackage="NIEM_UML_Profile-NIEM_PIM_Profile"/>
         </packagedElement>
      </packagedElement>
   </uml:Model>
</xmi:XMI>
